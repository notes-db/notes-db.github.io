import o from "ink-mde";
import { defineComponent as a, openBlock as r, createElementBlock as c } from "vue";
const p = a({
  name: "Ink",
  emits: ["input", "update:modelValue"],
  props: {
    options: {
      type: Object
    },
    modelValue: {
      type: String
    },
    value: {
      type: String
    },
    version: {
      type: Number,
      default: () => 3,
      validator: (t) => [2, 3].includes(t)
    }
  },
  data() {
    return { instance: void 0 };
  },
  watch: {
    options: {
      deep: !0,
      handler(t, e) {
        var s;
        (s = this.instance) == null || s.reconfigure(t);
      }
    },
    modelValue(t) {
      var e, s;
      ((e = this.instance) == null ? void 0 : e.doc()) !== t && ((s = this.instance) == null || s.update(t));
    },
    value(t) {
      var e, s;
      ((e = this.instance) == null ? void 0 : e.doc()) !== t && ((s = this.instance) == null || s.update(t));
    }
  },
  computed: {
    doc() {
      return (this.version === 3 ? this.modelValue : this.value) || "";
    }
  },
  methods: {
    focus() {
      var t;
      (t = this.instance) == null || t.focus();
    },
    select(t) {
      var e;
      (e = this.instance) == null || e.select(t);
    },
    selections() {
      var t;
      return (t = this.instance) == null ? void 0 : t.selections();
    }
  },
  mounted() {
    var t;
    this.instance = o(this.$refs.ink, {
      ...this.options,
      doc: this.doc,
      hooks: {
        ...(t = this.options) == null ? void 0 : t.hooks,
        afterUpdate: (e) => {
          var s, i;
          this.version === 3 ? this.$emit("update:modelValue", e) : this.$emit("input", e), (i = (s = this.options) == null ? void 0 : s.hooks) != null && i.afterUpdate && this.options.hooks.afterUpdate(e);
        }
      }
    }), this.$refs.ink.addEventListener("input", (e) => {
      e.stopPropagation();
    }), this.instance.focus();
  }
}), d = (t, e) => {
  const s = t.__vccOpts || t;
  for (const [i, n] of e)
    s[i] = n;
  return s;
}, u = { ref: "ink" };
function h(t, e, s, i, n, l) {
  return r(), c("div", u, null, 512);
}
const k = /* @__PURE__ */ d(p, [["render", h]]);
export {
  k as default
};
