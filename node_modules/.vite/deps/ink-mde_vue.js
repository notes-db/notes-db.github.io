import {
  $o,
  Mo
} from "./chunk-J2MAIAKW.js";
import "./chunk-E56Z7H2Z.js";
import "./chunk-DVMAOLTX.js";
import "./chunk-3C3LL5SP.js";
import "./chunk-MMM5GMKO.js";
import "./chunk-F3G6KTHM.js";
import "./chunk-LHKYOM7E.js";
import "./chunk-5PASL2Y3.js";
import "./chunk-P3X5NEON.js";
import "./chunk-5OMH3UOP.js";
import "./chunk-JGHQ5UKI.js";
import "./chunk-M5CQCUKE.js";
import "./chunk-R2NNSHBA.js";
import {
  createElementBlock,
  defineComponent,
  openBlock
} from "./chunk-3R7BVLG6.js";
import "./chunk-THBTSZW5.js";

// node_modules/ink-mde/vue/dist/client.js
var h = defineComponent({
  name: "InkMde",
  emits: ["update:modelValue"],
  props: {
    modelValue: {
      type: String
    },
    options: {
      type: Object
    }
  },
  data() {
    return {
      html: "",
      instance: void 0
    };
  },
  watch: {
    modelValue(t) {
      var n, e;
      ((n = this.instance) == null ? void 0 : n.getDoc()) !== t && ((e = this.instance) == null || e.update(t));
    },
    options: {
      deep: true,
      handler(t, n) {
        var e;
        (e = this.instance) == null || e.reconfigure(t);
      }
    }
  },
  methods: {
    tryInit() {
      var t;
      this.$refs.ink && !this.instance && (this.instance = $o(this.$refs.ink, {
        ...this.options,
        doc: this.modelValue,
        hooks: {
          ...(t = this.options) == null ? void 0 : t.hooks,
          afterUpdate: (n) => {
            var e, i;
            this.$emit("update:modelValue", n), (i = (e = this.options) == null ? void 0 : e.hooks) != null && i.afterUpdate && this.options.hooks.afterUpdate(n);
          }
        }
      }), this.$refs.ink.addEventListener("input", (n) => {
        n.stopPropagation();
      }));
    }
  },
  created() {
    ({}).VITE_SSR && (this.html = Mo(this.options));
  },
  mounted() {
    this.tryInit();
  },
  updated() {
    this.tryInit();
  }
});
var c = (t, n) => {
  const e = t.__vccOpts || t;
  for (const [i, o] of n)
    e[i] = o;
  return e;
};
var l = ["innerHTML"];
function f(t, n, e, i, o, m) {
  return openBlock(), createElementBlock("div", {
    ref: "ink",
    innerHTML: t.html
  }, null, 8, l);
}
var _ = c(h, [["render", f]]);
export {
  _ as default
};
//# sourceMappingURL=ink-mde_vue.js.map
