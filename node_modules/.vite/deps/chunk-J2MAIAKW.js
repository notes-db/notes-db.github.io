import {
  defaultKeymap,
  history,
  historyKeymap,
  indentLess,
  indentMore
} from "./chunk-E56Z7H2Z.js";
import {
  For,
  Show,
  createComponent,
  createContext,
  createEffect,
  createMemo,
  createRenderEffect,
  createSignal,
  delegateEvents,
  getNextElement,
  getNextMarker,
  hydrate,
  insert,
  mergeProps,
  onCleanup,
  onMount,
  render,
  runHydrationEvents,
  setAttribute,
  spread,
  template,
  use,
  useContext
} from "./chunk-DVMAOLTX.js";
import {
  markdown,
  markdownLanguage
} from "./chunk-3C3LL5SP.js";
import {
  HighlightStyle,
  LanguageDescription,
  LanguageSupport,
  StreamLanguage,
  Tag,
  syntaxHighlighting,
  syntaxTree,
  tags
} from "./chunk-5OMH3UOP.js";
import {
  Decoration,
  EditorView,
  ViewPlugin,
  keymap
} from "./chunk-JGHQ5UKI.js";
import {
  Compartment,
  EditorSelection,
  EditorState,
  RangeSet,
  RangeSetBuilder,
  SelectionRange,
  StateField,
  Transaction
} from "./chunk-M5CQCUKE.js";

// node_modules/@codemirror/language-data/dist/index.js
function legacy(parser) {
  return new LanguageSupport(StreamLanguage.define(parser));
}
function sql(dialectName) {
  return import("./dist-2SZYUWBL.js").then((m) => m.sql({ dialect: m[dialectName] }));
}
var languages = [
  LanguageDescription.of({
    name: "C",
    extensions: ["c", "h", "ino"],
    load() {
      return import("./dist-D4GTVCF3.js").then((m) => m.cpp());
    }
  }),
  LanguageDescription.of({
    name: "C++",
    alias: ["cpp"],
    extensions: ["cpp", "c++", "cc", "cxx", "hpp", "h++", "hh", "hxx"],
    load() {
      return import("./dist-D4GTVCF3.js").then((m) => m.cpp());
    }
  }),
  LanguageDescription.of({
    name: "CQL",
    alias: ["cassandra"],
    extensions: ["cql"],
    load() {
      return sql("Cassandra");
    }
  }),
  LanguageDescription.of({
    name: "CSS",
    extensions: ["css"],
    load() {
      return import("./dist-IQ3FJMSY.js").then((m) => m.css());
    }
  }),
  LanguageDescription.of({
    name: "HTML",
    alias: ["xhtml"],
    extensions: ["html", "htm", "handlebars", "hbs"],
    load() {
      return import("./dist-GXSY2HEL.js").then((m) => m.html());
    }
  }),
  LanguageDescription.of({
    name: "Java",
    extensions: ["java"],
    load() {
      return import("./dist-IRQF7XNZ.js").then((m) => m.java());
    }
  }),
  LanguageDescription.of({
    name: "JavaScript",
    alias: ["ecmascript", "js", "node"],
    extensions: ["js", "mjs", "cjs"],
    load() {
      return import("./dist-BYITC4OB.js").then((m) => m.javascript());
    }
  }),
  LanguageDescription.of({
    name: "JSON",
    alias: ["json5"],
    extensions: ["json", "map"],
    load() {
      return import("./dist-YGU2TDNS.js").then((m) => m.json());
    }
  }),
  LanguageDescription.of({
    name: "JSX",
    extensions: ["jsx"],
    load() {
      return import("./dist-BYITC4OB.js").then((m) => m.javascript({ jsx: true }));
    }
  }),
  LanguageDescription.of({
    name: "MariaDB SQL",
    load() {
      return sql("MariaSQL");
    }
  }),
  LanguageDescription.of({
    name: "Markdown",
    extensions: ["md", "markdown", "mkd"],
    load() {
      return import("./dist-PPCJH6AG.js").then((m) => m.markdown());
    }
  }),
  LanguageDescription.of({
    name: "MS SQL",
    load() {
      return sql("MSSQL");
    }
  }),
  LanguageDescription.of({
    name: "MySQL",
    load() {
      return sql("MySQL");
    }
  }),
  LanguageDescription.of({
    name: "PHP",
    extensions: ["php", "php3", "php4", "php5", "php7", "phtml"],
    load() {
      return import("./dist-FGFKYOPH.js").then((m) => m.php());
    }
  }),
  LanguageDescription.of({
    name: "PLSQL",
    extensions: ["pls"],
    load() {
      return sql("PLSQL");
    }
  }),
  LanguageDescription.of({
    name: "PostgreSQL",
    load() {
      return sql("PostgreSQL");
    }
  }),
  LanguageDescription.of({
    name: "Python",
    extensions: ["BUILD", "bzl", "py", "pyw"],
    filename: /^(BUCK|BUILD)$/,
    load() {
      return import("./dist-XJLDZYDI.js").then((m) => m.python());
    }
  }),
  LanguageDescription.of({
    name: "Rust",
    extensions: ["rs"],
    load() {
      return import("./dist-ZL4GQ7ZJ.js").then((m) => m.rust());
    }
  }),
  LanguageDescription.of({
    name: "SQL",
    extensions: ["sql"],
    load() {
      return sql("StandardSQL");
    }
  }),
  LanguageDescription.of({
    name: "SQLite",
    load() {
      return sql("SQLite");
    }
  }),
  LanguageDescription.of({
    name: "TSX",
    extensions: ["tsx"],
    load() {
      return import("./dist-BYITC4OB.js").then((m) => m.javascript({ jsx: true, typescript: true }));
    }
  }),
  LanguageDescription.of({
    name: "TypeScript",
    alias: ["ts"],
    extensions: ["ts"],
    load() {
      return import("./dist-BYITC4OB.js").then((m) => m.javascript({ typescript: true }));
    }
  }),
  LanguageDescription.of({
    name: "WebAssembly",
    extensions: ["wat", "wast"],
    load() {
      return import("./dist-6NC3KZQK.js").then((m) => m.wast());
    }
  }),
  LanguageDescription.of({
    name: "XML",
    alias: ["rss", "wsdl", "xsd"],
    extensions: ["xml", "xsl", "xsd", "svg"],
    load() {
      return import("./dist-NJIAEWG3.js").then((m) => m.xml());
    }
  }),
  LanguageDescription.of({
    name: "APL",
    extensions: ["dyalog", "apl"],
    load() {
      return import("./apl-PDWTE5XY.js").then((m) => legacy(m.apl));
    }
  }),
  LanguageDescription.of({
    name: "PGP",
    alias: ["asciiarmor"],
    extensions: ["asc", "pgp", "sig"],
    load() {
      return import("./asciiarmor-A5UHQWHE.js").then((m) => legacy(m.asciiArmor));
    }
  }),
  LanguageDescription.of({
    name: "ASN.1",
    extensions: ["asn", "asn1"],
    load() {
      return import("./asn1-C5HUPRA7.js").then((m) => legacy(m.asn1({})));
    }
  }),
  LanguageDescription.of({
    name: "Asterisk",
    filename: /^extensions\.conf$/i,
    load() {
      return import("./asterisk-2MG5JH43.js").then((m) => legacy(m.asterisk));
    }
  }),
  LanguageDescription.of({
    name: "Brainfuck",
    extensions: ["b", "bf"],
    load() {
      return import("./brainfuck-7EDISGWM.js").then((m) => legacy(m.brainfuck));
    }
  }),
  LanguageDescription.of({
    name: "Cobol",
    extensions: ["cob", "cpy"],
    load() {
      return import("./cobol-EBUQQNBI.js").then((m) => legacy(m.cobol));
    }
  }),
  LanguageDescription.of({
    name: "C#",
    alias: ["csharp", "cs"],
    extensions: ["cs"],
    load() {
      return import("./clike-AMBSSS3R.js").then((m) => legacy(m.csharp));
    }
  }),
  LanguageDescription.of({
    name: "Clojure",
    extensions: ["clj", "cljc", "cljx"],
    load() {
      return import("./clojure-IC5P6QJ5.js").then((m) => legacy(m.clojure));
    }
  }),
  LanguageDescription.of({
    name: "ClojureScript",
    extensions: ["cljs"],
    load() {
      return import("./clojure-IC5P6QJ5.js").then((m) => legacy(m.clojure));
    }
  }),
  LanguageDescription.of({
    name: "Closure Stylesheets (GSS)",
    extensions: ["gss"],
    load() {
      return import("./css-JSTCEIZI.js").then((m) => legacy(m.gss));
    }
  }),
  LanguageDescription.of({
    name: "CMake",
    extensions: ["cmake", "cmake.in"],
    filename: /^CMakeLists\.txt$/,
    load() {
      return import("./cmake-EC3D2S62.js").then((m) => legacy(m.cmake));
    }
  }),
  LanguageDescription.of({
    name: "CoffeeScript",
    alias: ["coffee", "coffee-script"],
    extensions: ["coffee"],
    load() {
      return import("./coffeescript-5IJ4UJ5H.js").then((m) => legacy(m.coffeeScript));
    }
  }),
  LanguageDescription.of({
    name: "Common Lisp",
    alias: ["lisp"],
    extensions: ["cl", "lisp", "el"],
    load() {
      return import("./commonlisp-Z3HS5AYP.js").then((m) => legacy(m.commonLisp));
    }
  }),
  LanguageDescription.of({
    name: "Cypher",
    extensions: ["cyp", "cypher"],
    load() {
      return import("./cypher-HHJZN5UM.js").then((m) => legacy(m.cypher));
    }
  }),
  LanguageDescription.of({
    name: "Cython",
    extensions: ["pyx", "pxd", "pxi"],
    load() {
      return import("./python-GJ32SRBB.js").then((m) => legacy(m.cython));
    }
  }),
  LanguageDescription.of({
    name: "Crystal",
    extensions: ["cr"],
    load() {
      return import("./crystal-S4VF2GOZ.js").then((m) => legacy(m.crystal));
    }
  }),
  LanguageDescription.of({
    name: "D",
    extensions: ["d"],
    load() {
      return import("./d-X4K3IZQI.js").then((m) => legacy(m.d));
    }
  }),
  LanguageDescription.of({
    name: "Dart",
    extensions: ["dart"],
    load() {
      return import("./clike-AMBSSS3R.js").then((m) => legacy(m.dart));
    }
  }),
  LanguageDescription.of({
    name: "diff",
    extensions: ["diff", "patch"],
    load() {
      return import("./diff-UAEUA5ED.js").then((m) => legacy(m.diff));
    }
  }),
  LanguageDescription.of({
    name: "Dockerfile",
    filename: /^Dockerfile$/,
    load() {
      return import("./dockerfile-XHW6EBOG.js").then((m) => legacy(m.dockerFile));
    }
  }),
  LanguageDescription.of({
    name: "DTD",
    extensions: ["dtd"],
    load() {
      return import("./dtd-CTLXMU3D.js").then((m) => legacy(m.dtd));
    }
  }),
  LanguageDescription.of({
    name: "Dylan",
    extensions: ["dylan", "dyl", "intr"],
    load() {
      return import("./dylan-NTZVP5SE.js").then((m) => legacy(m.dylan));
    }
  }),
  LanguageDescription.of({
    name: "EBNF",
    load() {
      return import("./ebnf-SHN6AQH4.js").then((m) => legacy(m.ebnf));
    }
  }),
  LanguageDescription.of({
    name: "ECL",
    extensions: ["ecl"],
    load() {
      return import("./ecl-JLEHNS3M.js").then((m) => legacy(m.ecl));
    }
  }),
  LanguageDescription.of({
    name: "edn",
    extensions: ["edn"],
    load() {
      return import("./clojure-IC5P6QJ5.js").then((m) => legacy(m.clojure));
    }
  }),
  LanguageDescription.of({
    name: "Eiffel",
    extensions: ["e"],
    load() {
      return import("./eiffel-PPHYN5ZU.js").then((m) => legacy(m.eiffel));
    }
  }),
  LanguageDescription.of({
    name: "Elm",
    extensions: ["elm"],
    load() {
      return import("./elm-RHLQURCP.js").then((m) => legacy(m.elm));
    }
  }),
  LanguageDescription.of({
    name: "Erlang",
    extensions: ["erl"],
    load() {
      return import("./erlang-FLA6RBRZ.js").then((m) => legacy(m.erlang));
    }
  }),
  LanguageDescription.of({
    name: "Esper",
    load() {
      return import("./sql-J5DCZG4E.js").then((m) => legacy(m.esper));
    }
  }),
  LanguageDescription.of({
    name: "Factor",
    extensions: ["factor"],
    load() {
      return import("./factor-SYITI4FM.js").then((m) => legacy(m.factor));
    }
  }),
  LanguageDescription.of({
    name: "FCL",
    load() {
      return import("./fcl-G2OHOH3K.js").then((m) => legacy(m.fcl));
    }
  }),
  LanguageDescription.of({
    name: "Forth",
    extensions: ["forth", "fth", "4th"],
    load() {
      return import("./forth-GW2WOSOF.js").then((m) => legacy(m.forth));
    }
  }),
  LanguageDescription.of({
    name: "Fortran",
    extensions: ["f", "for", "f77", "f90", "f95"],
    load() {
      return import("./fortran-FC5KGOM3.js").then((m) => legacy(m.fortran));
    }
  }),
  LanguageDescription.of({
    name: "F#",
    alias: ["fsharp"],
    extensions: ["fs"],
    load() {
      return import("./mllike-RV5CUP3Z.js").then((m) => legacy(m.fSharp));
    }
  }),
  LanguageDescription.of({
    name: "Gas",
    extensions: ["s"],
    load() {
      return import("./gas-B2JXSH7D.js").then((m) => legacy(m.gas));
    }
  }),
  LanguageDescription.of({
    name: "Gherkin",
    extensions: ["feature"],
    load() {
      return import("./gherkin-QB37PEUR.js").then((m) => legacy(m.gherkin));
    }
  }),
  LanguageDescription.of({
    name: "Go",
    extensions: ["go"],
    load() {
      return import("./go-Z2RQTB22.js").then((m) => legacy(m.go));
    }
  }),
  LanguageDescription.of({
    name: "Groovy",
    extensions: ["groovy", "gradle"],
    filename: /^Jenkinsfile$/,
    load() {
      return import("./groovy-AOY3H3I7.js").then((m) => legacy(m.groovy));
    }
  }),
  LanguageDescription.of({
    name: "Haskell",
    extensions: ["hs"],
    load() {
      return import("./haskell-WW6ZM7A4.js").then((m) => legacy(m.haskell));
    }
  }),
  LanguageDescription.of({
    name: "Haxe",
    extensions: ["hx"],
    load() {
      return import("./haxe-FVN43SBX.js").then((m) => legacy(m.haxe));
    }
  }),
  LanguageDescription.of({
    name: "HXML",
    extensions: ["hxml"],
    load() {
      return import("./haxe-FVN43SBX.js").then((m) => legacy(m.hxml));
    }
  }),
  LanguageDescription.of({
    name: "HTTP",
    load() {
      return import("./http-I6JJZR2B.js").then((m) => legacy(m.http));
    }
  }),
  LanguageDescription.of({
    name: "IDL",
    extensions: ["pro"],
    load() {
      return import("./idl-WXSCAYYE.js").then((m) => legacy(m.idl));
    }
  }),
  LanguageDescription.of({
    name: "JSON-LD",
    alias: ["jsonld"],
    extensions: ["jsonld"],
    load() {
      return import("./javascript-2SXTVRYF.js").then((m) => legacy(m.jsonld));
    }
  }),
  LanguageDescription.of({
    name: "Jinja2",
    extensions: ["j2", "jinja", "jinja2"],
    load() {
      return import("./jinja2-H4CNIND7.js").then((m) => legacy(m.jinja2));
    }
  }),
  LanguageDescription.of({
    name: "Julia",
    extensions: ["jl"],
    load() {
      return import("./julia-NTZRMMDM.js").then((m) => legacy(m.julia));
    }
  }),
  LanguageDescription.of({
    name: "Kotlin",
    extensions: ["kt"],
    load() {
      return import("./clike-AMBSSS3R.js").then((m) => legacy(m.kotlin));
    }
  }),
  LanguageDescription.of({
    name: "LESS",
    extensions: ["less"],
    load() {
      return import("./css-JSTCEIZI.js").then((m) => legacy(m.less));
    }
  }),
  LanguageDescription.of({
    name: "LiveScript",
    alias: ["ls"],
    extensions: ["ls"],
    load() {
      return import("./livescript-OO7OJK22.js").then((m) => legacy(m.liveScript));
    }
  }),
  LanguageDescription.of({
    name: "Lua",
    extensions: ["lua"],
    load() {
      return import("./lua-FOVWNVCL.js").then((m) => legacy(m.lua));
    }
  }),
  LanguageDescription.of({
    name: "mIRC",
    extensions: ["mrc"],
    load() {
      return import("./mirc-VPTBYWQH.js").then((m) => legacy(m.mirc));
    }
  }),
  LanguageDescription.of({
    name: "Mathematica",
    extensions: ["m", "nb", "wl", "wls"],
    load() {
      return import("./mathematica-Z5D2KWXP.js").then((m) => legacy(m.mathematica));
    }
  }),
  LanguageDescription.of({
    name: "Modelica",
    extensions: ["mo"],
    load() {
      return import("./modelica-2CZ4LSHL.js").then((m) => legacy(m.modelica));
    }
  }),
  LanguageDescription.of({
    name: "MUMPS",
    extensions: ["mps"],
    load() {
      return import("./mumps-ULVZILRY.js").then((m) => legacy(m.mumps));
    }
  }),
  LanguageDescription.of({
    name: "Mbox",
    extensions: ["mbox"],
    load() {
      return import("./mbox-6EL7VU5Q.js").then((m) => legacy(m.mbox));
    }
  }),
  LanguageDescription.of({
    name: "Nginx",
    filename: /nginx.*\.conf$/i,
    load() {
      return import("./nginx-JU3VDYR3.js").then((m) => legacy(m.nginx));
    }
  }),
  LanguageDescription.of({
    name: "NSIS",
    extensions: ["nsh", "nsi"],
    load() {
      return import("./nsis-6FOQNRVB.js").then((m) => legacy(m.nsis));
    }
  }),
  LanguageDescription.of({
    name: "NTriples",
    extensions: ["nt", "nq"],
    load() {
      return import("./ntriples-XQPGPWRQ.js").then((m) => legacy(m.ntriples));
    }
  }),
  LanguageDescription.of({
    name: "Objective-C",
    alias: ["objective-c", "objc"],
    extensions: ["m"],
    load() {
      return import("./clike-AMBSSS3R.js").then((m) => legacy(m.objectiveC));
    }
  }),
  LanguageDescription.of({
    name: "Objective-C++",
    alias: ["objective-c++", "objc++"],
    extensions: ["mm"],
    load() {
      return import("./clike-AMBSSS3R.js").then((m) => legacy(m.objectiveCpp));
    }
  }),
  LanguageDescription.of({
    name: "OCaml",
    extensions: ["ml", "mli", "mll", "mly"],
    load() {
      return import("./mllike-RV5CUP3Z.js").then((m) => legacy(m.oCaml));
    }
  }),
  LanguageDescription.of({
    name: "Octave",
    extensions: ["m"],
    load() {
      return import("./octave-JDLN65TE.js").then((m) => legacy(m.octave));
    }
  }),
  LanguageDescription.of({
    name: "Oz",
    extensions: ["oz"],
    load() {
      return import("./oz-NUSKTPW5.js").then((m) => legacy(m.oz));
    }
  }),
  LanguageDescription.of({
    name: "Pascal",
    extensions: ["p", "pas"],
    load() {
      return import("./pascal-ZVKSJQMO.js").then((m) => legacy(m.pascal));
    }
  }),
  LanguageDescription.of({
    name: "Perl",
    extensions: ["pl", "pm"],
    load() {
      return import("./perl-CCAYONAO.js").then((m) => legacy(m.perl));
    }
  }),
  LanguageDescription.of({
    name: "Pig",
    extensions: ["pig"],
    load() {
      return import("./pig-LY53YDFF.js").then((m) => legacy(m.pig));
    }
  }),
  LanguageDescription.of({
    name: "PowerShell",
    extensions: ["ps1", "psd1", "psm1"],
    load() {
      return import("./powershell-O6GHPUOU.js").then((m) => legacy(m.powerShell));
    }
  }),
  LanguageDescription.of({
    name: "Properties files",
    alias: ["ini", "properties"],
    extensions: ["properties", "ini", "in"],
    load() {
      return import("./properties-QWDMBAIP.js").then((m) => legacy(m.properties));
    }
  }),
  LanguageDescription.of({
    name: "ProtoBuf",
    extensions: ["proto"],
    load() {
      return import("./protobuf-32ICFUKR.js").then((m) => legacy(m.protobuf));
    }
  }),
  LanguageDescription.of({
    name: "Puppet",
    extensions: ["pp"],
    load() {
      return import("./puppet-VWUPGELO.js").then((m) => legacy(m.puppet));
    }
  }),
  LanguageDescription.of({
    name: "Q",
    extensions: ["q"],
    load() {
      return import("./q-MDT2YJS5.js").then((m) => legacy(m.q));
    }
  }),
  LanguageDescription.of({
    name: "R",
    alias: ["rscript"],
    extensions: ["r", "R"],
    load() {
      return import("./r-QW4BSJD6.js").then((m) => legacy(m.r));
    }
  }),
  LanguageDescription.of({
    name: "RPM Changes",
    load() {
      return import("./rpm-PJVSD5XD.js").then((m) => legacy(m.rpmChanges));
    }
  }),
  LanguageDescription.of({
    name: "RPM Spec",
    extensions: ["spec"],
    load() {
      return import("./rpm-PJVSD5XD.js").then((m) => legacy(m.rpmSpec));
    }
  }),
  LanguageDescription.of({
    name: "Ruby",
    alias: ["jruby", "macruby", "rake", "rb", "rbx"],
    extensions: ["rb"],
    load() {
      return import("./ruby-YRDN4XZ6.js").then((m) => legacy(m.ruby));
    }
  }),
  LanguageDescription.of({
    name: "SAS",
    extensions: ["sas"],
    load() {
      return import("./sas-NVZWFMVQ.js").then((m) => legacy(m.sas));
    }
  }),
  LanguageDescription.of({
    name: "Sass",
    extensions: ["sass"],
    load() {
      return import("./sass-HLDDG43H.js").then((m) => legacy(m.sass));
    }
  }),
  LanguageDescription.of({
    name: "Scala",
    extensions: ["scala"],
    load() {
      return import("./clike-AMBSSS3R.js").then((m) => legacy(m.scala));
    }
  }),
  LanguageDescription.of({
    name: "Scheme",
    extensions: ["scm", "ss"],
    load() {
      return import("./scheme-FXEBQOIT.js").then((m) => legacy(m.scheme));
    }
  }),
  LanguageDescription.of({
    name: "SCSS",
    extensions: ["scss"],
    load() {
      return import("./css-JSTCEIZI.js").then((m) => legacy(m.sCSS));
    }
  }),
  LanguageDescription.of({
    name: "Shell",
    alias: ["bash", "sh", "zsh"],
    extensions: ["sh", "ksh", "bash"],
    filename: /^PKGBUILD$/,
    load() {
      return import("./shell-OWK64LKF.js").then((m) => legacy(m.shell));
    }
  }),
  LanguageDescription.of({
    name: "Sieve",
    extensions: ["siv", "sieve"],
    load() {
      return import("./sieve-B2QP3F2Z.js").then((m) => legacy(m.sieve));
    }
  }),
  LanguageDescription.of({
    name: "Smalltalk",
    extensions: ["st"],
    load() {
      return import("./smalltalk-INI62IGN.js").then((m) => legacy(m.smalltalk));
    }
  }),
  LanguageDescription.of({
    name: "Solr",
    load() {
      return import("./solr-GEQLQXCM.js").then((m) => legacy(m.solr));
    }
  }),
  LanguageDescription.of({
    name: "SML",
    extensions: ["sml", "sig", "fun", "smackspec"],
    load() {
      return import("./mllike-RV5CUP3Z.js").then((m) => legacy(m.sml));
    }
  }),
  LanguageDescription.of({
    name: "SPARQL",
    alias: ["sparul"],
    extensions: ["rq", "sparql"],
    load() {
      return import("./sparql-IOSLXBUV.js").then((m) => legacy(m.sparql));
    }
  }),
  LanguageDescription.of({
    name: "Spreadsheet",
    alias: ["excel", "formula"],
    load() {
      return import("./spreadsheet-U5EX6KGG.js").then((m) => legacy(m.spreadsheet));
    }
  }),
  LanguageDescription.of({
    name: "Squirrel",
    extensions: ["nut"],
    load() {
      return import("./clike-AMBSSS3R.js").then((m) => legacy(m.squirrel));
    }
  }),
  LanguageDescription.of({
    name: "Stylus",
    extensions: ["styl"],
    load() {
      return import("./stylus-JJH5GXKS.js").then((m) => legacy(m.stylus));
    }
  }),
  LanguageDescription.of({
    name: "Swift",
    extensions: ["swift"],
    load() {
      return import("./swift-2ZWNPLXM.js").then((m) => legacy(m.swift));
    }
  }),
  LanguageDescription.of({
    name: "sTeX",
    load() {
      return import("./stex-AZFX7YTL.js").then((m) => legacy(m.stex));
    }
  }),
  LanguageDescription.of({
    name: "LaTeX",
    alias: ["tex"],
    extensions: ["text", "ltx", "tex"],
    load() {
      return import("./stex-AZFX7YTL.js").then((m) => legacy(m.stex));
    }
  }),
  LanguageDescription.of({
    name: "SystemVerilog",
    extensions: ["v", "sv", "svh"],
    load() {
      return import("./verilog-Z4YUUWSS.js").then((m) => legacy(m.verilog));
    }
  }),
  LanguageDescription.of({
    name: "Tcl",
    extensions: ["tcl"],
    load() {
      return import("./tcl-Y5BLAS5R.js").then((m) => legacy(m.tcl));
    }
  }),
  LanguageDescription.of({
    name: "Textile",
    extensions: ["textile"],
    load() {
      return import("./textile-TOS3ZB76.js").then((m) => legacy(m.textile));
    }
  }),
  LanguageDescription.of({
    name: "TiddlyWiki",
    load() {
      return import("./tiddlywiki-DKQZD2LZ.js").then((m) => legacy(m.tiddlyWiki));
    }
  }),
  LanguageDescription.of({
    name: "Tiki wiki",
    load() {
      return import("./tiki-GGTXM3IY.js").then((m) => legacy(m.tiki));
    }
  }),
  LanguageDescription.of({
    name: "TOML",
    extensions: ["toml"],
    load() {
      return import("./toml-JRGC46PW.js").then((m) => legacy(m.toml));
    }
  }),
  LanguageDescription.of({
    name: "Troff",
    extensions: ["1", "2", "3", "4", "5", "6", "7", "8", "9"],
    load() {
      return import("./troff-ELOSHAIM.js").then((m) => legacy(m.troff));
    }
  }),
  LanguageDescription.of({
    name: "TTCN",
    extensions: ["ttcn", "ttcn3", "ttcnpp"],
    load() {
      return import("./ttcn-4Y7FUU3W.js").then((m) => legacy(m.ttcn));
    }
  }),
  LanguageDescription.of({
    name: "TTCN_CFG",
    extensions: ["cfg"],
    load() {
      return import("./ttcn-cfg-G426V6OP.js").then((m) => legacy(m.ttcnCfg));
    }
  }),
  LanguageDescription.of({
    name: "Turtle",
    extensions: ["ttl"],
    load() {
      return import("./turtle-SXIPCLIM.js").then((m) => legacy(m.turtle));
    }
  }),
  LanguageDescription.of({
    name: "Web IDL",
    extensions: ["webidl"],
    load() {
      return import("./webidl-HJRWWIM2.js").then((m) => legacy(m.webIDL));
    }
  }),
  LanguageDescription.of({
    name: "VB.NET",
    extensions: ["vb"],
    load() {
      return import("./vb-UOQRHWC3.js").then((m) => legacy(m.vb));
    }
  }),
  LanguageDescription.of({
    name: "VBScript",
    extensions: ["vbs"],
    load() {
      return import("./vbscript-RMUOXNJZ.js").then((m) => legacy(m.vbScript));
    }
  }),
  LanguageDescription.of({
    name: "Velocity",
    extensions: ["vtl"],
    load() {
      return import("./velocity-PBPAE5XW.js").then((m) => legacy(m.velocity));
    }
  }),
  LanguageDescription.of({
    name: "Verilog",
    extensions: ["v"],
    load() {
      return import("./verilog-Z4YUUWSS.js").then((m) => legacy(m.verilog));
    }
  }),
  LanguageDescription.of({
    name: "VHDL",
    extensions: ["vhd", "vhdl"],
    load() {
      return import("./vhdl-TN6LNFCS.js").then((m) => legacy(m.vhdl));
    }
  }),
  LanguageDescription.of({
    name: "XQuery",
    extensions: ["xy", "xquery"],
    load() {
      return import("./xquery-NQXKILXQ.js").then((m) => legacy(m.xQuery));
    }
  }),
  LanguageDescription.of({
    name: "Yacas",
    extensions: ["ys"],
    load() {
      return import("./yacas-7MEG32HT.js").then((m) => legacy(m.yacas));
    }
  }),
  LanguageDescription.of({
    name: "YAML",
    alias: ["yml"],
    extensions: ["yaml", "yml"],
    load() {
      return import("./yaml-BUSJEQYV.js").then((m) => legacy(m.yaml));
    }
  }),
  LanguageDescription.of({
    name: "Z80",
    extensions: ["z80"],
    load() {
      return import("./z80-LIKNRR5R.js").then((m) => legacy(m.z80));
    }
  }),
  LanguageDescription.of({
    name: "MscGen",
    extensions: ["mscgen", "mscin", "msc"],
    load() {
      return import("./mscgen-Z2KGCOVZ.js").then((m) => legacy(m.mscgen));
    }
  }),
  LanguageDescription.of({
    name: "X\xF9",
    extensions: ["xu"],
    load() {
      return import("./mscgen-Z2KGCOVZ.js").then((m) => legacy(m.xu));
    }
  }),
  LanguageDescription.of({
    name: "MsGenny",
    extensions: ["msgenny"],
    load() {
      return import("./mscgen-Z2KGCOVZ.js").then((m) => legacy(m.msgenny));
    }
  })
];

// node_modules/ink-mde/dist/index-2c0818e4.js
var Tn = "data-ink-mde-ssr-hydration-marker";
var On = `[${Tn}]`;
var Pn = () => ({});
var qn = ([e]) => {
  const { editor: n } = e();
  n.destroy();
};
var ge = ([e]) => {
  const { editor: n } = e();
  n.hasFocus || n.focus();
};
var We = (e) => {
  const n = e.map((t) => SelectionRange.fromJSON({ anchor: t.start, head: t.end }));
  return EditorSelection.create(n);
};
var Fe = (e) => e.ranges.map((t) => ({
  end: t.anchor < t.head ? t.head : t.anchor,
  start: t.head < t.anchor ? t.head : t.anchor
}));
var ae = ((e) => (e.Auto = "auto", e.Dark = "dark", e.Light = "light", e))(ae || {});
var In = ((e) => (e.Appearance = "appearance", e.Attribution = "attribution", e.Autocomplete = "autocomplete", e.Images = "images", e.ReadOnly = "readonly", e.Spellcheck = "spellcheck", e.Vim = "vim", e))(In || {});
var v = ((e) => (e.Bold = "bold", e.Code = "code", e.CodeBlock = "code_block", e.Heading = "heading", e.Image = "image", e.Italic = "italic", e.Link = "link", e.List = "list", e.OrderedList = "ordered_list", e.Quote = "quote", e.TaskList = "task_list", e))(v || {});
var Rn = ((e) => (e.Completion = "completion", e.Default = "default", e.Grammar = "grammar", e.Language = "language", e))(Rn || {});
var ke = ((e) => (e.End = "end", e.Start = "start", e))(ke || {});
var je = {
  auto: "auto",
  dark: "dark",
  light: "light"
};
var U = {
  completion: "completion",
  default: "default",
  grammar: "grammar",
  language: "language"
};
var A = (e) => ({ ...{
  block: false,
  line: false,
  multiline: false,
  nodes: [],
  prefix: "",
  prefixStates: [],
  suffix: ""
}, ...e });
var Nn = {
  [v.Bold]: A({
    nodes: ["StrongEmphasis"],
    prefix: "**",
    suffix: "**"
  }),
  [v.Code]: A({
    nodes: ["InlineCode"],
    prefix: "`",
    suffix: "`"
  }),
  [v.CodeBlock]: A({
    block: true,
    nodes: ["FencedCode"],
    prefix: "```\n",
    suffix: "\n```"
  }),
  [v.Heading]: A({
    multiline: true,
    nodes: ["ATXHeading1", "ATXHeading2", "ATXHeading3", "ATXHeading4", "ATXHeading5", "ATXHeading6"],
    prefix: "# ",
    prefixStates: ["# ", "## ", "### ", "#### ", "##### ", "###### ", ""]
  }),
  [v.Image]: A({
    nodes: ["Image"],
    prefix: "![](",
    suffix: ")"
  }),
  [v.Italic]: A({
    nodes: ["Emphasis"],
    prefix: "*",
    suffix: "*"
  }),
  [v.Link]: A({
    nodes: ["Link"],
    prefix: "[](",
    suffix: ")"
  }),
  [v.OrderedList]: A({
    line: true,
    multiline: true,
    nodes: ["OrderedList"],
    prefix: "1. "
  }),
  [v.Quote]: A({
    line: true,
    multiline: true,
    nodes: ["Blockquote"],
    prefix: "> "
  }),
  [v.TaskList]: A({
    line: true,
    multiline: true,
    nodes: ["BulletList"],
    prefix: "- [ ] "
  }),
  [v.List]: A({
    line: true,
    multiline: true,
    nodes: ["BulletList"],
    prefix: "- "
  })
};
var Vn = ({ editor: e, selection: n }) => {
  let t = n.start;
  const r = [];
  for (; t <= n.end; ) {
    const o = e.lineBlockAt(t), i = Math.max(n.start, o.from), s = Math.min(n.end, o.to);
    r.push({ start: i, end: s }), t = o.to + 1;
  }
  return r;
};
var Wn = ({ editor: e, formatDefinition: n, selection: t }) => {
  var _a, _b;
  if (!e || !n)
    return t || { start: 0, end: 0 };
  const r = t || Fe(e.state.selection).pop() || { start: 0, end: 0 };
  if (n.block || n.line || n.multiline) {
    const s = e.lineBlockAt(r.start).from, a = e.lineBlockAt(r.end).to;
    return { start: s, end: a };
  }
  const o = ((_a = e.state.wordAt(r.start)) == null ? void 0 : _a.from) || r.start, i = ((_b = e.state.wordAt(r.end)) == null ? void 0 : _b.to) || r.end;
  return { start: o, end: i };
};
var Ue = (e) => e.editor.state.sliceDoc(e.selection.start, e.selection.end);
var Fn = (e, n, t) => Un(e, t).find(({ type: o }) => n.nodes.includes(o.name));
var Un = (e, n) => {
  const t = [];
  return syntaxTree(e.state).iterate({
    from: n.start,
    to: n.end,
    enter: ({ type: r, from: o, to: i }) => {
      t.push({ type: r, from: o, to: i });
    }
  }), t;
};
var we = (e) => {
  const n = Ue(e), t = e.formatDefinition.prefix.length, r = e.formatDefinition.suffix.length * -1 || n.length, o = n.slice(t, r);
  return [{ from: e.selection.start, to: e.selection.end, insert: o }];
};
var Qn = (e) => {
  if (e.node) {
    const n = e.node.from, t = e.node.to;
    return we({ ...e, selection: { start: n, end: t } });
  } else {
    const n = e.formatDefinition.prefix, t = e.formatDefinition.suffix;
    return [
      { from: e.selection.start, insert: n },
      { from: e.selection.end, insert: t }
    ];
  }
};
var Xn = (e) => {
  const n = Vn(e), t = [];
  return n.forEach((r) => {
    const o = Qe({ ...e, selection: r });
    t.push(...o);
  }), t;
};
var Qe = (e) => {
  const n = e.formatDefinition.prefixStates.length > 0, t = Ue(e);
  if (e.node && n) {
    const r = e.formatDefinition.prefixStates.find((o) => t.startsWith(o));
    if (r) {
      const o = e.formatDefinition.prefixStates.indexOf(r), i = e.formatDefinition.prefixStates[o + 1], s = t.replace(new RegExp(`^${r}`), i);
      return [{ from: e.selection.start, to: e.selection.end, insert: s }];
    }
  } else if (e.node && t.startsWith(e.formatDefinition.prefix))
    return we(e);
  return [{ from: e.selection.start, insert: e.formatDefinition.prefix }];
};
var Kn = (e) => {
  if (e.node) {
    const n = e.node.from, t = e.node.to;
    return we({ ...e, selection: { start: n, end: t } });
  } else {
    const { formatDefinition: n, selection: t } = e, r = Array.isArray(n.prefix) ? n.prefix[0] : n.prefix, o = n.suffix;
    return [
      { from: t.start, insert: r },
      { from: t.end, insert: o }
    ];
  }
};
var Yn = (e) => e.formatDefinition.block ? Qn(e) : e.formatDefinition.multiline ? Xn(e) : e.formatDefinition.line ? Qe(e) : Kn(e);
var Xe = ([e], n, { selection: t } = {}) => {
  const { editor: r } = e(), o = Nn[n], i = Wn({ editor: r, formatDefinition: o, selection: t }), s = Fn(r, o, i), l = Yn({
    editor: r,
    formatDefinition: o,
    node: s,
    selection: i
  }), c = l.reduce((y, w) => {
    const M = w.insert.length - ((w.to || w.from) - w.from);
    return y + M;
  }, 0), f = e().editor.state.update({ changes: l, selection: { head: i.start, anchor: i.end + c } });
  e().editor.dispatch(f);
};
var Zn = ([e]) => {
  const { editor: n } = e();
  return n.state.sliceDoc();
};
var $e = ([e]) => {
  const { editor: n } = e();
  return Fe(n.state.selection);
};
var de = ([e, n], t, r, o = false) => {
  const { editor: i } = e();
  let s = r == null ? void 0 : r.start, a = (r == null ? void 0 : r.end) || (r == null ? void 0 : r.start);
  if (typeof s > "u") {
    const c = $e([e, n]).pop();
    s = c.start, a = c.end;
  }
  const l = { changes: { from: s, to: a, insert: t } };
  if (o) {
    const c = s === a ? s + t.length : s, f = s + t.length;
    Object.assign(l, { selection: { anchor: c, head: f } });
  }
  i.dispatch(
    i.state.update(l)
  );
};
var R = {
  array: "[object Array]",
  object: "[object Object]",
  string: "[object String]",
  undefined: "[object Undefined]",
  window: "[object Window]"
};
var Gn = (e) => {
  if (Object.prototype.toString.call(e) === R.object)
    return `[object ${e.constructor.name}]`;
};
var F = (e, n) => Gn(e) === n;
var Jn = (e, n) => {
  const t = /* @__PURE__ */ new WeakMap(), r = (o, i) => t.get(o) || (F(o, R.object) && t.set(o, true), F(i, R.undefined)) ? o : F(o, R.array) && F(i, R.array) ? [...i] : F(o, R.object) && F(i, R.object) ? Object.keys(o).reduce((s, a) => (Object.hasOwnProperty.call(i, a) ? s[a] = r(o[a], i[a]) : s[a] = o[a], s), {}) : i;
  return r(e, n);
};
var ee = (e, n) => Jn(e, n);
var Be = () => document.createElement("div");
var Ke = () => window.matchMedia("(prefers-color-scheme: dark)").matches;
var et = (e) => e === ae.Dark ? true : e === ae.Light ? false : Ke();
var me = (e) => {
  const n = [
    { suffix: "border-radius", default: "0.25rem" },
    { suffix: "color", default: "currentColor" },
    { suffix: "flex-direction", default: "column" },
    { suffix: "font-family", default: "inherit" },
    { suffix: "block-background-color", default: "#121212", light: "#f5f5f5" },
    { suffix: "block-background-color-on-hover", default: "#0f0f0f", light: "#e0e0e0" },
    { suffix: "block-max-height", default: "20rem" },
    { suffix: "block-padding", default: "0.5rem" },
    { suffix: "code-background-color", default: "var(--ink-internal-block-background-color)" },
    { suffix: "code-color", default: "inherit" },
    { suffix: "code-font-family", default: "'Monaco', Courier, monospace" },
    { suffix: "editor-font-size", default: "1em" },
    { suffix: "editor-line-height", default: "2em" },
    { suffix: "editor-padding", default: "0.5rem" },
    { suffix: "inline-padding", default: "0.125rem" },
    { suffix: "modal-position", default: "fixed" },
    { suffix: "syntax-atom-color", default: "#d19a66" },
    { suffix: "syntax-comment-color", default: "#abb2bf" },
    { suffix: "syntax-comment-font-style", default: "italic" },
    { suffix: "syntax-emphasis-color", default: "inherit" },
    { suffix: "syntax-emphasis-font-style", default: "italic" },
    { suffix: "syntax-hashtag-background-color", default: "#222", light: "#eee" },
    { suffix: "syntax-hashtag-color", default: "inherit" },
    { suffix: "syntax-heading-color", default: "inherit" },
    { suffix: "syntax-heading-font-weight", default: "600" },
    { suffix: "syntax-heading1-color", default: "var(--ink-internal-syntax-heading-color, inherit)" },
    { suffix: "syntax-heading1-font-size", default: "1.6em" },
    { suffix: "syntax-heading1-font-weight", default: "600" },
    { suffix: "syntax-heading2-color", default: "var(--ink-internal-syntax-heading-color, inherit)" },
    { suffix: "syntax-heading2-font-size", default: "1.5em" },
    { suffix: "syntax-heading2-font-weight", default: "600" },
    { suffix: "syntax-heading3-color", default: "var(--ink-internal-syntax-heading-color, inherit)" },
    { suffix: "syntax-heading3-font-size", default: "1.4em" },
    { suffix: "syntax-heading3-font-weight", default: "600" },
    { suffix: "syntax-heading4-color", default: "var(--ink-internal-syntax-heading-color, inherit)" },
    { suffix: "syntax-heading4-font-size", default: "1.3em" },
    { suffix: "syntax-heading4-font-weight", default: "600" },
    { suffix: "syntax-heading5-color", default: "var(--ink-internal-syntax-heading-color, inherit)" },
    { suffix: "syntax-heading5-font-size", default: "1.2em" },
    { suffix: "syntax-heading5-font-weight", default: "600" },
    { suffix: "syntax-heading6-color", default: "var(--ink-internal-syntax-heading-color, inherit)" },
    { suffix: "syntax-heading6-font-size", default: "1.1em" },
    { suffix: "syntax-heading6-font-weight", default: "600" },
    { suffix: "syntax-highlight-background-color", default: "#555555" },
    { suffix: "syntax-keyword-color", default: "#c678dd" },
    { suffix: "syntax-link-color", default: "inherit" },
    { suffix: "syntax-meta-color", default: "#abb2bf" },
    { suffix: "syntax-monospace-color", default: "var(--ink-internal-code-color)" },
    { suffix: "syntax-monospace-font-family", default: "var(--ink-internal-code-font-family)" },
    { suffix: "syntax-name-color", default: "#d19a66" },
    { suffix: "syntax-name-label-color", default: "#abb2bf" },
    { suffix: "syntax-name-property-color", default: "#96c0d8" },
    { suffix: "syntax-name-property-definition-color", default: "#e06c75" },
    { suffix: "syntax-name-variable-color", default: "#e06c75" },
    { suffix: "syntax-name-variable-definition-color", default: "#e5c07b" },
    { suffix: "syntax-name-variable-local-color", default: "#d19a66" },
    { suffix: "syntax-name-variable-special-color", default: "inherit" },
    { suffix: "syntax-number-color", default: "#d19a66" },
    { suffix: "syntax-operator-color", default: "#96c0d8" },
    { suffix: "syntax-processing-instruction-color", default: "#444444", light: "#bbbbbb" },
    { suffix: "syntax-punctuation-color", default: "#abb2bf" },
    { suffix: "syntax-strikethrough-color", default: "inherit" },
    { suffix: "syntax-strikethrough-text-decoration", default: "line-through" },
    { suffix: "syntax-string-color", default: "#98c379" },
    { suffix: "syntax-string-special-color", default: "inherit" },
    { suffix: "syntax-strong-color", default: "inherit" },
    { suffix: "syntax-strong-font-weight", default: "600" },
    { suffix: "syntax-url-color", default: "#aaaaaa", light: "#666666" },
    { suffix: "toolbar-group-spacing", default: "2rem" },
    { suffix: "toolbar-item-spacing", default: "0" }
  ], t = !et(e.options.interface.appearance);
  return n.map((r) => {
    const o = t && r.light ? r.light : r.default;
    return `--ink-internal-${r.suffix}: var(--ink-${r.suffix}, ${o});`;
  });
};
var nt = {
  array: "[object Array]",
  asyncFunction: "[object AsyncFunction]",
  boolean: "[object Boolean]",
  function: "[object Function]",
  null: "[object Null]",
  number: "[object Number]",
  object: "[object Object]",
  promise: "[object Promise]",
  string: "[object String]",
  symbol: "[object Symbol]",
  undefined: "[object Undefined]",
  window: "[object Window]"
};
var tt = (e, n) => Object.prototype.toString.call(n) === e;
var Ye = (e) => tt(nt.promise, e);
var ue = (e) => it(e, Ye);
var rt = (e, n) => n.type === e;
var ot = (e, n) => !!e && e in n;
var Q = (e, n) => Ze(n.plugins).reduce((t, r) => (rt(e, r) && (!r.key || ot(r.key, n) && n[r.key]) && t.push(r.value), t), []);
var Ze = (e) => e.reduce((n, t) => Array.isArray(t) ? n.concat(Ze(t)) : n.concat(t), []);
var it = (e, n) => e.reduce((t, r) => (n(r) ? t[0].push(r) : t[1].push(r), t), [[], []]);
var at = (e) => [
  EditorView.theme({}, { dark: e })
];
var st = ([e, n]) => {
  const t = [], [r, o] = lt(e().options), [i, s] = ct(e().options);
  return Math.max(r.length, i.length) > 0 && e().workQueue.enqueue(async () => {
    const a = await fe([e, n]);
    e().editor.dispatch({ effects: a });
  }), markdown({
    base: markdownLanguage,
    codeLanguages: [...languages, ...s],
    extensions: [...t, ...o]
  });
};
var lt = (e) => ue(Q(U.grammar, e));
var ct = (e) => ue(Q(U.language, e));
var dt = async ([e]) => {
  const n = [], t = await Promise.all(Q(U.grammar, e().options)), r = await Promise.all(Q(U.language, e().options));
  return markdown({
    base: markdownLanguage,
    codeLanguages: [...languages, ...r],
    extensions: [...n, ...t]
  });
};
var ut = () => {
  const e = new Compartment();
  return {
    compartment: e,
    initialValue: (n) => e.of(st(n)),
    reconfigure: async (n) => e.reconfigure(await dt(n))
  };
};
var ft = ([e, n]) => e().extensions.map((r) => r.initialValue([e, n]));
var fe = async ([e, n]) => await Promise.all(
  e().extensions.map(async (r) => await r.reconfigure([e, n]))
);
var mt = (e) => {
  const n = new Compartment();
  return {
    compartment: n,
    initialValue: (t) => n.of(e(t)),
    reconfigure: (t) => n.reconfigure(e(t))
  };
};
var pt = (e) => {
  const n = new Compartment();
  return {
    compartment: n,
    initialValue: () => n.of([]),
    reconfigure: (t) => e(t, n)
  };
};
var gt = () => [
  ut(),
  ...kt.map((e) => mt(e)),
  ...ht.map((e) => pt(e))
];
var kt = [
  ([e]) => {
    const [n, t] = ue(Q(U.default, e().options));
    return t;
  },
  ([e]) => {
    const n = e().options.interface.appearance === je.dark, t = e().options.interface.appearance === je.auto;
    return at(n || t && Ke());
  }
];
var ht = [
  async ([e], n) => {
    const [t] = ue(Q(U.default, e().options));
    return t.length > 0 ? n.reconfigure(await Promise.all(t)) : n.reconfigure([]);
  },
  async ([e], n) => {
    if (e().options.interface.autocomplete) {
      const { autocomplete: t } = await import("./autocomplete-3a836e9c-QFQZN7QL.js");
      return n.reconfigure(t(e().options));
    }
    return n.reconfigure([]);
  },
  async ([e], n) => {
    if (e().options.interface.images) {
      const { images: t } = await import("./images-1efb4104-ZXBZ52GF.js");
      return n.reconfigure(t());
    }
    return n.reconfigure([]);
  },
  async ([e], n) => {
    if (e().options.interface.lists) {
      const { lists: t } = await import("./lists-45709764-VZSHZ7NY.js");
      return n.reconfigure(t());
    }
    return n.reconfigure([]);
  },
  async ([e], n) => {
    if (e().options.placeholder) {
      const { placeholder: t } = await import("./placeholder-985d86f2-6NJIRC5H.js");
      return n.reconfigure(t(e().options.placeholder));
    }
    return n.reconfigure([]);
  },
  async ([e], n) => {
    if (e().options.interface.readonly) {
      const { readonly: t } = await import("./readonly-28fcecea-MTYAADUW.js");
      return n.reconfigure(t());
    }
    return n.reconfigure([]);
  },
  async ([e], n) => {
    if (e().options.search) {
      const { search: t } = await import("./search-72d4d407-TJG3XPO6.js");
      return n.reconfigure(t());
    }
    return n.reconfigure([]);
  },
  async ([e], n) => {
    if (e().options.interface.spellcheck) {
      const { spellcheck: t } = await import("./spellcheck-9deeebb9-F2JMML7I.js");
      return n.reconfigure(t());
    }
    return n.reconfigure([]);
  },
  async ([e], n) => {
    if (e().options.vim) {
      const { vim: t } = await import("./vim-96332d1a-DSSFC6QV.js");
      return n.reconfigure(t());
    }
    return n.reconfigure([]);
  }
];
var bt = [
  "Blockquote"
];
var xt = Decoration.line({ attributes: { class: "cm-blockquote" } });
var vt = Decoration.line({ attributes: { class: "cm-blockquote-open" } });
var yt = Decoration.line({ attributes: { class: "cm-blockquote-close" } });
var wt = ViewPlugin.define((e) => ({
  update: () => $t(e)
}), { decorations: (e) => e.update() });
var $t = (e) => {
  const n = new RangeSetBuilder(), t = syntaxTree(e.state);
  for (const r of e.visibleRanges)
    for (let o = r.from; o < r.to; ) {
      const i = e.state.doc.lineAt(o);
      t.iterate({
        enter({ type: s, from: a, to: l }) {
          if (s.name !== "Document" && bt.includes(s.name)) {
            n.add(i.from, i.from, xt);
            const c = e.state.doc.lineAt(a), f = e.state.doc.lineAt(l);
            return c.number === i.number && n.add(i.from, i.from, vt), f.number === i.number && n.add(i.from, i.from, yt), false;
          }
        },
        from: i.from,
        to: i.to
      }), o = i.to + 1;
    }
  return n.finish();
};
var _t = () => [
  wt
];
var Mt = [
  "CodeBlock",
  "FencedCode",
  "HTMLBlock",
  "CommentBlock"
];
var X = {
  "data-enable-grammarly": "false",
  "data-gramm": "false",
  "data-grammarly-skip": "true",
  spellcheck: "false"
};
var St = Decoration.line({ attributes: { ...X, class: "cm-codeblock" } });
var Ct = Decoration.line({ attributes: { ...X, class: "cm-codeblock-open" } });
var Lt = Decoration.line({ attributes: { ...X, class: "cm-codeblock-close" } });
var Et = Decoration.mark({ attributes: { ...X, class: "cm-code" } });
var jt = Decoration.mark({ attributes: { ...X, class: "cm-code cm-code-open" } });
var Bt = Decoration.mark({ attributes: { ...X, class: "cm-code cm-code-close" } });
var At = ViewPlugin.define((e) => ({
  update: () => zt(e)
}), { decorations: (e) => e.update() });
var zt = (e) => {
  const n = new RangeSetBuilder(), t = syntaxTree(e.state);
  for (const r of e.visibleRanges)
    for (let o = r.from; o < r.to; ) {
      const i = e.state.doc.lineAt(o);
      let s;
      t.iterate({
        enter({ type: a, from: l, to: c }) {
          if (a.name !== "Document")
            if (Mt.includes(a.name)) {
              n.add(i.from, i.from, St);
              const f = e.state.doc.lineAt(l), y = e.state.doc.lineAt(c);
              return f.number === i.number && n.add(i.from, i.from, Ct), y.number === i.number && n.add(i.from, i.from, Lt), false;
            } else
              a.name === "InlineCode" ? s = { from: l, to: c, innerFrom: l, innerTo: c } : a.name === "CodeMark" && (l === s.from ? (s.innerFrom = c, n.add(l, c, jt)) : c === s.to && (s.innerTo = l, n.add(s.innerFrom, s.innerTo, Et), n.add(l, c, Bt)));
        },
        from: i.from,
        to: i.to
      }), o = i.to + 1;
    }
  return n.finish();
};
var Ht = () => [
  At
];
var Dt = () => [
  EditorView.editorAttributes.of({
    class: "ink-mde-container"
  }),
  EditorView.contentAttributes.of({
    class: "ink-mde-editor-content"
  })
];
var Tt = () => [
  ...Dt()
];
var Ot = [
  {
    key: "Tab",
    run: ({ state: e, dispatch: n }) => e.selection.ranges.some((t) => !t.empty) ? indentMore({ state: e, dispatch: n }) : (n(
      e.update(e.replaceSelection("  "), {
        scrollIntoView: true,
        annotations: Transaction.userEvent.of("input")
      })
    ), true),
    shift: indentLess
  }
];
var Pt = () => keymap.of([
  ...Ot,
  ...defaultKeymap,
  ...historyKeymap
]);
var qt = () => EditorView.lineWrapping;
var It = () => [
  syntaxHighlighting(
    HighlightStyle.define([
      {
        tag: tags.atom,
        color: "var(--ink-internal-syntax-atom-color)"
      },
      {
        tag: tags.meta,
        color: "var(--ink-internal-syntax-meta-color)"
      },
      {
        tag: tags.emphasis,
        color: "var(--ink-internal-syntax-emphasis-color)",
        fontStyle: "var(--ink-internal-syntax-emphasis-font-style)"
      },
      {
        tag: tags.strong,
        color: "var(--ink-internal-syntax-strong-color)",
        fontWeight: "var(--ink-internal-syntax-strong-font-weight)"
      },
      {
        tag: tags.strikethrough,
        color: "var(--ink-internal-syntax-strikethrough-color)",
        textDecoration: "var(--ink-internal-syntax-strikethrough-text-decoration)"
      },
      {
        tag: tags.comment,
        color: "var(--ink-internal-syntax-comment-color)",
        fontStyle: "var(--ink-internal-syntax-comment-font-style)"
      },
      {
        tag: tags.monospace,
        color: "var(--ink-internal-syntax-code-color)",
        fontFamily: "var(--ink-internal-syntax-code-font-family)"
      },
      {
        tag: tags.name,
        color: "var(--ink-internal-syntax-name-color)"
      },
      {
        tag: tags.labelName,
        color: "var(--ink-internal-syntax-name-label-color)"
      },
      {
        tag: tags.propertyName,
        color: "var(--ink-internal-syntax-name-property-color)"
      },
      {
        tag: tags.definition(tags.propertyName),
        color: "var(--ink-internal-syntax-name-property-definition-color)"
      },
      {
        tag: tags.variableName,
        color: "var(--ink-internal-syntax-name-variable-color)"
      },
      {
        tag: tags.definition(tags.variableName),
        color: "var(--ink-internal-syntax-name-variable-definition-color)"
      },
      {
        tag: tags.local(tags.variableName),
        color: "var(--ink-internal-syntax-name-variable-local-color)"
      },
      {
        tag: tags.special(tags.variableName),
        color: "var(--ink-internal-syntax-name-variable-special-color)"
      },
      {
        tag: tags.heading,
        color: "var(--ink-internal-syntax-heading-color)",
        fontWeight: "var(--ink-internal-syntax-heading-font-weight)"
      },
      {
        tag: tags.heading1,
        color: "var(--ink-internal-syntax-heading1-color)",
        fontSize: "var(--ink-internal-syntax-heading1-font-size)",
        fontWeight: "var(--ink-internal-syntax-heading1-font-weight)"
      },
      {
        tag: tags.heading2,
        color: "var(--ink-internal-syntax-heading2-color)",
        fontSize: "var(--ink-internal-syntax-heading2-font-size)",
        fontWeight: "var(--ink-internal-syntax-heading2-font-weight)"
      },
      {
        tag: tags.heading3,
        color: "var(--ink-internal-syntax-heading3-color)",
        fontSize: "var(--ink-internal-syntax-heading3-font-size)",
        fontWeight: "var(--ink-internal-syntax-heading3-font-weight)"
      },
      {
        tag: tags.heading4,
        color: "var(--ink-internal-syntax-heading4-color)",
        fontSize: "var(--ink-internal-syntax-heading4-font-size)",
        fontWeight: "var(--ink-internal-syntax-heading4-font-weight)"
      },
      {
        tag: tags.heading5,
        color: "var(--ink-internal-syntax-heading5-color)",
        fontSize: "var(--ink-internal-syntax-heading5-font-size)",
        fontWeight: "var(--ink-internal-syntax-heading5-font-weight)"
      },
      {
        tag: tags.heading6,
        color: "var(--ink-internal-syntax-heading6-color)",
        fontSize: "var(--ink-internal-syntax-heading6-font-size)",
        fontWeight: "var(--ink-internal-syntax-heading6-font-weight)"
      },
      {
        tag: tags.keyword,
        color: "var(--ink-internal-syntax-keyword-color)"
      },
      {
        tag: tags.number,
        color: "var(--ink-internal-syntax-number-color)"
      },
      {
        tag: tags.operator,
        color: "var(--ink-internal-syntax-operator-color)"
      },
      {
        tag: tags.punctuation,
        color: "var(--ink-internal-syntax-punctuation-color)"
      },
      {
        tag: tags.link,
        color: "var(--ink-internal-syntax-link-color)"
      },
      {
        tag: tags.url,
        color: "var(--ink-internal-syntax-url-color)"
      },
      {
        tag: tags.string,
        color: "var(--ink-internal-syntax-string-color)"
      },
      {
        tag: tags.special(tags.string),
        color: "var(--ink-internal-syntax-string-special-color)"
      },
      {
        tag: tags.processingInstruction,
        color: "var(--ink-internal-syntax-processing-instruction-color)"
      }
    ])
  )
];
var Rt = (e) => {
  if (e.length > 0)
    return We(e);
};
var Ge = ([e, n]) => EditorState.create({
  doc: e().options.doc,
  selection: Rt(e().options.selections),
  extensions: [
    _t(),
    Ht(),
    history(),
    Tt(),
    Pt(),
    qt(),
    It(),
    ...ft([e, n])
  ]
});
var Nt = ([e, n], t) => {
  n(ee(e(), { options: { doc: t } })), e().editor.setState(Ge([e, n]));
};
var Vt = ([e]) => e().options;
var Wt = async ([e, n], t) => {
  const { workQueue: r } = e();
  return r.enqueue(async () => {
    n(ee(e(), { options: t }));
    const o = await fe([e, n]);
    e().editor.dispatch({ effects: o });
  });
};
var Je = (e, n = {}) => {
  if (n.selections)
    return en(e, n.selections);
  if (n.selection)
    return he(e, n.selection);
  if (n.at)
    return Ft(e, n.at);
};
var Ft = (e, n) => {
  const [t] = e;
  if (n === ke.Start)
    return he(e, { start: 0, end: 0 });
  if (n === ke.End) {
    const r = t().editor.state.doc.length;
    return he(e, { start: r, end: r });
  }
};
var en = ([e], n) => {
  const { editor: t } = e();
  t.dispatch(
    t.state.update({
      selection: We(n)
    })
  );
};
var he = (e, n) => en(e, [n]);
var Ut = ([e], n) => {
  const { editor: t } = e();
  t.dispatch(
    t.state.update({
      changes: {
        from: 0,
        to: t.state.doc.length,
        insert: n
      }
    })
  );
};
var Qt = ([e, n], { after: t, before: r, selection: o }) => {
  const { editor: i } = e(), s = o || $e([e, n]).pop() || { start: 0, end: 0 }, a = i.state.sliceDoc(s.start, s.end);
  de([e, n], `${r}${a}${t}`, s), Je([e, n], { selections: [{ start: s.start + r.length, end: s.end + r.length }] });
};
var Xt = (e, n) => {
  const t = {
    callbacks: {
      fulfilled: [],
      rejected: [],
      settled: []
    },
    status: "pending"
  }, r = (a, { resolve: l, reject: c }) => () => {
    try {
      const f = a(t.value);
      Promise.resolve(f).then(l, c);
    } catch (f) {
      c(f);
    }
  }, o = (a) => {
    t.status === "pending" && (t.status = "rejected", t.value = a, t.callbacks.rejected.forEach((l) => l()), t.callbacks.settled.forEach((l) => l()));
  }, i = (a) => {
    t.status === "pending" && (t.status = "fulfilled", t.value = a, t.callbacks.fulfilled.forEach((l) => l()), t.callbacks.settled.forEach((l) => l()));
  }, s = (a, l) => new Promise((c, f) => {
    t.status === "pending" && (a && t.callbacks.fulfilled.push(r(a, { resolve: c, reject: f })), l && t.callbacks.rejected.push(r(l, { resolve: void 0, reject: f }))), t.status === "fulfilled" && a && r(a, { resolve: c, reject: f })(), t.status === "rejected" && l && r(l, { resolve: void 0, reject: f })();
  });
  return queueMicrotask(() => {
    try {
      n(i, o);
    } catch (a) {
      o(a);
    }
  }), {
    ...e,
    [Symbol.toStringTag]: "awaitable",
    catch: s.bind(void 0, void 0),
    finally: (a) => new Promise((l, c) => {
      t.status === "pending" && t.callbacks.settled.push(r(a, { resolve: l, reject: c })), t.status === "fulfilled" && (a(), l(t.value)), t.status === "rejected" && (a(), c(t.value));
    }),
    then: s
  };
};
var nn = (e) => {
  const n = {
    destroy: qn.bind(void 0, e),
    focus: ge.bind(void 0, e),
    format: Xe.bind(void 0, e),
    getDoc: Zn.bind(void 0, e),
    insert: de.bind(void 0, e),
    load: Nt.bind(void 0, e),
    options: Vt.bind(void 0, e),
    reconfigure: Wt.bind(void 0, e),
    select: Je.bind(void 0, e),
    selections: $e.bind(void 0, e),
    update: Ut.bind(void 0, e),
    wrap: Qt.bind(void 0, e)
  };
  return Xt(n, (t, r) => {
    try {
      const [o] = e;
      o().workQueue.enqueue(() => t(n));
    } catch (o) {
      r(o);
    }
  });
};
var Kt = (e, n) => {
  const t = e[n];
  return t ? typeof t == "function" ? t() : Promise.resolve(t) : new Promise((r, o) => {
    (typeof queueMicrotask == "function" ? queueMicrotask : setTimeout)(o.bind(null, new Error("Unknown variable dynamic import: " + n)));
  });
};
var re = new Proxy({}, {
  get: (e, n, t) => e[n] ? e[n] : e[n] = (async () => {
    const { importer: r } = await Kt(Object.assign({ "./importers/katex.ts": () => import("./katex-5761b211-GV33ZDFD.js") }), `./importers/${n}.ts`), o = await r();
    return e[n] = o, o;
  })()
});
var Yt = (e, n) => {
  if (!re[e])
    return console.error("[katex] module is not resolvable");
  if ("then" in re[e])
    return Promise.resolve(re[e]).then(n);
  n(re[e]);
};
var Zt = (e) => on({
  block: true,
  side: -1,
  ...e
});
var tn = (e) => Decoration.line({
  ...e,
  type: "line"
});
var Gt = (e) => Decoration.mark({
  ...e,
  type: "mark"
});
var rn = (e) => {
  const n = e.eq || ((t) => e.id ? e.id === t.id : false);
  return {
    compare: n,
    destroy: () => {
    },
    eq: n,
    estimatedHeight: -1,
    ignoreEvent: () => true,
    toDOM: () => document.createElement("span"),
    updateDOM: () => false,
    ...e
  };
};
var on = (e) => Decoration.widget({
  block: false,
  side: 0,
  ...e,
  widget: rn({
    ...e.widget
  }),
  type: "widget"
});
var ie = (e, n) => {
  var _a, _b;
  const t = [];
  return syntaxTree(e).iterate({
    enter: (r) => {
      if (n.nodes.includes(r.type.name)) {
        const o = n.onMatch(e, r);
        if (!o)
          return;
        Array().concat(o).forEach((s) => {
          if (s.spec.type === "line") {
            const a = tn({ ...s.spec, node: { ...r } });
            for (let l = e.doc.lineAt(r.from); l.from < r.to; l = e.doc.lineAt(l.to + 1))
              t.push(a.range(l.from));
          }
          if (s.spec.type === "mark") {
            const a = Gt({ ...s.spec, node: { ...r } }).range(r.from, r.to);
            t.push(a);
          }
          if (s.spec.type === "widget") {
            const a = on({ ...s.spec, node: { ...r } }).range(r.from);
            t.push(a);
          }
        });
      }
    },
    from: (_a = n.range) == null ? void 0 : _a.from,
    to: (_b = n.range) == null ? void 0 : _b.to
  }), t.sort((r, o) => r.from - o.from);
};
var Jt = (e, n, t) => {
  const r = [], o = e.iter(), i = [], s = [];
  for (; o.value; )
    i.push({ ...o }), o.next();
  n.changes.iterChangedRanges((c, f, y, w) => {
    i.forEach(($) => {
      if ($.value) {
        const P = $.value.spec.node.to - $.value.spec.node.from, q = $.from, I = $.from + P;
        er(q, I, y, w) && s.push($);
      }
    });
    const M = { from: y, to: w };
    r.push(...ie(n.state, { ...t, range: M }));
  });
  const a = i.filter((c) => !s.includes(c)).flatMap((c) => {
    var _a;
    const f = (_a = c.value) == null ? void 0 : _a.range(c.from);
    return f ? [f] : [];
  });
  return r.push(...a), r.sort((c, f) => c.from - f.from);
};
var er = (e, n, t, r) => Math.max(e, t) <= Math.min(n, r);
var Ae = (e) => StateField.define({
  create(n) {
    return RangeSet.of(ie(n, e));
  },
  update(n, t) {
    if (t.reconfigured || t.effects.length > 0)
      return RangeSet.of(ie(t.state, e));
    const r = n.map(t.changes);
    return t.docChanged ? e.optimize ? RangeSet.of(Jt(r, t, e)) : RangeSet.of(ie(t.state, e)) : r;
  },
  provide(n) {
    return EditorView.decorations.from(n);
  }
});
var nr = (e) => Tag.define(e);
var tr = (e) => e.charCodeAt(0);
var K = (e) => _e(e, [tags.processingInstruction]);
var _e = (e, n = []) => {
  const t = nr();
  return {
    node: ar({
      name: e,
      style: [t, ...n]
    }),
    tag: t
  };
};
var rr = (e) => e;
var or = (e) => e;
var ir = (e) => e;
var ar = (e) => e;
var J = {
  dollarSign: tr("$")
};
var sr = /\$.*?\$/;
var lr = /\$(?<math>.*?)\$/;
var se = _e("MathInline");
var le = K("MathInlineMark");
var Me = K("MathInlineMarkOpen");
var Se = K("MathInlineMarkClose");
var cr = or({
  name: se.node.name,
  parse: (e, n, t) => {
    var _a;
    if (n !== J.dollarSign)
      return -1;
    const r = e.slice(t, e.end);
    if (!sr.test(r))
      return -1;
    const o = r.match(lr);
    if (!((_a = o == null ? void 0 : o.groups) == null ? void 0 : _a.math))
      return -1;
    const i = o.groups.math.length;
    return e.addElement(
      e.elt(
        se.node.name,
        t,
        t + i + 2,
        [
          e.elt(
            le.node.name,
            t,
            t + 1,
            [
              e.elt(
                Me.node.name,
                t,
                t + 1
              )
            ]
          ),
          e.elt(
            le.node.name,
            t + i + 1,
            t + i + 2,
            [
              e.elt(
                Se.node.name,
                t + i + 1,
                t + i + 2
              )
            ]
          )
        ]
      )
    );
  }
});
var an = _e("MathBlock");
var be = K("MathBlockMark");
var sn = K("MathBlockMarkOpen");
var ln = K("MathBlockMarkClose");
var dr = rr({
  name: "MathBlock",
  parse: (e, n) => {
    if (n.next !== J.dollarSign || n.text.charCodeAt(n.pos + 1) !== J.dollarSign)
      return false;
    const t = e.lineStart + n.pos, r = t + n.text.length;
    for (; e.nextLine(); )
      if (n.next === J.dollarSign && n.text.charCodeAt(n.pos + 1) === J.dollarSign) {
        const o = e.lineStart + n.pos, i = o + n.text.length;
        e.addElement(
          e.elt(
            an.node.name,
            t,
            i,
            [
              e.elt(
                be.node.name,
                t,
                r,
                [
                  e.elt(
                    sn.node.name,
                    t,
                    r
                  )
                ]
              ),
              e.elt(
                be.node.name,
                o,
                i,
                [
                  e.elt(
                    ln.node.name,
                    o,
                    i
                  )
                ]
              )
            ]
          )
        ), e.nextLine();
        break;
      }
    return true;
  }
});
var ur = ir({
  defineNodes: [
    se.node,
    le.node,
    Se.node,
    Me.node,
    an.node,
    be.node,
    sn.node,
    ln.node
  ],
  parseBlock: [
    dr
  ],
  parseInline: [
    cr
  ]
});
var ze = (e, n) => {
  Yt("katex", (t) => {
    t.render(e, n, { output: "html", throwOnError: false });
  });
};
var fr = () => [
  _o({
    key: "katex",
    type: U.grammar,
    value: async () => ur
  }),
  _o({
    key: "katex",
    value: async () => Ae({
      nodes: ["MathBlock", "MathBlockMarkClose", "MathBlockMarkOpen"],
      onMatch: (e, n) => {
        const t = ["ink-mde-line-math-block"];
        return n.name === "MathBlockMarkOpen" && t.push("ink-mde-line-math-block-open"), n.name === "MathBlockMarkClose" && t.push("ink-mde-line-math-block-close"), tn({
          attributes: {
            class: t.join(" ")
          }
        });
      },
      optimize: false
    })
  }),
  _o({
    key: "katex",
    value: async () => Ae({
      nodes: ["MathBlock"],
      onMatch: (e, n) => {
        const t = e.sliceDoc(n.from, n.to).split(`
`).slice(1, -1).join(`
`);
        if (t)
          return Zt({
            widget: rn({
              id: t,
              toDOM: () => {
                const r = document.createElement("div"), o = document.createElement("div");
                return r.className = "ink-mde-block-widget-container", o.className = "ink-mde-block-widget ink-mde-katex-target", r.appendChild(o), ze(t, o), r;
              },
              updateDOM: (r) => {
                const o = r.querySelector(".ink-mde-katex-target");
                return o ? (ze(t, o), true) : false;
              }
            })
          });
      },
      optimize: false
    })
  }),
  _o({
    key: "katex",
    value: async () => syntaxHighlighting(
      HighlightStyle.define([
        {
          tag: [se.tag, le.tag],
          backgroundColor: "var(--ink-internal-block-background-color)"
        },
        {
          tag: [Se.tag],
          backgroundColor: "var(--ink-internal-block-background-color)",
          borderRadius: "0 var(--ink-internal-border-radius) var(--ink-internal-border-radius) 0",
          paddingRight: "var(--ink-internal-inline-padding)"
        },
        {
          tag: [Me.tag],
          backgroundColor: "var(--ink-internal-block-background-color)",
          borderRadius: "var(--ink-internal-border-radius) 0 0 var(--ink-internal-border-radius)",
          paddingLeft: "var(--ink-internal-inline-padding)"
        }
      ])
    )
  }),
  _o({
    key: "katex",
    value: async () => EditorView.theme({
      ".ink-mde-line-math-block": {
        backgroundColor: "var(--ink-internal-block-background-color)",
        padding: "0 var(--ink-internal-block-padding) !important"
      },
      ".ink-mde-line-math-block-open": {
        borderRadius: "var(--ink-internal-border-radius) var(--ink-internal-border-radius) 0 0"
      },
      ".ink-mde-line-math-block-close": {
        borderRadius: "0 0 var(--ink-internal-border-radius) var(--ink-internal-border-radius)"
      }
    })
  })
];
var mr = () => {
  const e = {
    queue: [],
    workload: 0
  }, n = async () => {
    const t = e.queue.pop();
    t && (await t(), e.workload--, await n());
  };
  return {
    enqueue: (t) => new Promise((r, o) => {
      const i = async () => {
        try {
          await t(), r();
        } catch (s) {
          o(s);
        }
      };
      e.queue.push(i), e.workload++, !(e.workload > 1) && n();
    })
  };
};
var xe = () => {
  const e = {
    doc: "",
    files: {
      clipboard: false,
      dragAndDrop: false,
      handler: () => {
      },
      injectMarkup: true,
      types: ["image/*"]
    },
    hooks: {
      afterUpdate: () => {
      },
      beforeUpdate: () => {
      }
    },
    interface: {
      appearance: ae.Auto,
      attribution: true,
      autocomplete: false,
      images: false,
      lists: false,
      readonly: false,
      spellcheck: true,
      toolbar: false
    },
    katex: false,
    placeholder: "",
    plugins: [
      fr()
    ],
    readability: false,
    search: true,
    selections: [],
    toolbar: {
      bold: true,
      code: true,
      codeBlock: true,
      heading: true,
      image: true,
      italic: true,
      link: true,
      list: true,
      orderedList: true,
      quote: true,
      taskList: true,
      upload: false
    },
    vim: false
  };
  return {
    doc: "",
    editor: {},
    extensions: gt(),
    options: e,
    root: Be(),
    target: Be(),
    workQueue: mr()
  };
};
var pr = (e) => ee(xe(), e);
var Ce = (e, n = {}) => {
  const [t, r] = createSignal(pr({ ...n, doc: e.doc || "", options: e }));
  return [t, r];
};
var gr = `.ink-drop-zone{align-items:center;background-color:#00000080;color:var(--ink-internal-color);display:flex;inset:0;justify-content:center;position:var(--ink-internal-modal-position);z-index:100}.ink-drop-zone:not(.visible){display:none}.ink-drop-zone-modal{background-color:var(--ink-internal-block-background-color);border-radius:var(--ink-internal-border-radius);box-sizing:border-box;height:100%;max-height:20rem;max-width:40rem;padding:1rem;position:relative;width:100%}.ink-drop-zone-hide{cursor:pointer;height:1.75rem;position:absolute;right:.25rem;top:.25rem;width:1.75rem}.ink-drop-zone-hide svg{background-color:var(--ink-internal-block-background-color)}.ink-drop-zone-droppable-area{align-items:center;border:.2rem dashed var(--ink-internal-color);border-radius:.125rem;box-sizing:border-box;display:flex;flex-direction:column;font-size:1.25em;gap:1rem;height:100%;justify-content:center;padding:1rem;text-align:center}.ink-drop-zone-file-preview{align-items:center;display:flex;flex-wrap:wrap;gap:.5rem;max-width:25.5rem}.ink-drop-zone-file-preview-image{border:.125rem solid #222;border-radius:.125rem;box-sizing:border-box;height:6rem;object-fit:cover;padding:.5rem;width:6rem}
`;
var kr = template("<span>uploading files...</span>", 2);
var hr = template('<div class="ink-drop-zone"><style></style><div class="ink-drop-zone-modal"><div class="ink-drop-zone-droppable-area"><div class="ink-drop-zone-file-preview"></div><!#><!/></div><div class="ink-drop-zone-hide"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg></div></div></div>', 18);
var br = template('<img class="ink-drop-zone-file-preview-image">', 1);
var xr = template("<span>drop files here</span>", 2);
var vr = () => {
  const [e, n] = createSignal(0), [t, r] = createSignal([]), [o, i] = createSignal(false), [s, a] = createSignal(false), [l, c] = Y(), f = () => {
    a(false);
  }, y = (b) => {
    if (l().options.files.dragAndDrop) {
      b.preventDefault(), b.stopPropagation();
      const _ = b.dataTransfer;
      (_ == null ? void 0 : _.files) ? I(_.files) : (n(0), a(false), r([]));
    }
  }, w = (b) => {
    l().options.files.dragAndDrop && (b.preventDefault(), n(e() + 1), a(true));
  }, M = (b) => {
    l().options.files.dragAndDrop && (b.preventDefault(), n(e() - 1), e() === 0 && a(false));
  }, $ = (b) => {
    l().options.files.dragAndDrop && (b.preventDefault(), a(true));
  }, P = (b) => {
    l().options.files.dragAndDrop && (b.preventDefault(), n(0), a(false));
  }, q = (b) => {
    if (l().options.files.clipboard) {
      b.preventDefault();
      const _ = b.clipboardData;
      (_ == null ? void 0 : _.files) && _.files.length > 0 && I(_.files);
    }
  }, I = (b) => {
    Array.from(b).forEach((_) => {
      r([...t(), _]);
    }), i(true), a(true), Promise.resolve(l().options.files.handler(b)).then((_) => {
      if (l().options.files.injectMarkup && _) {
        const Z = `![](${_})`;
        de([l, c], Z);
      }
    }).finally(() => {
      n(0), i(false), a(false), r([]);
    });
  };
  return onMount(() => {
    document.addEventListener("dragenter", w), document.addEventListener("dragleave", M), document.addEventListener("dragover", $), document.addEventListener("drop", P), l().root.addEventListener("paste", q);
  }), onCleanup(() => {
    document.removeEventListener("dragenter", w), document.removeEventListener("dragleave", M), document.removeEventListener("dragover", $), document.removeEventListener("drop", P), l().root.removeEventListener("paste", q);
  }), (() => {
    const b = getNextElement(hr), _ = b.firstChild, Z = _.nextSibling, W = Z.firstChild, k = W.firstChild, D = k.nextSibling, [C, T] = getNextMarker(D.nextSibling), O = W.nextSibling;
    return _.textContent = gr, W.addEventListener("drop", y), insert(k, createComponent(For, {
      get each() {
        return t().slice(0, 8);
      },
      children: (S) => (() => {
        const B = getNextElement(br);
        return createRenderEffect((L) => {
          const z = S.name, H = URL.createObjectURL(S);
          return z !== L._v$ && setAttribute(B, "alt", L._v$ = z), H !== L._v$2 && setAttribute(B, "src", L._v$2 = H), L;
        }, {
          _v$: void 0,
          _v$2: void 0
        }), B;
      })()
    })), insert(W, createComponent(Show, {
      get when() {
        return o();
      },
      get fallback() {
        return getNextElement(xr);
      },
      get children() {
        return getNextElement(kr);
      }
    }), C, T), O.$$click = f, createRenderEffect(() => b.classList.toggle("visible", !!s())), runHydrationEvents(), b;
  })();
};
delegateEvents(["click"]);
var yr = ([e, n]) => {
  const t = new EditorView({
    dispatch: (r) => {
      const { options: o } = e(), i = r.newDoc.toString();
      o.hooks.beforeUpdate(i), t.update([r]), r.docChanged && (n({ ...e(), doc: i }), o.hooks.afterUpdate(i));
    },
    state: Ge([e, n])
  });
  return t;
};
var wr = () => {
  const [e, n] = Y(), t = yr([e, n]), {
    workQueue: r
  } = e();
  return n(ee(e(), {
    editor: t
  })), r.enqueue(async () => {
    const o = await fe([e, n]);
    t.dispatch({
      effects: o
    });
  }), t.dom;
};
var $r = template('<button class="ink-button" type="button"></button>', 2);
var E = (e) => (() => {
  const n = getNextElement($r);
  return n.$$click = (t) => e.onclick(t), insert(n, () => e.children), runHydrationEvents(), n;
})();
delegateEvents(["click"]);
var _r = `.ink-mde .ink-mde-toolbar{background-color:var(--ink-internal-block-background-color);color:inherit;display:flex;flex-shrink:0;overflow-x:auto;padding:.25rem}.ink-mde .ink-mde-toolbar .ink-mde-container{display:flex;gap:var(--ink-internal-toolbar-group-spacing)}.ink-mde .ink-mde-toolbar-group{display:flex;gap:var(--ink-internal-toolbar-item-spacing)}.ink-mde .ink-mde-toolbar .ink-button{align-items:center;background:none;border:none;border-radius:var(--ink-internal-border-radius);color:inherit;cursor:pointer;display:flex;height:2.25rem;justify-content:center;padding:.4rem;width:2.25rem}.ink-mde .ink-mde-toolbar .ink-button:hover{background-color:var(--ink-internal-block-background-color-on-hover)}.ink-mde .ink-mde-toolbar .ink-button>*{align-items:center;display:flex;height:100%}
`;
var Mr = template('<svg viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-miterlimit="5" stroke-linecap="round" stroke-linejoin="round"><path d="M6 4V10M6 16V10M6 10H14M14 10V4M14 10V16"></path></svg>', 4);
var Sr = template('<svg viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-width="1.5" stroke-miterlimit="5" stroke-linecap="round" stroke-linejoin="round"><path d="M6.5 10H10.5C12.1569 10 13.5 11.3431 13.5 13C13.5 14.6569 12.1569 16 10.5 16H6.5V4H9.5C11.1569 4 12.5 5.34315 12.5 7C12.5 8.65686 11.1569 10 9.5 10"></path></svg>', 4);
var Cr = template('<svg viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-miterlimit="5" stroke-linecap="round" stroke-linejoin="round"><path d="M11 4L9 16M13 4H9M7 16H11"></path></svg>', 4);
var oe = template('<div class="ink-mde-toolbar-group"><!#><!/><!#><!/><!#><!/></div>', 8);
var Lr = template('<svg viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-miterlimit="5" stroke-linecap="round" stroke-linejoin="round"><path d="M2.00257 16H17.9955M2.00055 4H18M7 10H18.0659M2 8.5V11.4999C2.4 11.5 2.5 11.5 2.5 11.5V11V10.5M4 8.5V11.4999H4.5V11V10.5"></path></svg>', 4);
var Er = template('<svg viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-miterlimit="5" stroke-linecap="round" stroke-linejoin="round"><path d="M13 4L7 16"></path><path d="M5 7L2 10L5 13"></path><path d="M15 7L18 10L15 13"></path></svg>', 8);
var jr = template('<svg viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-miterlimit="5" stroke-linecap="round" stroke-linejoin="round"><path d="M7 4L8 6"></path></svg>', 4);
var Br = template('<svg viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-miterlimit="5" stroke-linecap="round" stroke-linejoin="round"><path d="M7 16H17.8294"></path><path d="M2 16H4"></path><path d="M7 10H17.8294"></path><path d="M2 10H4"></path><path d="M7 4H17.8294"></path><path d="M2 4H4"></path></svg>', 14);
var Ar = template('<svg viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-miterlimit="5" stroke-linecap="round" stroke-linejoin="round"><path d="M7 16H18"></path><path d="M2 17.0242C2.48314 17.7569 3.94052 17.6154 3.99486 16.7919C4.05315 15.9169 3.1975 16.0044 2.99496 16.0044M2.0023 14.9758C2.48544 14.2431 3.94282 14.3846 3.99716 15.2081C4.05545 16.0831 3.1998 16.0002 2.99726 16.0002"></path><path d="M7 10H18"></path><path d="M2.00501 11.5H4M2.00193 8.97562C2.48449 8.24319 3.9401 8.38467 3.99437 9.20777C4.05259 10.0825 2.04342 10.5788 2 11.4996"></path><path d="M7 4H18"></path><path d="M2 5.5H4M2.99713 5.49952V2.5L2.215 2.93501"></path></svg>', 14);
var zr = template('<svg viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-miterlimit="5" stroke-linecap="round" stroke-linejoin="round"><path d="M7 16H17.8294"></path><path d="M5 15L3 17L2 16"></path><path d="M7 10H17.8294"></path><path d="M5 9L3 11L2 10"></path><path d="M7 4H17.8294"></path><path d="M5 3L3 5L2 4"></path></svg>', 14);
var Hr = template('<svg viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-miterlimit="5" stroke-linecap="round" stroke-linejoin="round"><path d="M9.12127 10.881C10.02 11.78 11.5237 11.7349 12.4771 10.7813L15.2546 8.00302C16.2079 7.04937 16.253 5.54521 15.3542 4.6462C14.4555 3.74719 12.9512 3.79174 11.9979 4.74539L10.3437 6.40007M10.8787 9.11903C9.97997 8.22002 8.47626 8.26509 7.52288 9.21874L4.74545 11.997C3.79208 12.9506 3.74701 14.4548 4.64577 15.3538C5.54452 16.2528 7.04876 16.2083 8.00213 15.2546L9.65633 13.5999"></path></svg>', 4);
var Dr = template('<svg viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-miterlimit="5" stroke-linecap="round" stroke-linejoin="round"><rect x="2" y="4" width="16" height="12" rx="1"></rect><path d="M7.42659 7.67597L13.7751 13.8831M2.00208 12.9778L7.42844 7.67175"></path><path d="M11.9119 12.0599L14.484 9.54443L17.9973 12.9785"></path><path d="M10.9989 7.95832C11.551 7.95832 11.9986 7.52072 11.9986 6.98092C11.9986 6.44113 11.551 6.00354 10.9989 6.00354C10.4468 6.00354 9.99921 6.44113 9.99921 6.98092C9.99921 7.52072 10.4468 7.95832 10.9989 7.95832Z"></path></svg>', 10);
var Tr = template('<svg viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-miterlimit="5" stroke-linecap="round" stroke-linejoin="round"><path d="M10 13V4M10 4L13 7M10 4L7 7"></path><path d="M2 13V15C2 15.5523 2.44772 16 3 16H17C17.5523 16 18 15.5523 18 15V13"></path></svg>', 6);
var Or = template('<input type="file">', 1);
var Pr = template('<div class="ink-mde-toolbar"><style></style><div class="ink-mde-container"><!#><!/><!#><!/><!#><!/><!#><!/></div></div>', 14);
var qr = () => {
  const [e, n] = Y(), [t, r] = createSignal(), o = (a) => {
    Xe([e, n], a), ge([e, n]);
  }, i = (a) => {
    const l = a.target;
    (l == null ? void 0 : l.files) && Promise.resolve(e().options.files.handler(l.files)).then((c) => {
      if (c) {
        const f = `![](${c})`;
        de([e, n], f), ge([e, n]);
      }
    });
  }, s = () => {
    var _a;
    (_a = t()) == null ? void 0 : _a.click();
  };
  return (() => {
    const a = getNextElement(Pr), l = a.firstChild, c = l.nextSibling, f = c.firstChild, [y, w] = getNextMarker(f.nextSibling), M = y.nextSibling, [$, P] = getNextMarker(M.nextSibling), q = $.nextSibling, [I, b] = getNextMarker(q.nextSibling), _ = I.nextSibling, [Z, W] = getNextMarker(_.nextSibling);
    return l.textContent = _r, insert(c, createComponent(Show, {
      get when() {
        return e().options.toolbar.heading || e().options.toolbar.bold || e().options.toolbar.italic;
      },
      get children() {
        const k = getNextElement(oe), D = k.firstChild, [C, T] = getNextMarker(D.nextSibling), O = C.nextSibling, [S, B] = getNextMarker(O.nextSibling), L = S.nextSibling, [z, H] = getNextMarker(L.nextSibling);
        return insert(k, createComponent(Show, {
          get when() {
            return e().options.toolbar.heading;
          },
          get children() {
            return createComponent(E, {
              onclick: () => o(v.Heading),
              get children() {
                return getNextElement(Mr);
              }
            });
          }
        }), C, T), insert(k, createComponent(Show, {
          get when() {
            return e().options.toolbar.bold;
          },
          get children() {
            return createComponent(E, {
              onclick: () => o(v.Bold),
              get children() {
                return getNextElement(Sr);
              }
            });
          }
        }), S, B), insert(k, createComponent(Show, {
          get when() {
            return e().options.toolbar.italic;
          },
          get children() {
            return createComponent(E, {
              onclick: () => o(v.Italic),
              get children() {
                return getNextElement(Cr);
              }
            });
          }
        }), z, H), k;
      }
    }), y, w), insert(c, createComponent(Show, {
      get when() {
        return e().options.toolbar.quote || e().options.toolbar.codeBlock || e().options.toolbar.code;
      },
      get children() {
        const k = getNextElement(oe), D = k.firstChild, [C, T] = getNextMarker(D.nextSibling), O = C.nextSibling, [S, B] = getNextMarker(O.nextSibling), L = S.nextSibling, [z, H] = getNextMarker(L.nextSibling);
        return insert(k, createComponent(Show, {
          get when() {
            return e().options.toolbar.quote;
          },
          get children() {
            return createComponent(E, {
              onclick: () => o(v.Quote),
              get children() {
                return getNextElement(Lr);
              }
            });
          }
        }), C, T), insert(k, createComponent(Show, {
          get when() {
            return e().options.toolbar.codeBlock;
          },
          get children() {
            return createComponent(E, {
              onclick: () => o(v.CodeBlock),
              get children() {
                return getNextElement(Er);
              }
            });
          }
        }), S, B), insert(k, createComponent(Show, {
          get when() {
            return e().options.toolbar.code;
          },
          get children() {
            return createComponent(E, {
              onclick: () => o(v.Code),
              get children() {
                return getNextElement(jr);
              }
            });
          }
        }), z, H), k;
      }
    }), $, P), insert(c, createComponent(Show, {
      get when() {
        return e().options.toolbar.list || e().options.toolbar.orderedList || e().options.toolbar.taskList;
      },
      get children() {
        const k = getNextElement(oe), D = k.firstChild, [C, T] = getNextMarker(D.nextSibling), O = C.nextSibling, [S, B] = getNextMarker(O.nextSibling), L = S.nextSibling, [z, H] = getNextMarker(L.nextSibling);
        return insert(k, createComponent(Show, {
          get when() {
            return e().options.toolbar.list;
          },
          get children() {
            return createComponent(E, {
              onclick: () => o(v.List),
              get children() {
                return getNextElement(Br);
              }
            });
          }
        }), C, T), insert(k, createComponent(Show, {
          get when() {
            return e().options.toolbar.orderedList;
          },
          get children() {
            return createComponent(E, {
              onclick: () => o(v.OrderedList),
              get children() {
                return getNextElement(Ar);
              }
            });
          }
        }), S, B), insert(k, createComponent(Show, {
          get when() {
            return e().options.toolbar.taskList;
          },
          get children() {
            return createComponent(E, {
              onclick: () => o(v.TaskList),
              get children() {
                return getNextElement(zr);
              }
            });
          }
        }), z, H), k;
      }
    }), I, b), insert(c, createComponent(Show, {
      get when() {
        return e().options.toolbar.link || e().options.toolbar.image || e().options.toolbar.upload;
      },
      get children() {
        const k = getNextElement(oe), D = k.firstChild, [C, T] = getNextMarker(D.nextSibling), O = C.nextSibling, [S, B] = getNextMarker(O.nextSibling), L = S.nextSibling, [z, H] = getNextMarker(L.nextSibling);
        return insert(k, createComponent(Show, {
          get when() {
            return e().options.toolbar.link;
          },
          get children() {
            return createComponent(E, {
              onclick: () => o(v.Link),
              get children() {
                return getNextElement(Hr);
              }
            });
          }
        }), C, T), insert(k, createComponent(Show, {
          get when() {
            return e().options.toolbar.image;
          },
          get children() {
            return createComponent(E, {
              onclick: () => o(v.Image),
              get children() {
                return getNextElement(Dr);
              }
            });
          }
        }), S, B), insert(k, createComponent(Show, {
          get when() {
            return e().options.toolbar.upload;
          },
          get children() {
            return createComponent(E, {
              onclick: s,
              get children() {
                return [getNextElement(Tr), (() => {
                  const ne = getNextElement(Or);
                  return use(r, ne), ne.addEventListener("change", i), ne.style.setProperty("display", "none"), ne;
                })()];
              }
            });
          }
        }), z, H), k;
      }
    }), Z, W), a;
  })();
};
var Le = 225;
var Ir = (e, n = Le) => {
  const t = Vr(e, n), r = Wr(e), o = Nr(e), i = Rr(e);
  return [t, r, o, i].join(" | ");
};
var Rr = (e) => `${Fr(e)} chars`;
var Nr = (e) => `${Ur(e)} lines`;
var Vr = (e, n = Le) => {
  const t = Qr(e, n), r = Math.floor(t), o = Math.floor(t % 1 * 60);
  return r === 0 ? `${o}s read` : `${r}m ${o}s to read`;
};
var Wr = (e) => `${cn(e)} words`;
var Fr = (e) => e.length;
var Ur = (e) => e.split(/\n/).length;
var Qr = (e, n = Le) => cn(e) / n;
var cn = (e) => {
  const n = e.replace(/[']/g, "").replace(/[^\w\d]+/g, " ").trim();
  return n ? n.split(/\s+/).length : 0;
};
var Xr = template('<div class="ink-mde-readability"><span></span></div>', 4);
var Kr = template("<span>&nbsp;|</span>", 2);
var Yr = template('<div class="ink-mde-attribution"><span>&nbsp;powered by <a class="ink-mde-attribution-link" href="https://github.com/davidmyersdev/ink-mde" rel="noopener noreferrer" target="_blank">ink-mde</a></span></div>', 6);
var Zr = template('<div class="ink-mde-details"><div class="ink-mde-container"><div class="ink-mde-details-content"><!#><!/><!#><!/><!#><!/></div></div></div>', 12);
var Gr = () => {
  const [e] = Y();
  return (() => {
    const n = getNextElement(Zr), t = n.firstChild, r = t.firstChild, o = r.firstChild, [i, s] = getNextMarker(o.nextSibling), a = i.nextSibling, [l, c] = getNextMarker(a.nextSibling), f = l.nextSibling, [y, w] = getNextMarker(f.nextSibling);
    return insert(r, createComponent(Show, {
      get when() {
        return e().options.readability;
      },
      get children() {
        const M = getNextElement(Xr), $ = M.firstChild;
        return insert($, () => Ir(e().doc)), M;
      }
    }), i, s), insert(r, createComponent(Show, {
      get when() {
        return createMemo(() => !!e().options.readability)() && e().options.interface.attribution;
      },
      get children() {
        return getNextElement(Kr);
      }
    }), l, c), insert(r, createComponent(Show, {
      get when() {
        return e().options.interface.attribution;
      },
      get children() {
        return getNextElement(Yr);
      }
    }), y, w), n;
  })();
};
var Jr = `.ink-mde{border:2px solid var(--ink-internal-block-background-color);border-radius:var(--ink-internal-border-radius);color:var(--ink-internal-color, inherit);display:flex;flex-direction:var(--ink-internal-flex-direction, column)}.ink-mde .cm-tooltip{background-color:var(--ink-internal-block-background-color);border-radius:var(--ink-internal-border-radius);font-family:inherit;padding:.25rem}.ink-mde .cm-tooltip.cm-tooltip-autocomplete ul{font-family:inherit}.ink-mde .cm-tooltip.cm-tooltip-autocomplete ul li.ink-tooltip-option{border-radius:var(--ink-internal-border-radius);padding:.25rem}.ink-mde .cm-tooltip.cm-tooltip-autocomplete ul li.ink-tooltip-option[aria-selected]{background-color:#96969640}.ink-mde .cm-completionLabel{font-family:inherit}.ink-mde,.ink-mde *{box-sizing:border-box}.ink-mde span{display:inline-block}.ink-mde,.ink-mde .ink-mde-editor{display:flex;flex-direction:column;flex-grow:1;flex-shrink:1;min-height:0}.ink-mde .ink-mde-editor{overflow:auto;padding:.5rem}.ink-mde .ink-mde-toolbar,.ink-mde .ink-mde-details{display:flex;flex-grow:0;flex-shrink:0}.ink-mde .ink-mde-details{background-color:var(--ink-internal-block-background-color);display:flex;padding:.5rem}.ink-mde .ink-mde-details-content{color:inherit;display:flex;filter:brightness(.75);flex-wrap:wrap;font-size:.75em;justify-content:flex-end}.ink-mde .ink-mde-attribution{display:flex;justify-content:flex-end}.ink-mde .ink-mde-attribution-link{color:currentColor;font-weight:600;text-decoration:none}.ink-mde .ink-mde-container{margin-left:auto;margin-right:auto;width:100%}.ink-mde .ink-mde-search-panel{background-color:var(--ink-internal-block-background-color);border-radius:.25rem;padding:.25rem;position:absolute;right:.25rem;top:.25rem;width:clamp(10rem,30%,100%)}.ink-mde .ink-mde-search-panel:focus-within{outline-color:#6495ed;outline-style:solid}.ink-mde .ink-mde-search-input{background-color:transparent;border:none;border-radius:.25rem;color:inherit;font-size:inherit;outline:none;width:100%}.ink-mde .ink-mde-task-toggle{cursor:pointer;height:1rem;line-height:2em;margin:0 .25rem 0 0;position:relative;top:-1px;vertical-align:middle;width:1rem}.ink-mde .cm-editor{display:flex;flex-direction:column;position:relative}.ink-mde .cm-panels{background-color:unset;border:unset;z-index:10}.ink-mde .cm-searchMatch{background-color:#6495ed50}.ink-mde .cm-searchMatch-selected{background-color:#6495edcc}.ink-mde .cm-scroller{align-items:flex-start;display:flex;font-family:var(--ink-internal-font-family);font-size:var(--ink-internal-editor-font-size);line-height:var(--ink-internal-editor-line-height);overflow-x:auto;position:relative}.ink-mde .cm-content{display:block;flex-grow:2;flex-shrink:0;margin:0;outline:none;padding:0;white-space:pre;word-wrap:normal}.ink-mde .cm-lineWrapping{flex-shrink:1;overflow-wrap:anywhere;white-space:break-spaces;word-break:break-word}.ink-mde .cm-line{font-family:var(--ink-internal-font-family);padding:0}.ink-mde .cm-line.cm-blockquote{background-color:var(--ink-internal-block-background-color);border-left:.25rem solid currentColor;padding:0 var(--ink-internal-block-padding)}.ink-mde .cm-line.cm-blockquote.cm-blockquote-open{border-top-left-radius:var(--ink-internal-border-radius);border-top-right-radius:var(--ink-internal-border-radius);padding-top:var(--ink-internal-block-padding)}.ink-mde .cm-line.cm-blockquote.cm-blockquote-close{border-bottom-left-radius:var(--ink-internal-border-radius);border-bottom-right-radius:var(--ink-internal-border-radius);padding-bottom:var(--ink-internal-block-padding)}.ink-mde .cm-line.cm-codeblock{background-color:var(--ink-internal-block-background-color);font-family:var(--ink-internal-code-font-family);padding:0 var(--ink-internal-block-padding)}.ink-mde .cm-line.cm-codeblock.cm-codeblock-open{border-radius:var(--ink-internal-border-radius) var(--ink-internal-border-radius) 0 0;padding-top:var(--ink-internal-block-padding)}.ink-mde .cm-line.cm-codeblock.cm-codeblock-close{border-radius:0 0 var(--ink-internal-border-radius) var(--ink-internal-border-radius);padding-bottom:var(--ink-internal-block-padding)}.ink-mde .cm-line .cm-code{background-color:var(--ink-internal-block-background-color);font-family:var(--ink-internal-code-font-family);padding:var(--ink-internal-inline-padding) 0}.ink-mde .cm-line .cm-code.cm-code-open{border-radius:var(--ink-internal-border-radius) 0 0 var(--ink-internal-border-radius);padding-left:var(--ink-internal-inline-padding)}.ink-mde .cm-line .cm-code.cm-code-close{border-radius:0 var(--ink-internal-border-radius) var(--ink-internal-border-radius) 0;padding-right:var(--ink-internal-inline-padding)}.ink-mde .cm-image-backdrop{background-color:var(--ink-internal-block-background-color)}.ink-mde .ink-mde-block-widget-container{padding:.5rem 0}.ink-mde .ink-mde-block-widget{background-color:var(--ink-internal-block-background-color);border-radius:var(--ink-internal-border-radius);padding:var(--ink-internal-block-padding)}
`;
var eo = template("<style> </style>", 2);
var no = () => {
  const [e, n] = Y(), [t, r] = createSignal(me(e()));
  return createEffect(() => {
    r(me(e()));
  }), onMount(() => {
    const o = window.matchMedia("(prefers-color-scheme: dark)"), i = (s) => {
      const {
        editor: a,
        root: l,
        workQueue: c
      } = e();
      l.isConnected ? c.enqueue(async () => {
        const f = await fe([e, n]);
        a.dispatch({
          effects: f
        }), r(me(e()));
      }) : o.removeEventListener("change", i);
    };
    o.addEventListener("change", i);
  }), (() => {
    const o = getNextElement(eo), i = o.firstChild;
    return createRenderEffect(() => i.data = `.ink {
  ${t().join(`
  `)}
}
${Jr}`), o;
  })();
};
var to = template('<div class="ink ink-mde"><!#><!/><!#><!/><!#><!/><div class="ink-mde-editor"></div><!#><!/></div>', 12);
var ro = () => {
  const [e, n] = Y(), t = (r) => {
    n(ee(e(), {
      root: r
    }));
  };
  return (() => {
    const r = getNextElement(to), o = r.firstChild, [i, s] = getNextMarker(o.nextSibling), a = i.nextSibling, [l, c] = getNextMarker(a.nextSibling), f = l.nextSibling, [y, w] = getNextMarker(f.nextSibling), M = y.nextSibling, $ = M.nextSibling, [P, q] = getNextMarker($.nextSibling);
    return use(t, r), spread(r, mergeProps(Pn), false, true), insert(r, createComponent(no, {}), i, s), insert(r, createComponent(Show, {
      get when() {
        return e().options.files.clipboard || e().options.files.dragAndDrop;
      },
      get children() {
        return createComponent(vr, {});
      }
    }), l, c), insert(r, createComponent(Show, {
      get when() {
        return e().options.interface.toolbar;
      },
      get children() {
        return createComponent(qr, {});
      }
    }), y, w), insert(M, createComponent(wr, {})), insert(r, createComponent(Show, {
      get when() {
        return e().options.readability || e().options.interface.attribution;
      },
      get children() {
        return createComponent(Gr, {
          store: [e, n]
        });
      }
    }), P, q), runHydrationEvents(), r;
  })();
};
var dn = createContext([() => xe(), (e) => typeof e == "function" ? e(xe()) : e]);
var oo = (e) => createComponent(dn.Provider, {
  get value() {
    return e.store;
  },
  get children() {
    return e.children;
  }
});
var Y = () => useContext(dn);
var un = (e) => createComponent(oo, {
  get store() {
    return e.store;
  },
  get children() {
    return createComponent(ro, {
      get store() {
        return e.store;
      }
    });
  }
});
var io = template('<div class="ink-mde-textarea"></div>', 2);
var ao = (e, n = {}) => {
  const t = Ce(n);
  return lo(), hydrate(() => createComponent(un, {
    store: t
  }), e), nn(t);
};
var $o = (e, n = {}) => e.querySelector(On) ? ao(e, n) : fn(e, n);
var so = ({
  key: e = "",
  type: n,
  value: t
}) => new Proxy({
  key: e,
  type: n || "default"
}, {
  get: (r, o, i) => o === "value" && !r[o] ? (r.value = t(), Ye(r.value) ? r.value.then((s) => r.value = s) : r.value) : r[o]
});
var _o = so;
var fn = (e, n = {}) => {
  const t = Ce(n);
  return render(() => createComponent(un, {
    store: t
  }), e), nn(t);
};
var Mo = (e = {}) => (Ce(e), "");
var lo = () => {
  let e, n;
  e = window._$HY || (window._$HY = {
    events: [],
    completed: /* @__PURE__ */ new WeakSet(),
    r: {}
  }), n = (t) => t && t.hasAttribute && (t.hasAttribute("data-hk") ? t : n(t.host && t.host instanceof Node ? t.host : t.parentNode)), ["click", "input"].forEach((t) => document.addEventListener(t, (r) => {
    let o = r.composedPath && r.composedPath()[0] || r.target, i = n(o);
    i && !e.completed.has(i) && e.events.push([i, r]);
  })), e.init = (t, r) => {
    e.r[t] = [new Promise((o, i) => r = o), r];
  }, e.set = (t, r, o) => {
    (o = e.r[t]) && o[1](r), e.r[t] = [r];
  }, e.unset = (t) => {
    delete e.r[t];
  }, e.load = (t, r) => {
    if (r = e.r[t])
      return r[0];
  };
};

export {
  U,
  ue,
  Q,
  $o,
  Mo
};
//# sourceMappingURL=chunk-J2MAIAKW.js.map
