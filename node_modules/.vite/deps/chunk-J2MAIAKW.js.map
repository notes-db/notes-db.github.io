{
  "version": 3,
  "sources": ["../../@codemirror/language-data/dist/index.js", "../../ink-mde/src/constants.ts", "../../ink-mde/src/api/destroy.ts", "../../ink-mde/src/api/focus.ts", "../../ink-mde/src/vendor/adapters/selections.ts", "../../ink-mde/types/values.ts", "../../ink-mde/src/api/format.ts", "../../ink-mde/src/api/get_doc.ts", "../../ink-mde/src/api/selections.ts", "../../ink-mde/src/api/insert.ts", "../../ink-mde/src/utils/merge.ts", "../../ink-mde/src/ui/utils.ts", "../../ink-mde/src/utils/inspect.ts", "../../ink-mde/src/utils/options.ts", "../../ink-mde/src/vendor/extensions/appearance.ts", "../../ink-mde/src/markdown.ts", "../../ink-mde/src/extensions.ts", "../../ink-mde/src/vendor/extensions/blockquote.ts", "../../ink-mde/src/vendor/extensions/code.ts", "../../ink-mde/src/vendor/extensions/ink.ts", "../../ink-mde/src/vendor/extensions/keymaps.ts", "../../ink-mde/src/vendor/extensions/line_wrapping.ts", "../../ink-mde/src/vendor/extensions/theme.ts", "../../ink-mde/src/vendor/state.ts", "../../ink-mde/src/api/load.ts", "../../ink-mde/src/api/options.ts", "../../ink-mde/src/api/reconfigure.ts", "../../ink-mde/src/api/select.ts", "../../ink-mde/src/api/update.ts", "../../ink-mde/src/api/wrap.ts", "../../ink-mde/src/utils/awaitable.ts", "../../ink-mde/src/instance.ts", "../../ink-mde/src/modules.ts", "../../ink-mde/lib/codemirror-kit/decorations.ts", "../../ink-mde/lib/codemirror-kit/parsers.ts", "../../ink-mde/lib/codemirror-kit/markdown.ts", "../../ink-mde/plugins/katex/grammar.ts", "../../ink-mde/plugins/katex/index.ts", "../../ink-mde/src/utils/queue.ts", "../../ink-mde/src/store.ts", "../../ink-mde/src/ui/components/drop_zone/index.tsx", "../../ink-mde/src/vendor/editor.ts", "../../ink-mde/src/ui/components/editor/index.tsx", "../../ink-mde/src/ui/components/button/index.tsx", "../../ink-mde/src/ui/components/toolbar/index.tsx", "../../ink-mde/src/utils/readability.ts", "../../ink-mde/src/ui/components/details/index.tsx", "../../ink-mde/src/ui/components/root/styles.tsx", "../../ink-mde/src/ui/components/root/index.tsx", "../../ink-mde/src/ui/app.tsx", "../../ink-mde/src/index.tsx"],
  "sourcesContent": ["import { LanguageDescription, LanguageSupport, StreamLanguage } from '@codemirror/language';\n\nfunction legacy(parser) {\n    return new LanguageSupport(StreamLanguage.define(parser));\n}\nfunction sql(dialectName) {\n    return import('@codemirror/lang-sql').then(m => m.sql({ dialect: m[dialectName] }));\n}\n/**\nAn array of language descriptions for known language packages.\n*/\nconst languages = [\n    // New-style language modes\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"C\",\n        extensions: [\"c\", \"h\", \"ino\"],\n        load() {\n            return import('@codemirror/lang-cpp').then(m => m.cpp());\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"C++\",\n        alias: [\"cpp\"],\n        extensions: [\"cpp\", \"c++\", \"cc\", \"cxx\", \"hpp\", \"h++\", \"hh\", \"hxx\"],\n        load() {\n            return import('@codemirror/lang-cpp').then(m => m.cpp());\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"CQL\",\n        alias: [\"cassandra\"],\n        extensions: [\"cql\"],\n        load() { return sql(\"Cassandra\"); }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"CSS\",\n        extensions: [\"css\"],\n        load() {\n            return import('@codemirror/lang-css').then(m => m.css());\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"HTML\",\n        alias: [\"xhtml\"],\n        extensions: [\"html\", \"htm\", \"handlebars\", \"hbs\"],\n        load() {\n            return import('@codemirror/lang-html').then(m => m.html());\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Java\",\n        extensions: [\"java\"],\n        load() {\n            return import('@codemirror/lang-java').then(m => m.java());\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"JavaScript\",\n        alias: [\"ecmascript\", \"js\", \"node\"],\n        extensions: [\"js\", \"mjs\", \"cjs\"],\n        load() {\n            return import('@codemirror/lang-javascript').then(m => m.javascript());\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"JSON\",\n        alias: [\"json5\"],\n        extensions: [\"json\", \"map\"],\n        load() {\n            return import('@codemirror/lang-json').then(m => m.json());\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"JSX\",\n        extensions: [\"jsx\"],\n        load() {\n            return import('@codemirror/lang-javascript').then(m => m.javascript({ jsx: true }));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"MariaDB SQL\",\n        load() { return sql(\"MariaSQL\"); }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Markdown\",\n        extensions: [\"md\", \"markdown\", \"mkd\"],\n        load() {\n            return import('@codemirror/lang-markdown').then(m => m.markdown());\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"MS SQL\",\n        load() { return sql(\"MSSQL\"); }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"MySQL\",\n        load() { return sql(\"MySQL\"); }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"PHP\",\n        extensions: [\"php\", \"php3\", \"php4\", \"php5\", \"php7\", \"phtml\"],\n        load() {\n            return import('@codemirror/lang-php').then(m => m.php());\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"PLSQL\",\n        extensions: [\"pls\"],\n        load() { return sql(\"PLSQL\"); }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"PostgreSQL\",\n        load() { return sql(\"PostgreSQL\"); }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Python\",\n        extensions: [\"BUILD\", \"bzl\", \"py\", \"pyw\"],\n        filename: /^(BUCK|BUILD)$/,\n        load() {\n            return import('@codemirror/lang-python').then(m => m.python());\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Rust\",\n        extensions: [\"rs\"],\n        load() {\n            return import('@codemirror/lang-rust').then(m => m.rust());\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"SQL\",\n        extensions: [\"sql\"],\n        load() { return sql(\"StandardSQL\"); }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"SQLite\",\n        load() { return sql(\"SQLite\"); }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"TSX\",\n        extensions: [\"tsx\"],\n        load() {\n            return import('@codemirror/lang-javascript').then(m => m.javascript({ jsx: true, typescript: true }));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"TypeScript\",\n        alias: [\"ts\"],\n        extensions: [\"ts\"],\n        load() {\n            return import('@codemirror/lang-javascript').then(m => m.javascript({ typescript: true }));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"WebAssembly\",\n        extensions: [\"wat\", \"wast\"],\n        load() {\n            return import('@codemirror/lang-wast').then(m => m.wast());\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"XML\",\n        alias: [\"rss\", \"wsdl\", \"xsd\"],\n        extensions: [\"xml\", \"xsl\", \"xsd\", \"svg\"],\n        load() {\n            return import('@codemirror/lang-xml').then(m => m.xml());\n        }\n    }),\n    // Legacy modes ported from CodeMirror 5\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"APL\",\n        extensions: [\"dyalog\", \"apl\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/apl').then(m => legacy(m.apl));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"PGP\",\n        alias: [\"asciiarmor\"],\n        extensions: [\"asc\", \"pgp\", \"sig\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/asciiarmor').then(m => legacy(m.asciiArmor));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"ASN.1\",\n        extensions: [\"asn\", \"asn1\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/asn1').then(m => legacy(m.asn1({})));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Asterisk\",\n        filename: /^extensions\\.conf$/i,\n        load() {\n            return import('@codemirror/legacy-modes/mode/asterisk').then(m => legacy(m.asterisk));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Brainfuck\",\n        extensions: [\"b\", \"bf\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/brainfuck').then(m => legacy(m.brainfuck));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Cobol\",\n        extensions: [\"cob\", \"cpy\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/cobol').then(m => legacy(m.cobol));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"C#\",\n        alias: [\"csharp\", \"cs\"],\n        extensions: [\"cs\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/clike').then(m => legacy(m.csharp));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Clojure\",\n        extensions: [\"clj\", \"cljc\", \"cljx\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/clojure').then(m => legacy(m.clojure));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"ClojureScript\",\n        extensions: [\"cljs\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/clojure').then(m => legacy(m.clojure));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Closure Stylesheets (GSS)\",\n        extensions: [\"gss\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/css').then(m => legacy(m.gss));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"CMake\",\n        extensions: [\"cmake\", \"cmake.in\"],\n        filename: /^CMakeLists\\.txt$/,\n        load() {\n            return import('@codemirror/legacy-modes/mode/cmake').then(m => legacy(m.cmake));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"CoffeeScript\",\n        alias: [\"coffee\", \"coffee-script\"],\n        extensions: [\"coffee\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/coffeescript').then(m => legacy(m.coffeeScript));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Common Lisp\",\n        alias: [\"lisp\"],\n        extensions: [\"cl\", \"lisp\", \"el\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/commonlisp').then(m => legacy(m.commonLisp));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Cypher\",\n        extensions: [\"cyp\", \"cypher\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/cypher').then(m => legacy(m.cypher));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Cython\",\n        extensions: [\"pyx\", \"pxd\", \"pxi\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/python').then(m => legacy(m.cython));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Crystal\",\n        extensions: [\"cr\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/crystal').then(m => legacy(m.crystal));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"D\",\n        extensions: [\"d\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/d').then(m => legacy(m.d));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Dart\",\n        extensions: [\"dart\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/clike').then(m => legacy(m.dart));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"diff\",\n        extensions: [\"diff\", \"patch\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/diff').then(m => legacy(m.diff));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Dockerfile\",\n        filename: /^Dockerfile$/,\n        load() {\n            return import('@codemirror/legacy-modes/mode/dockerfile').then(m => legacy(m.dockerFile));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"DTD\",\n        extensions: [\"dtd\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/dtd').then(m => legacy(m.dtd));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Dylan\",\n        extensions: [\"dylan\", \"dyl\", \"intr\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/dylan').then(m => legacy(m.dylan));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"EBNF\",\n        load() {\n            return import('@codemirror/legacy-modes/mode/ebnf').then(m => legacy(m.ebnf));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"ECL\",\n        extensions: [\"ecl\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/ecl').then(m => legacy(m.ecl));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"edn\",\n        extensions: [\"edn\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/clojure').then(m => legacy(m.clojure));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Eiffel\",\n        extensions: [\"e\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/eiffel').then(m => legacy(m.eiffel));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Elm\",\n        extensions: [\"elm\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/elm').then(m => legacy(m.elm));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Erlang\",\n        extensions: [\"erl\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/erlang').then(m => legacy(m.erlang));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Esper\",\n        load() {\n            return import('@codemirror/legacy-modes/mode/sql').then(m => legacy(m.esper));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Factor\",\n        extensions: [\"factor\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/factor').then(m => legacy(m.factor));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"FCL\",\n        load() {\n            return import('@codemirror/legacy-modes/mode/fcl').then(m => legacy(m.fcl));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Forth\",\n        extensions: [\"forth\", \"fth\", \"4th\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/forth').then(m => legacy(m.forth));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Fortran\",\n        extensions: [\"f\", \"for\", \"f77\", \"f90\", \"f95\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/fortran').then(m => legacy(m.fortran));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"F#\",\n        alias: [\"fsharp\"],\n        extensions: [\"fs\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/mllike').then(m => legacy(m.fSharp));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Gas\",\n        extensions: [\"s\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/gas').then(m => legacy(m.gas));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Gherkin\",\n        extensions: [\"feature\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/gherkin').then(m => legacy(m.gherkin));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Go\",\n        extensions: [\"go\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/go').then(m => legacy(m.go));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Groovy\",\n        extensions: [\"groovy\", \"gradle\"],\n        filename: /^Jenkinsfile$/,\n        load() {\n            return import('@codemirror/legacy-modes/mode/groovy').then(m => legacy(m.groovy));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Haskell\",\n        extensions: [\"hs\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/haskell').then(m => legacy(m.haskell));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Haxe\",\n        extensions: [\"hx\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/haxe').then(m => legacy(m.haxe));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"HXML\",\n        extensions: [\"hxml\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/haxe').then(m => legacy(m.hxml));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"HTTP\",\n        load() {\n            return import('@codemirror/legacy-modes/mode/http').then(m => legacy(m.http));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"IDL\",\n        extensions: [\"pro\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/idl').then(m => legacy(m.idl));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"JSON-LD\",\n        alias: [\"jsonld\"],\n        extensions: [\"jsonld\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/javascript').then(m => legacy(m.jsonld));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Jinja2\",\n        extensions: [\"j2\", \"jinja\", \"jinja2\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/jinja2').then(m => legacy(m.jinja2));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Julia\",\n        extensions: [\"jl\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/julia').then(m => legacy(m.julia));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Kotlin\",\n        extensions: [\"kt\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/clike').then(m => legacy(m.kotlin));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"LESS\",\n        extensions: [\"less\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/css').then(m => legacy(m.less));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"LiveScript\",\n        alias: [\"ls\"],\n        extensions: [\"ls\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/livescript').then(m => legacy(m.liveScript));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Lua\",\n        extensions: [\"lua\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/lua').then(m => legacy(m.lua));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"mIRC\",\n        extensions: [\"mrc\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/mirc').then(m => legacy(m.mirc));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Mathematica\",\n        extensions: [\"m\", \"nb\", \"wl\", \"wls\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/mathematica').then(m => legacy(m.mathematica));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Modelica\",\n        extensions: [\"mo\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/modelica').then(m => legacy(m.modelica));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"MUMPS\",\n        extensions: [\"mps\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/mumps').then(m => legacy(m.mumps));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Mbox\",\n        extensions: [\"mbox\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/mbox').then(m => legacy(m.mbox));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Nginx\",\n        filename: /nginx.*\\.conf$/i,\n        load() {\n            return import('@codemirror/legacy-modes/mode/nginx').then(m => legacy(m.nginx));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"NSIS\",\n        extensions: [\"nsh\", \"nsi\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/nsis').then(m => legacy(m.nsis));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"NTriples\",\n        extensions: [\"nt\", \"nq\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/ntriples').then(m => legacy(m.ntriples));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Objective-C\",\n        alias: [\"objective-c\", \"objc\"],\n        extensions: [\"m\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/clike').then(m => legacy(m.objectiveC));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Objective-C++\",\n        alias: [\"objective-c++\", \"objc++\"],\n        extensions: [\"mm\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/clike').then(m => legacy(m.objectiveCpp));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"OCaml\",\n        extensions: [\"ml\", \"mli\", \"mll\", \"mly\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/mllike').then(m => legacy(m.oCaml));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Octave\",\n        extensions: [\"m\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/octave').then(m => legacy(m.octave));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Oz\",\n        extensions: [\"oz\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/oz').then(m => legacy(m.oz));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Pascal\",\n        extensions: [\"p\", \"pas\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/pascal').then(m => legacy(m.pascal));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Perl\",\n        extensions: [\"pl\", \"pm\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/perl').then(m => legacy(m.perl));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Pig\",\n        extensions: [\"pig\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/pig').then(m => legacy(m.pig));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"PowerShell\",\n        extensions: [\"ps1\", \"psd1\", \"psm1\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/powershell').then(m => legacy(m.powerShell));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Properties files\",\n        alias: [\"ini\", \"properties\"],\n        extensions: [\"properties\", \"ini\", \"in\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/properties').then(m => legacy(m.properties));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"ProtoBuf\",\n        extensions: [\"proto\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/protobuf').then(m => legacy(m.protobuf));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Puppet\",\n        extensions: [\"pp\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/puppet').then(m => legacy(m.puppet));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Q\",\n        extensions: [\"q\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/q').then(m => legacy(m.q));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"R\",\n        alias: [\"rscript\"],\n        extensions: [\"r\", \"R\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/r').then(m => legacy(m.r));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"RPM Changes\",\n        load() {\n            return import('@codemirror/legacy-modes/mode/rpm').then(m => legacy(m.rpmChanges));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"RPM Spec\",\n        extensions: [\"spec\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/rpm').then(m => legacy(m.rpmSpec));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Ruby\",\n        alias: [\"jruby\", \"macruby\", \"rake\", \"rb\", \"rbx\"],\n        extensions: [\"rb\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/ruby').then(m => legacy(m.ruby));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"SAS\",\n        extensions: [\"sas\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/sas').then(m => legacy(m.sas));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Sass\",\n        extensions: [\"sass\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/sass').then(m => legacy(m.sass));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Scala\",\n        extensions: [\"scala\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/clike').then(m => legacy(m.scala));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Scheme\",\n        extensions: [\"scm\", \"ss\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/scheme').then(m => legacy(m.scheme));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"SCSS\",\n        extensions: [\"scss\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/css').then(m => legacy(m.sCSS));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Shell\",\n        alias: [\"bash\", \"sh\", \"zsh\"],\n        extensions: [\"sh\", \"ksh\", \"bash\"],\n        filename: /^PKGBUILD$/,\n        load() {\n            return import('@codemirror/legacy-modes/mode/shell').then(m => legacy(m.shell));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Sieve\",\n        extensions: [\"siv\", \"sieve\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/sieve').then(m => legacy(m.sieve));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Smalltalk\",\n        extensions: [\"st\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/smalltalk').then(m => legacy(m.smalltalk));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Solr\",\n        load() {\n            return import('@codemirror/legacy-modes/mode/solr').then(m => legacy(m.solr));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"SML\",\n        extensions: [\"sml\", \"sig\", \"fun\", \"smackspec\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/mllike').then(m => legacy(m.sml));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"SPARQL\",\n        alias: [\"sparul\"],\n        extensions: [\"rq\", \"sparql\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/sparql').then(m => legacy(m.sparql));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Spreadsheet\",\n        alias: [\"excel\", \"formula\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/spreadsheet').then(m => legacy(m.spreadsheet));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Squirrel\",\n        extensions: [\"nut\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/clike').then(m => legacy(m.squirrel));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Stylus\",\n        extensions: [\"styl\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/stylus').then(m => legacy(m.stylus));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Swift\",\n        extensions: [\"swift\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/swift').then(m => legacy(m.swift));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"sTeX\",\n        load() {\n            return import('@codemirror/legacy-modes/mode/stex').then(m => legacy(m.stex));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"LaTeX\",\n        alias: [\"tex\"],\n        extensions: [\"text\", \"ltx\", \"tex\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/stex').then(m => legacy(m.stex));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"SystemVerilog\",\n        extensions: [\"v\", \"sv\", \"svh\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/verilog').then(m => legacy(m.verilog));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Tcl\",\n        extensions: [\"tcl\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/tcl').then(m => legacy(m.tcl));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Textile\",\n        extensions: [\"textile\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/textile').then(m => legacy(m.textile));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"TiddlyWiki\",\n        load() {\n            return import('@codemirror/legacy-modes/mode/tiddlywiki').then(m => legacy(m.tiddlyWiki));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Tiki wiki\",\n        load() {\n            return import('@codemirror/legacy-modes/mode/tiki').then(m => legacy(m.tiki));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"TOML\",\n        extensions: [\"toml\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/toml').then(m => legacy(m.toml));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Troff\",\n        extensions: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/troff').then(m => legacy(m.troff));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"TTCN\",\n        extensions: [\"ttcn\", \"ttcn3\", \"ttcnpp\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/ttcn').then(m => legacy(m.ttcn));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"TTCN_CFG\",\n        extensions: [\"cfg\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/ttcn-cfg').then(m => legacy(m.ttcnCfg));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Turtle\",\n        extensions: [\"ttl\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/turtle').then(m => legacy(m.turtle));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Web IDL\",\n        extensions: [\"webidl\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/webidl').then(m => legacy(m.webIDL));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"VB.NET\",\n        extensions: [\"vb\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/vb').then(m => legacy(m.vb));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"VBScript\",\n        extensions: [\"vbs\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/vbscript').then(m => legacy(m.vbScript));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Velocity\",\n        extensions: [\"vtl\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/velocity').then(m => legacy(m.velocity));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Verilog\",\n        extensions: [\"v\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/verilog').then(m => legacy(m.verilog));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"VHDL\",\n        extensions: [\"vhd\", \"vhdl\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/vhdl').then(m => legacy(m.vhdl));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"XQuery\",\n        extensions: [\"xy\", \"xquery\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/xquery').then(m => legacy(m.xQuery));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Yacas\",\n        extensions: [\"ys\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/yacas').then(m => legacy(m.yacas));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"YAML\",\n        alias: [\"yml\"],\n        extensions: [\"yaml\", \"yml\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/yaml').then(m => legacy(m.yaml));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"Z80\",\n        extensions: [\"z80\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/z80').then(m => legacy(m.z80));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"MscGen\",\n        extensions: [\"mscgen\", \"mscin\", \"msc\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/mscgen').then(m => legacy(m.mscgen));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"X\u00F9\",\n        extensions: [\"xu\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/mscgen').then(m => legacy(m.xu));\n        }\n    }),\n    /*@__PURE__*/LanguageDescription.of({\n        name: \"MsGenny\",\n        extensions: [\"msgenny\"],\n        load() {\n            return import('@codemirror/legacy-modes/mode/mscgen').then(m => legacy(m.msgenny));\n        }\n    })\n];\n\nexport { languages };\n", "export const HYDRATION_MARKER = 'data-ink-mde-ssr-hydration-marker'\nexport const HYDRATION_MARKER_SELECTOR = `[${HYDRATION_MARKER}]`\n\nexport const getHydrationMarkerProps = () => {\n  if (import.meta.env.VITE_SSR) {\n    return {\n      [HYDRATION_MARKER]: true,\n    }\n  }\n\n  return {}\n}\n", "import type InkInternal from '/types/internal'\n\nexport const destroy = ([state]: InkInternal.Store) => {\n  const { editor } = state()\n\n  editor.destroy()\n}\n", "import type InkInternal from '/types/internal'\n\nexport const focus = ([state]: InkInternal.Store) => {\n  const { editor } = state()\n\n  if (!editor.hasFocus) {\n    editor.focus()\n  }\n}\n", "import { EditorSelection, SelectionRange } from '@codemirror/state'\nimport type * as Ink from '/types/ink'\n\nexport const toCodeMirror = (selections: Ink.Editor.Selection[]) => {\n  const ranges = selections.map((selection): SelectionRange => {\n    const range = SelectionRange.fromJSON({ anchor: selection.start, head: selection.end })\n\n    return range\n  })\n\n  return EditorSelection.create(ranges)\n}\n\nexport const toInk = (selection: EditorSelection) => {\n  const selections = selection.ranges.map((range: SelectionRange): Ink.Editor.Selection => {\n    return {\n      end: range.anchor < range.head ? range.head : range.anchor,\n      start: range.head < range.anchor ? range.head : range.anchor,\n    }\n  })\n\n  return selections\n}\n", "export enum Appearance {\n  Auto = 'auto',\n  Dark = 'dark',\n  Light = 'light',\n}\n\nexport enum Extensions {\n  Appearance = 'appearance',\n  Attribution = 'attribution',\n  Autocomplete = 'autocomplete',\n  Images = 'images',\n  ReadOnly = 'readonly',\n  Spellcheck = 'spellcheck',\n  Vim = 'vim',\n}\n\nexport enum Markup {\n  Bold = 'bold',\n  Code = 'code',\n  CodeBlock = 'code_block',\n  Heading = 'heading',\n  Image = 'image',\n  Italic = 'italic',\n  Link = 'link',\n  List = 'list',\n  OrderedList = 'ordered_list',\n  Quote = 'quote',\n  TaskList = 'task_list',\n}\n\nexport enum PluginType {\n  Completion = 'completion',\n  Default = 'default',\n  Grammar = 'grammar',\n  Language = 'language',\n}\n\nexport enum Selection {\n  End = 'end',\n  Start = 'start',\n}\n\nexport const appearanceTypes = {\n  auto: 'auto',\n  dark: 'dark',\n  light: 'light',\n}\n\nexport const pluginTypes = {\n  completion: 'completion',\n  default: 'default',\n  grammar: 'grammar',\n  language: 'language',\n} as const\n", "import { syntaxTree } from '@codemirror/language'\nimport { toInk } from '/src/vendor/adapters/selections'\nimport * as InkValues from '/types/values'\nimport type { NodeType } from '@lezer/common'\nimport type * as Ink from '/types/ink'\nimport type InkInternal from '/types/internal'\n\n// Todo:\n// - [ ] Handle special scenarios (e.g. headings in quote blocks).\n// - [ ] Handle multiline selections (e.g. bolding multiple lines worth of content).\n\ninterface ChangeDetails {\n  editor: InkInternal.Editor,\n  formatDefinition: FormatDefinition,\n  selection: Ink.Editor.Selection,\n  node?: NodeDefinition,\n}\n\ninterface FormatDefinition {\n  block: boolean,\n  line: boolean,\n  multiline: boolean,\n  nodes: string[],\n  prefix: string,\n  prefixStates: string[],\n  suffix: string,\n}\n\ntype Formats = {\n  [K in Ink.Values.Markup]: FormatDefinition\n}\n\ninterface NodeDefinition {\n  type: NodeType,\n  from: number,\n  to: number,\n}\n\nconst defineConfig = (overrides: Partial<FormatDefinition>): FormatDefinition => {\n  const defaults = {\n    block: false,\n    line: false,\n    multiline: false,\n    nodes: [],\n    prefix: '',\n    prefixStates: [],\n    suffix: '',\n  }\n\n  return { ...defaults, ...overrides }\n}\n\nexport const formatting: Formats = {\n  [InkValues.Markup.Bold]: defineConfig({\n    nodes: ['StrongEmphasis'],\n    prefix: '**',\n    suffix: '**',\n  }),\n  [InkValues.Markup.Code]: defineConfig({\n    nodes: ['InlineCode'],\n    prefix: '`',\n    suffix: '`',\n  }),\n  [InkValues.Markup.CodeBlock]: defineConfig({\n    block: true,\n    nodes: ['FencedCode'],\n    prefix: '```\\n',\n    suffix: '\\n```',\n  }),\n  [InkValues.Markup.Heading]: defineConfig({\n    multiline: true,\n    nodes: ['ATXHeading1', 'ATXHeading2', 'ATXHeading3', 'ATXHeading4', 'ATXHeading5', 'ATXHeading6'],\n    prefix: '# ',\n    prefixStates: ['# ', '## ', '### ', '#### ', '##### ', '###### ', ''],\n  }),\n  [InkValues.Markup.Image]: defineConfig({\n    nodes: ['Image'],\n    prefix: '![](',\n    suffix: ')',\n  }),\n  [InkValues.Markup.Italic]: defineConfig({\n    nodes: ['Emphasis'],\n    prefix: '*',\n    suffix: '*',\n  }),\n  [InkValues.Markup.Link]: defineConfig({\n    nodes: ['Link'],\n    prefix: '[](',\n    suffix: ')',\n  }),\n  [InkValues.Markup.OrderedList]: defineConfig({\n    line: true,\n    multiline: true,\n    nodes: ['OrderedList'],\n    prefix: '1. ',\n  }),\n  [InkValues.Markup.Quote]: defineConfig({\n    line: true,\n    multiline: true,\n    nodes: ['Blockquote'],\n    prefix: '> ',\n  }),\n  [InkValues.Markup.TaskList]: defineConfig({\n    line: true,\n    multiline: true,\n    nodes: ['BulletList'],\n    prefix: '- [ ] ',\n  }),\n  [InkValues.Markup.List]: defineConfig({\n    line: true,\n    multiline: true,\n    nodes: ['BulletList'],\n    prefix: '- ',\n  }),\n}\n\nconst splitSelectionByLines = ({ editor, selection }: ChangeDetails) => {\n  let position = selection.start\n  const selections: Ink.Editor.Selection[] = []\n\n  while (position <= selection.end) {\n    const line = editor.lineBlockAt(position)\n    const start = Math.max(selection.start, line.from)\n    const end = Math.min(selection.end, line.to)\n\n    selections.push({ start, end })\n\n    position = line.to + 1\n  }\n\n  return selections\n}\n\nconst getSelection = ({ editor, formatDefinition, selection }: Partial<ChangeDetails>) => {\n  if (!editor || !formatDefinition) return selection || { start: 0, end: 0 }\n\n  // Todo: expose an actual API for getting the current selection or fallback\n  const initialSelection = selection || toInk(editor.state.selection).pop() || { start: 0, end: 0 }\n\n  if (formatDefinition.block || formatDefinition.line || formatDefinition.multiline) {\n    const start = editor.lineBlockAt(initialSelection.start).from\n    const end = editor.lineBlockAt(initialSelection.end).to\n\n    return { start, end }\n  }\n\n  const start = editor.state.wordAt(initialSelection.start)?.from || initialSelection.start\n  const end = editor.state.wordAt(initialSelection.end)?.to || initialSelection.end\n\n  return { start, end }\n}\n\nconst getText = (changeDetails: ChangeDetails) => {\n  return changeDetails.editor.state.sliceDoc(changeDetails.selection.start, changeDetails.selection.end)\n}\n\nconst getNode = (editor: InkInternal.Editor, definition: FormatDefinition, selection: Ink.Editor.Selection) => {\n  const selectionNodes = getNodes(editor, selection)\n\n  return selectionNodes.find(({ type }) => definition.nodes.includes(type.name))\n}\n\nconst getNodes = (editor: InkInternal.Editor, selection: Ink.Editor.Selection) => {\n  const nodeDefinitions: NodeDefinition[] = []\n\n  syntaxTree(editor.state).iterate({\n    from: selection.start,\n    to: selection.end,\n    enter: ({ type, from, to }) => {\n      nodeDefinitions.push({ type, from, to })\n    },\n  })\n\n  return nodeDefinitions\n}\n\nconst unformat = (changeDetails: ChangeDetails) => {\n  const text = getText(changeDetails)\n  const sliceStart = changeDetails.formatDefinition.prefix.length\n  const sliceEnd = changeDetails.formatDefinition.suffix.length * -1 || text.length\n  const unformatted = text.slice(sliceStart, sliceEnd)\n\n  return [{ from: changeDetails.selection.start, to: changeDetails.selection.end, insert: unformatted }]\n}\n\nconst formatBlock = (changeDetails: ChangeDetails) => {\n  if (changeDetails.node) {\n    const start = changeDetails.node.from\n    const end = changeDetails.node.to\n\n    return unformat({ ...changeDetails, selection: { start, end } })\n  } else {\n    const before = changeDetails.formatDefinition.prefix\n    const after = changeDetails.formatDefinition.suffix\n\n    const changes = [\n      { from: changeDetails.selection.start, insert: before },\n      { from: changeDetails.selection.end, insert: after },\n    ]\n\n    return changes\n  }\n}\n\nconst formatMultiline = (changeDetails: ChangeDetails) => {\n  const selections = splitSelectionByLines(changeDetails)\n  const changes = <{ from: number, to?: number, insert: string }[]>[]\n\n  selections.forEach((selection) => {\n    const lineChanges = formatLine({ ...changeDetails, selection })\n\n    changes.push(...lineChanges)\n  })\n\n  return changes\n}\n\nconst formatLine = (changeDetails: ChangeDetails) => {\n  const hasPrefixStates = changeDetails.formatDefinition.prefixStates.length > 0\n  const text = getText(changeDetails)\n\n  if (changeDetails.node && hasPrefixStates) {\n    const prefixState = changeDetails.formatDefinition.prefixStates.find(prefix => text.startsWith(prefix))\n\n    if (prefixState) {\n      const prefixStateIndex = changeDetails.formatDefinition.prefixStates.indexOf(prefixState)\n      const nextPrefixState = changeDetails.formatDefinition.prefixStates[prefixStateIndex + 1]\n      const updatedText = text.replace(new RegExp(`^${prefixState}`), nextPrefixState)\n\n      return [{ from: changeDetails.selection.start, to: changeDetails.selection.end, insert: updatedText }]\n    }\n  } else if (changeDetails.node && text.startsWith(changeDetails.formatDefinition.prefix)) {\n    return unformat(changeDetails)\n  }\n\n  return [{ from: changeDetails.selection.start, insert: changeDetails.formatDefinition.prefix }]\n}\n\nconst formatInline = (changeDetails: ChangeDetails) => {\n  if (changeDetails.node) {\n    const start = changeDetails.node.from\n    const end = changeDetails.node.to\n\n    return unformat({ ...changeDetails, selection: { start, end } })\n  } else {\n    const { formatDefinition, selection } = changeDetails\n    const before = Array.isArray(formatDefinition.prefix) ? formatDefinition.prefix[0] : formatDefinition.prefix\n    const after = formatDefinition.suffix\n\n    return [\n      { from: selection.start, insert: before },\n      { from: selection.end, insert: after },\n    ]\n  }\n}\n\nconst getChanges = (changeDetails: ChangeDetails) => {\n  if (changeDetails.formatDefinition.block) {\n    return formatBlock(changeDetails)\n  } else if (changeDetails.formatDefinition.multiline) {\n    return formatMultiline(changeDetails)\n  } else if (changeDetails.formatDefinition.line) {\n    return formatLine(changeDetails)\n  }\n\n  return formatInline(changeDetails)\n}\n\nexport const format = ([state]: InkInternal.Store, formatType: Ink.EnumString<Ink.Values.Markup>, { selection: maybeSelection }: Ink.Instance.FormatOptions = {}) => {\n  const { editor } = state()\n  const formatDefinition = formatting[formatType]\n  const selection = getSelection({ editor, formatDefinition, selection: maybeSelection })\n  const node = getNode(editor, formatDefinition, selection)\n  const changeDetails: ChangeDetails = {\n    editor,\n    formatDefinition,\n    node,\n    selection,\n  }\n  const changes = getChanges(changeDetails)\n  const offset = changes.reduce((total, change: { from: number, insert: string, to?: number }) => {\n    const offset = change.insert.length - ((change.to || change.from) - change.from)\n\n    return total + offset\n  }, 0)\n\n  const updates = state().editor.state.update({ changes, selection: { head: selection.start, anchor: selection.end + offset } })\n\n  state().editor.dispatch(updates)\n}\n", "import type InkInternal from '/types/internal'\n\nexport const getDoc = ([state]: InkInternal.Store) => {\n  const { editor } = state()\n\n  return editor.state.sliceDoc()\n}\n", "import { toInk } from '/src/vendor/adapters/selections'\nimport type * as Ink from '/types/ink'\nimport type InkInternal from '/types/internal'\n\nexport const selections = ([state]: InkInternal.Store): Ink.Editor.Selection[] => {\n  const { editor } = state()\n\n  return toInk(editor.state.selection)\n}\n", "import { selections } from './selections'\nimport type * as Ink from '/types/ink'\nimport type InkInternal from '/types/internal'\n\nexport const insert = ([state, setState]: InkInternal.Store, text: string, selection?: Ink.Editor.Selection, updateSelection = false) => {\n  const { editor } = state()\n\n  let start = selection?.start\n  let end = selection?.end || selection?.start\n\n  if (typeof start === 'undefined') {\n    const current = selections([state, setState]).pop() as Ink.Editor.Selection\n\n    start = current.start\n    end = current.end\n  }\n\n  const updates = { changes: { from: start, to: end, insert: text } }\n\n  if (updateSelection) {\n    const anchor = start === end ? start + text.length : start\n    const head = start === end ? start + text.length : start + text.length\n\n    Object.assign(updates, { selection: { anchor, head } })\n  }\n\n  editor.dispatch(\n    editor.state.update(updates),\n  )\n}\n", "const types = {\n  array: '[object Array]',\n  object: '[object Object]',\n  string: '[object String]',\n  undefined: '[object Undefined]',\n  window: '[object Window]',\n}\n\nconst getType = (object: any) => {\n  const type = Object.prototype.toString.call(object)\n\n  if (type === types.object) {\n    return `[object ${object.constructor.name}]`\n  }\n}\n\nconst is = (object: any, type: string) => {\n  return getType(object) === type\n}\n\nconst deepAssign = (target: any, source: any) => {\n  const seen = new WeakMap()\n\n  const assign = (target: any, source: any) => {\n    if (seen.get(target)) return target\n    if (is(target, types.object)) seen.set(target, true)\n    if (is(source, types.undefined)) return target\n\n    if (is(target, types.array) && is(source, types.array)) {\n      return [...source]\n    }\n\n    if (is(target, types.object) && is(source, types.object)) {\n      return Object.keys(target).reduce((replacement: Record<PropertyKey, unknown>, key: PropertyKey) => {\n        if (Object.hasOwnProperty.call(source, key)) {\n          replacement[key] = assign(target[key], source[key])\n        } else {\n          replacement[key] = target[key]\n        }\n\n        return replacement\n      }, {})\n    }\n\n    return source\n  }\n\n  return assign(target, source)\n}\n\nexport const override = <T>(a: T, b: unknown): T => {\n  return deepAssign(a, b) as unknown as T\n}\n", "import * as InkValues from '/types/values'\n\nimport type InkInternal from '/types/internal'\nimport type InkUi from '/types/ui'\n\nexport const createElement = (): InkUi.Element => {\n  // Needed for tree-shaking purposes.\n  if (import.meta.env.VITE_SSR) {\n    return {} as InkUi.Element\n  }\n\n  return document.createElement('div')\n}\n\nexport const isAutoDark = () => {\n  // Needed for tree-shaking purposes.\n  if (import.meta.env.VITE_SSR) {\n    // Todo: Allow user to specify a default theme for SSR.\n    return true\n  }\n\n  return window.matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nexport const isDark = (appearance: string) => {\n  if (appearance === InkValues.Appearance.Dark)\n    return true\n  if (appearance === InkValues.Appearance.Light)\n    return false\n\n  return isAutoDark()\n}\n\nexport const makeVars = (state: InkInternal.StateResolved) => {\n  // Todo: The syntax nodes should be merged with the tag nodes to ensure values are always set correctly. This might\n  // require extracting this out into a separate \"constants\" file or something similar.\n  const styles = [\n    // --ink-*\n    { suffix: 'border-radius', default: '0.25rem' },\n    { suffix: 'color', default: 'currentColor' },\n    { suffix: 'flex-direction', default: 'column' },\n    { suffix: 'font-family', default: 'inherit' },\n    // --ink-block-*\n    { suffix: 'block-background-color', default: '#121212', light: '#f5f5f5' },\n    { suffix: 'block-background-color-on-hover', default: '#0f0f0f', light: '#e0e0e0' },\n    { suffix: 'block-max-height', default: '20rem' },\n    { suffix: 'block-padding', default: '0.5rem' },\n    // --ink-code-*\n    { suffix: 'code-background-color', default: 'var(--ink-internal-block-background-color)' },\n    { suffix: 'code-color', default: 'inherit' },\n    { suffix: 'code-font-family', default: '\\'Monaco\\', Courier, monospace' },\n    // --ink-editor-*\n    { suffix: 'editor-font-size', default: '1em' },\n    { suffix: 'editor-line-height', default: '2em' },\n    { suffix: 'editor-padding', default: '0.5rem' },\n    { suffix: 'inline-padding', default: '0.125rem' },\n    // --ink-modal-*\n    { suffix: 'modal-position', default: 'fixed' },\n    // --ink-syntax-*\n    { suffix: 'syntax-atom-color', default: '#d19a66' },\n    { suffix: 'syntax-comment-color', default: '#abb2bf' },\n    { suffix: 'syntax-comment-font-style', default: 'italic' },\n    { suffix: 'syntax-emphasis-color', default: 'inherit' },\n    { suffix: 'syntax-emphasis-font-style', default: 'italic' },\n    { suffix: 'syntax-hashtag-background-color', default: '#222', light: '#eee' },\n    { suffix: 'syntax-hashtag-color', default: 'inherit' },\n    { suffix: 'syntax-heading-color', default: 'inherit' },\n    { suffix: 'syntax-heading-font-weight', default: '600' },\n    { suffix: 'syntax-heading1-color', default: 'var(--ink-internal-syntax-heading-color, inherit)' },\n    { suffix: 'syntax-heading1-font-size', default: '1.6em' },\n    { suffix: 'syntax-heading1-font-weight', default: '600' },\n    { suffix: 'syntax-heading2-color', default: 'var(--ink-internal-syntax-heading-color, inherit)' },\n    { suffix: 'syntax-heading2-font-size', default: '1.5em' },\n    { suffix: 'syntax-heading2-font-weight', default: '600' },\n    { suffix: 'syntax-heading3-color', default: 'var(--ink-internal-syntax-heading-color, inherit)' },\n    { suffix: 'syntax-heading3-font-size', default: '1.4em' },\n    { suffix: 'syntax-heading3-font-weight', default: '600' },\n    { suffix: 'syntax-heading4-color', default: 'var(--ink-internal-syntax-heading-color, inherit)' },\n    { suffix: 'syntax-heading4-font-size', default: '1.3em' },\n    { suffix: 'syntax-heading4-font-weight', default: '600' },\n    { suffix: 'syntax-heading5-color', default: 'var(--ink-internal-syntax-heading-color, inherit)' },\n    { suffix: 'syntax-heading5-font-size', default: '1.2em' },\n    { suffix: 'syntax-heading5-font-weight', default: '600' },\n    { suffix: 'syntax-heading6-color', default: 'var(--ink-internal-syntax-heading-color, inherit)' },\n    { suffix: 'syntax-heading6-font-size', default: '1.1em' },\n    { suffix: 'syntax-heading6-font-weight', default: '600' },\n    { suffix: 'syntax-highlight-background-color', default: '#555555' },\n    { suffix: 'syntax-keyword-color', default: '#c678dd' },\n    { suffix: 'syntax-link-color', default: 'inherit' },\n    { suffix: 'syntax-meta-color', default: '#abb2bf' },\n    { suffix: 'syntax-monospace-color', default: 'var(--ink-internal-code-color)' },\n    { suffix: 'syntax-monospace-font-family', default: 'var(--ink-internal-code-font-family)' },\n    { suffix: 'syntax-name-color', default: '#d19a66' },\n    { suffix: 'syntax-name-label-color', default: '#abb2bf' },\n    { suffix: 'syntax-name-property-color', default: '#96c0d8' },\n    { suffix: 'syntax-name-property-definition-color', default: '#e06c75' },\n    { suffix: 'syntax-name-variable-color', default: '#e06c75' },\n    { suffix: 'syntax-name-variable-definition-color', default: '#e5c07b' },\n    { suffix: 'syntax-name-variable-local-color', default: '#d19a66' },\n    { suffix: 'syntax-name-variable-special-color', default: 'inherit' },\n    { suffix: 'syntax-number-color', default: '#d19a66' },\n    { suffix: 'syntax-operator-color', default: '#96c0d8' },\n    { suffix: 'syntax-processing-instruction-color', default: '#444444', light: '#bbbbbb' },\n    { suffix: 'syntax-punctuation-color', default: '#abb2bf' },\n    { suffix: 'syntax-strikethrough-color', default: 'inherit' },\n    { suffix: 'syntax-strikethrough-text-decoration', default: 'line-through' },\n    { suffix: 'syntax-string-color', default: '#98c379' },\n    { suffix: 'syntax-string-special-color', default: 'inherit' },\n    { suffix: 'syntax-strong-color', default: 'inherit' },\n    { suffix: 'syntax-strong-font-weight', default: '600' },\n    { suffix: 'syntax-url-color', default: '#aaaaaa', light: '#666666' },\n    { suffix: 'toolbar-group-spacing', default: '2rem' },\n    { suffix: 'toolbar-item-spacing', default: '0' },\n  ]\n\n  const isLight = !isDark(state.options.interface.appearance)\n\n  return styles.map((style) => {\n    const value = (isLight && style.light) ? style.light : style.default\n\n    return `--ink-internal-${style.suffix}: var(--ink-${style.suffix}, ${value});`\n  })\n}\n", "export type ObjectTypeKey = keyof ObjectTypes\nexport type ObjectTypeValue = ObjectTypes[ObjectTypeKey]\nexport type ObjectTypes = typeof objectTypes\nexport type Thenable<T> = T extends { then: (...args: any[]) => any } ? T : never\n\nexport const objectTypes = {\n  array: '[object Array]',\n  asyncFunction: '[object AsyncFunction]',\n  boolean: '[object Boolean]',\n  function: '[object Function]',\n  null: '[object Null]',\n  number: '[object Number]',\n  object: '[object Object]',\n  promise: '[object Promise]',\n  string: '[object String]',\n  symbol: '[object Symbol]',\n  undefined: '[object Undefined]',\n  window: '[object Window]',\n} as const\n\nexport const is = <T>(type: ObjectTypeValue, object: T): object is T => {\n  return Object.prototype.toString.call(object) === type\n}\n\nexport const isArray = <T extends any[]>(object: T | any): object is T => is(objectTypes.array, object)\nexport const isAsyncFunction = <T extends (...args: any[]) => Promise<any>>(object: T | any): object is T => is(objectTypes.asyncFunction, object)\nexport const isBoolean = <T extends boolean>(object: T | any): object is T => is(objectTypes.boolean, object)\nexport const isFunction = <T extends (...args: any[]) => any>(object: T | any): object is T => is(objectTypes.function, object)\nexport const isNull = <T>(object: T | any): object is T => is(objectTypes.null, object)\nexport const isNumber = <T extends number>(object: T | any): object is T => is(objectTypes.number, object)\nexport const isObject = <T extends Record<any, any>>(object: T | any): object is T => is(objectTypes.object, object)\nexport const isPromise = <T>(object: T | Promise<T>): object is Promise<T> => is(objectTypes.promise, object)\nexport const isString = <T extends string>(object: T | any): object is T => is(objectTypes.string, object)\nexport const isSymbol = <T extends symbol>(object: T | any): object is T => is(objectTypes.symbol, object)\nexport const isUndefined = <T extends undefined>(object: T | any): object is T => is(objectTypes.undefined, object)\nexport const isWindow = <T extends Window>(object: T | any): object is T => is(objectTypes.window, object)\n\nexport const isThenable = <T extends { then: <A, R>(...args: A[]) => R }>(object: T | any): object is T => {\n  if (isPromise(object)) return true\n\n  return isObject(object) && ('then' in object) && (typeof object.then === 'function')\n}\n", "import { isPromise } from '/src/utils/inspect'\nimport { type EnumString, type Options, type OptionsResolved, type Values } from '/types/ink'\n\nexport type FlattenArray<T> = ReturnType<typeof flatten<T>>\nexport type FnIntersectionToTuple<FnIntersection> = FnIntersection extends { (a: infer A): void, (b: infer B): void } ? [A, B] : never\nexport type FnUnionToFnIntersection<FnUnion> = (FnUnion extends unknown ? (arg: FnUnion) => void : never) extends ((arg: infer FnIntersection) => void) ? FnIntersection : never\nexport type Partition<T, V> = UnionToTuple<T> extends never\n? [T] extends [infer A]\n  ? V extends ((arg: any) => arg is A)\n    ? [A[], unknown[]]\n    : V extends ((arg: any) => arg is infer AssertionType)\n      ? [AssertionType[], Array<A>]\n      : never\n  : never\n: UnionToTuple<T> extends [infer A, infer B]\n  ? V extends ((arg: any) => arg is A)\n    ? [A[], B[]]\n    : V extends ((arg: any) => arg is B)\n      ? [B[], A[]]\n      : V extends ((arg: any) => arg is infer AssertionType)\n        ? [AssertionType[], Array<A | B>]\n        : never\n  : never\nexport type PluginHandler<T> = { [P in keyof T]: (variant: T[P]) => any }\nexport type PluginMatcher = { [K in PluginType]: Extract<Options.Plugin, { type: K }> }\nexport type PluginType = Options.Plugin['type']\nexport type PluginForType<T extends Values.PluginType> = Extract<Options.Plugin, { type: T }>\nexport type PluginValueForType<T extends Values.PluginType> = PluginForType<T>['value']\nexport type RecursiveArray<T> = Array<T | RecursiveArray<T>>\nexport type UnionToFnUnion<Union> = Union extends unknown ? (k: Union) => void : never\nexport type UnionToTuple<Union> = FnIntersectionToTuple<FnUnionToFnIntersection<UnionToFnUnion<Union>>>\nexport type ValidatorFn = (arg: any) => boolean\n\nexport const enumString = <T extends string>(value: T) => {\n  return `${value}` as EnumString<T>\n}\n\nexport const partitionPlugins = <T extends Options.Plugin['value']>(plugins: T[]) => {\n  return partition(plugins, isPromise)\n}\n\nexport const isPlugin = <T extends PluginType>(pluginType: T, plugin: Options.Plugin): plugin is PluginMatcher[T] => {\n  return plugin.type === pluginType\n}\n\nexport const isOptionsKey = (key: string, options: OptionsResolved): key is keyof OptionsResolved => {\n  return !!key && (key in options)\n}\n\nexport const filterPlugins = <T extends PluginType>(pluginType: T, options: OptionsResolved): PluginMatcher[T]['value'][] => {\n  return flatten(options.plugins).reduce<PluginMatcher[T]['value'][]>((matches, plugin: Options.Plugin) => {\n    if (isPlugin(pluginType, plugin)) {\n      // Todo: These \"plugin\" keys might be better suited under a namespace, but they are top-level for now.\n      // Individual key resolvers might be a good idea down the road to check for more fine-grained configuration options.\n      if (!plugin.key || (isOptionsKey(plugin.key, options) && options[plugin.key])) {\n        matches.push(plugin.value)\n      }\n    }\n\n    return matches\n  }, [])\n}\n\nexport const flatten = <T>(array: RecursiveArray<T>): T[] => {\n  return array.reduce<T[]>((flatArray, item) => {\n    if (Array.isArray(item)) {\n      return flatArray.concat(flatten(item))\n    }\n\n    return flatArray.concat(item)\n  }, [])\n}\n\nexport const partition = <ArrayTypes, Validator extends ValidatorFn>(array: ArrayTypes[], isValid: Validator): Partition<ArrayTypes, Validator> => {\n  return array.reduce<Partition<ArrayTypes, Validator>>((partitions, entry) => {\n    isValid(entry) ? partitions[0].push(entry) : partitions[1].push(entry)\n\n    return partitions\n  }, [[], []] as unknown as Partition<ArrayTypes, Validator>)\n}\n\n// partition(['string'], isNumber)\n// partition([1], isNumber)\n// partition(['hello', 1, 'yep', 4], isPromise)\n// partition(['hello', 1, 'yep', 4], isString)\n", "import { EditorView } from '@codemirror/view'\nimport type { Extension } from '@codemirror/state'\n\nexport const appearance = (isDark: boolean): Extension => {\n  return [\n    EditorView.theme({}, { dark: isDark }),\n  ]\n}\n", "import { markdown as markdownExtension, markdownLanguage } from '@codemirror/lang-markdown'\nimport { languages as baseLanguages } from '@codemirror/language-data'\nimport { Compartment } from '@codemirror/state'\nimport { type MarkdownExtension } from '@lezer/markdown'\nimport { buildVendorUpdates } from '/src/extensions'\nimport { filterPlugins, partitionPlugins } from '/src/utils/options'\nimport { type InkInternal, type OptionsResolved, pluginTypes } from '/types'\n\nconst makeExtension = ([state, setState]: InkInternal.Store) => {\n  const baseExtensions = [] as MarkdownExtension[]\n  const [lazyExtensions, extensions] = filterExtensions(state().options)\n  const [lazyLanguages, languages] = filterLanguages(state().options)\n\n  if (Math.max(lazyExtensions.length, lazyLanguages.length) > 0) {\n    state().workQueue.enqueue(async () => {\n      const effects = await buildVendorUpdates([state, setState])\n\n      state().editor.dispatch({ effects })\n    })\n  }\n\n  return markdownExtension({\n    base: markdownLanguage,\n    codeLanguages: [...baseLanguages, ...languages],\n    extensions: [...baseExtensions, ...extensions],\n  })\n}\n\nconst filterExtensions = (options: OptionsResolved) => {\n  return partitionPlugins(filterPlugins(pluginTypes.grammar, options))\n}\n\nconst filterLanguages = (options: OptionsResolved) => {\n  return partitionPlugins(filterPlugins(pluginTypes.language, options))\n}\n\nconst updateExtension = async ([state]: InkInternal.Store) => {\n  const baseExtensions = [] as MarkdownExtension[]\n  const extensions = await Promise.all(filterPlugins(pluginTypes.grammar, state().options))\n  const languages = await Promise.all(filterPlugins(pluginTypes.language, state().options))\n\n  return markdownExtension({\n    base: markdownLanguage,\n    codeLanguages: [...baseLanguages, ...languages],\n    extensions: [...baseExtensions, ...extensions],\n  })\n}\n\nexport const markdown = (): InkInternal.Extension => {\n  const compartment = new Compartment()\n\n  return {\n    compartment,\n    initialValue: (store: InkInternal.Store) => {\n      return compartment.of(makeExtension(store))\n    },\n    reconfigure: async (store: InkInternal.Store) => {\n      return compartment.reconfigure(await updateExtension(store))\n    },\n  }\n}\n", "import { Compartment } from '@codemirror/state'\nimport { isAutoDark } from '/src/ui/utils'\nimport { filterPlugins, partitionPlugins } from '/src/utils/options'\nimport { appearance } from '/src/vendor/extensions/appearance'\nimport { appearanceTypes, pluginTypes } from '/types/values'\nimport { type InkInternal } from '/types'\nimport { markdown } from '/src/markdown'\n\nexport const buildVendors = ([state, setState]: InkInternal.Store) => {\n  const extensions = state().extensions.map(e => e.initialValue([state, setState]))\n\n  return extensions\n}\n\nexport const buildVendorUpdates = async ([state, setState]: InkInternal.Store) => {\n  const effects = await Promise.all(\n    state().extensions.map(async (extension) => {\n      return await extension.reconfigure([state, setState])\n    }),\n  )\n\n  return effects\n}\n\nexport const extension = (resolver: InkInternal.ExtensionResolver): InkInternal.Extension => {\n  const compartment = new Compartment()\n\n  return {\n    compartment,\n    initialValue: (store: InkInternal.Store) => {\n      return compartment.of(resolver(store))\n    },\n    reconfigure: (store: InkInternal.Store) => {\n      return compartment.reconfigure(resolver(store))\n    },\n  }\n}\n\nexport const lazyExtension = (reconfigure: InkInternal.LazyExtensionResolver): InkInternal.LazyExtension => {\n  const compartment = new Compartment()\n\n  return {\n    compartment,\n    initialValue: () => {\n      return compartment.of([])\n    },\n    reconfigure: (store: InkInternal.Store) => {\n      return reconfigure(store, compartment)\n    },\n  }\n}\n\nexport const createExtensions = () => {\n  return [\n    markdown(),\n    ...resolvers.map(r => extension(r)),\n    ...lazyResolvers.map(r => lazyExtension(r)),\n  ]\n}\n\nexport const resolvers: InkInternal.ExtensionResolvers = [\n  ([state]: InkInternal.Store) => {\n    const [_lazyExtensions, extensions] = partitionPlugins(filterPlugins(pluginTypes.default, state().options))\n\n    return extensions\n  },\n  ([state]: InkInternal.Store) => {\n    const isDark = state().options.interface.appearance === appearanceTypes.dark\n    const isAuto = state().options.interface.appearance === appearanceTypes.auto\n    const extension = appearance(isDark || (isAuto && isAutoDark()))\n\n    return extension\n  },\n]\n\nexport const lazyResolvers: InkInternal.LazyExtensionResolvers = [\n  async ([state]: InkInternal.Store, compartment: InkInternal.Vendor.Compartment) => {\n    const [lazyExtensions] = partitionPlugins(filterPlugins(pluginTypes.default, state().options))\n\n    if (lazyExtensions.length > 0) {\n      return compartment.reconfigure(await Promise.all(lazyExtensions))\n    }\n\n    return compartment.reconfigure([])\n  },\n  async ([state]: InkInternal.Store, compartment: InkInternal.Vendor.Compartment) => {\n    if (state().options.interface.autocomplete) {\n      const { autocomplete } = await import('/src/vendor/extensions/autocomplete')\n\n      return compartment.reconfigure(autocomplete(state().options))\n    }\n\n    return compartment.reconfigure([])\n  },\n  async ([state]: InkInternal.Store, compartment: InkInternal.Vendor.Compartment) => {\n    if (state().options.interface.images) {\n      const { images } = await import('/src/vendor/extensions/images')\n\n      return compartment.reconfigure(images())\n    }\n\n    return compartment.reconfigure([])\n  },\n  async ([state]: InkInternal.Store, compartment: InkInternal.Vendor.Compartment) => {\n    if (state().options.interface.lists) {\n      const { lists } = await import('/src/vendor/extensions/lists')\n\n      return compartment.reconfigure(lists())\n    }\n\n    return compartment.reconfigure([])\n  },\n  async ([state]: InkInternal.Store, compartment: InkInternal.Vendor.Compartment) => {\n    if (state().options.placeholder) {\n      const { placeholder } = await import('/src/vendor/extensions/placeholder')\n\n      return compartment.reconfigure(placeholder(state().options.placeholder))\n    }\n\n    return compartment.reconfigure([])\n  },\n  async ([state]: InkInternal.Store, compartment: InkInternal.Vendor.Compartment) => {\n    if (state().options.interface.readonly) {\n      const { readonly } = await import('/src/vendor/extensions/readonly')\n\n      return compartment.reconfigure(readonly())\n    }\n\n    return compartment.reconfigure([])\n  },\n  async ([state]: InkInternal.Store, compartment: InkInternal.Vendor.Compartment) => {\n    if (state().options.search) {\n      const { search } = await import('/src/vendor/extensions/search')\n\n      return compartment.reconfigure(search())\n    }\n\n    return compartment.reconfigure([])\n  },\n  async ([state]: InkInternal.Store, compartment: InkInternal.Vendor.Compartment) => {\n    if (state().options.interface.spellcheck) {\n      const { spellcheck } = await import('/src/vendor/extensions/spellcheck')\n\n      return compartment.reconfigure(spellcheck())\n    }\n\n    return compartment.reconfigure([])\n  },\n  async ([state]: InkInternal.Store, compartment: InkInternal.Vendor.Compartment) => {\n    if (state().options.vim) {\n      const { vim } = await import('/src/vendor/extensions/vim')\n\n      return compartment.reconfigure(vim())\n    }\n\n    return compartment.reconfigure([])\n  },\n]\n", "import { syntaxTree } from '@codemirror/language'\nimport type { Extension } from '@codemirror/state'\nimport { RangeSetBuilder } from '@codemirror/state'\nimport type { EditorView } from '@codemirror/view'\nimport { Decoration, ViewPlugin } from '@codemirror/view'\n\n// const mark = 'QuoteMark'\n\nconst blockquoteSyntaxNodes = [\n  'Blockquote',\n]\n\nconst blockquoteDecoration = Decoration.line({ attributes: { class: 'cm-blockquote' } })\nconst blockquoteOpenDecoration = Decoration.line({ attributes: { class: 'cm-blockquote-open' } })\nconst blockquoteCloseDecoration = Decoration.line({ attributes: { class: 'cm-blockquote-close' } })\n\nconst blockquotePlugin = ViewPlugin.define((view: EditorView) => {\n  return {\n    update: () => {\n      return decorate(view)\n    },\n  }\n}, { decorations: plugin => plugin.update() })\n\nconst decorate = (view: EditorView) => {\n  const builder = new RangeSetBuilder<Decoration>()\n  const tree = syntaxTree(view.state)\n\n  for (const visibleRange of view.visibleRanges) {\n    for (let position = visibleRange.from; position < visibleRange.to;) {\n      const line = view.state.doc.lineAt(position)\n\n      tree.iterate({\n        enter({ type, from, to }) {\n          if (type.name !== 'Document') {\n            if (blockquoteSyntaxNodes.includes(type.name)) {\n              builder.add(line.from, line.from, blockquoteDecoration)\n\n              const openLine = view.state.doc.lineAt(from)\n              const closeLine = view.state.doc.lineAt(to)\n\n              if (openLine.number === line.number)\n                builder.add(line.from, line.from, blockquoteOpenDecoration)\n\n              if (closeLine.number === line.number)\n                builder.add(line.from, line.from, blockquoteCloseDecoration)\n\n              return false\n            }\n          }\n        },\n        from: line.from,\n        to: line.to,\n      })\n\n      position = line.to + 1\n    }\n  }\n\n  return builder.finish()\n}\n\nexport const blockquote = (): Extension => {\n  return [\n    blockquotePlugin,\n  ]\n}\n", "import { syntaxTree } from '@codemirror/language'\nimport type { Extension } from '@codemirror/state'\nimport { RangeSetBuilder } from '@codemirror/state'\nimport type { EditorView } from '@codemirror/view'\nimport { Decoration, ViewPlugin } from '@codemirror/view'\n\nconst codeBlockSyntaxNodes = [\n  'CodeBlock',\n  'FencedCode',\n  'HTMLBlock',\n  'CommentBlock',\n]\n\nconst sharedAttributes = {\n  // Prevent spellcheck in all code blocks. The Grammarly extension might not respect these values.\n  'data-enable-grammarly': 'false',\n  'data-gramm': 'false',\n  'data-grammarly-skip': 'true',\n  'spellcheck': 'false',\n}\n\nconst codeBlockDecoration = Decoration.line({ attributes: { ...sharedAttributes, class: 'cm-codeblock' } })\nconst codeBlockOpenDecoration = Decoration.line({ attributes: { ...sharedAttributes, class: 'cm-codeblock-open' } })\nconst codeBlockCloseDecoration = Decoration.line({ attributes: { ...sharedAttributes, class: 'cm-codeblock-close' } })\nconst codeDecoration = Decoration.mark({ attributes: { ...sharedAttributes, class: 'cm-code' } })\nconst codeOpenDecoration = Decoration.mark({ attributes: { ...sharedAttributes, class: 'cm-code cm-code-open' } })\nconst codeCloseDecoration = Decoration.mark({ attributes: { ...sharedAttributes, class: 'cm-code cm-code-close' } })\n\nconst codeBlockPlugin = ViewPlugin.define((view: EditorView) => {\n  return {\n    update: () => {\n      return decorate(view)\n    },\n  }\n}, { decorations: plugin => plugin.update() })\n\nconst decorate = (view: EditorView) => {\n  const builder = new RangeSetBuilder<Decoration>()\n  const tree = syntaxTree(view.state)\n\n  for (const visibleRange of view.visibleRanges) {\n    for (let position = visibleRange.from; position < visibleRange.to;) {\n      const line = view.state.doc.lineAt(position)\n      let inlineCode: { from: number, to: number, innerFrom: number, innerTo: number }\n\n      tree.iterate({\n        enter({ type, from, to }) {\n          if (type.name !== 'Document') {\n            if (codeBlockSyntaxNodes.includes(type.name)) {\n              builder.add(line.from, line.from, codeBlockDecoration)\n\n              const openLine = view.state.doc.lineAt(from)\n              const closeLine = view.state.doc.lineAt(to)\n\n              if (openLine.number === line.number)\n                builder.add(line.from, line.from, codeBlockOpenDecoration)\n\n              if (closeLine.number === line.number)\n                builder.add(line.from, line.from, codeBlockCloseDecoration)\n\n              return false\n            } else if (type.name === 'InlineCode') {\n              // Store a reference for the last inline code node.\n              inlineCode = { from, to, innerFrom: from, innerTo: to }\n            } else if (type.name === 'CodeMark') {\n              // Make sure the code mark is a part of the previously stored inline code node.\n              if (from === inlineCode.from) {\n                inlineCode.innerFrom = to\n\n                builder.add(from, to, codeOpenDecoration)\n              } else if (to === inlineCode.to) {\n                inlineCode.innerTo = from\n\n                builder.add(inlineCode.innerFrom, inlineCode.innerTo, codeDecoration)\n                builder.add(from, to, codeCloseDecoration)\n              }\n            }\n          }\n        },\n        from: line.from,\n        to: line.to,\n      })\n\n      position = line.to + 1\n    }\n  }\n\n  return builder.finish()\n}\n\nexport const code = (): Extension => {\n  return [\n    codeBlockPlugin,\n  ]\n}\n", "import type { Extension } from '@codemirror/state'\nimport { EditorView } from '@codemirror/view'\n\nconst inkClassExtensions = () => {\n  return [\n    EditorView.editorAttributes.of({\n      class: 'ink-mde-container',\n    }),\n    EditorView.contentAttributes.of({\n      class: 'ink-mde-editor-content',\n    }),\n    // Todo: Maybe open a PR to add scrollerAttributes?\n  ]\n}\n\nexport const ink = (): Extension => {\n  return [\n    ...inkClassExtensions(),\n  ]\n}\n", "import { defaultKeymap, historyKeymap, indentLess, indentMore } from '@codemirror/commands'\nimport type { Extension } from '@codemirror/state'\nimport { Transaction } from '@codemirror/state'\nimport type { KeyBinding } from '@codemirror/view'\nimport { keymap } from '@codemirror/view'\n\nconst keyMaps: KeyBinding[] = [\n  {\n    key: 'Tab',\n    run: ({ state, dispatch }) => {\n      if (state.selection.ranges.some(r => !r.empty))\n        return indentMore({ state, dispatch })\n\n      dispatch(\n        state.update(state.replaceSelection('  '), {\n          scrollIntoView: true,\n          annotations: Transaction.userEvent.of('input'),\n        }),\n      )\n\n      return true\n    },\n    shift: indentLess,\n  },\n]\n\nexport const keymaps = (): Extension => {\n  return keymap.of([\n    ...keyMaps,\n    ...defaultKeymap,\n    ...historyKeymap,\n  ])\n}\n", "import type { Extension } from '@codemirror/state'\nimport { EditorView } from '@codemirror/view'\n\nexport const lineWrapping = (): Extension => {\n  return EditorView.lineWrapping\n}\n", "import { HighlightStyle, syntaxHighlighting } from '@codemirror/language'\nimport type { Extension } from '@codemirror/state'\nimport { tags } from '@lezer/highlight'\n\nexport const theme = (): Extension => {\n  const extension = syntaxHighlighting(\n    HighlightStyle.define([\n      // ordered by lowest to highest precedence\n      {\n        tag: tags.atom,\n        color: 'var(--ink-internal-syntax-atom-color)',\n      },\n      {\n        tag: tags.meta,\n        color: 'var(--ink-internal-syntax-meta-color)',\n      },\n      // emphasis types\n      {\n        tag: tags.emphasis,\n        color: 'var(--ink-internal-syntax-emphasis-color)',\n        fontStyle: 'var(--ink-internal-syntax-emphasis-font-style)',\n      },\n      {\n        tag: tags.strong,\n        color: 'var(--ink-internal-syntax-strong-color)',\n        fontWeight: 'var(--ink-internal-syntax-strong-font-weight)',\n      },\n      {\n        tag: tags.strikethrough,\n        color: 'var(--ink-internal-syntax-strikethrough-color)',\n        textDecoration: 'var(--ink-internal-syntax-strikethrough-text-decoration)',\n      },\n      // comment group\n      {\n        tag: tags.comment,\n        color: 'var(--ink-internal-syntax-comment-color)',\n        fontStyle: 'var(--ink-internal-syntax-comment-font-style)',\n      },\n      // monospace\n      {\n        tag: tags.monospace,\n        color: 'var(--ink-internal-syntax-code-color)',\n        fontFamily: 'var(--ink-internal-syntax-code-font-family)',\n      },\n      // name group\n      {\n        tag: tags.name,\n        color: 'var(--ink-internal-syntax-name-color)',\n      },\n      {\n        tag: tags.labelName,\n        color: 'var(--ink-internal-syntax-name-label-color)',\n      },\n      {\n        tag: tags.propertyName,\n        color: 'var(--ink-internal-syntax-name-property-color)',\n      },\n      {\n        tag: tags.definition(tags.propertyName),\n        color: 'var(--ink-internal-syntax-name-property-definition-color)',\n      },\n      {\n        tag: tags.variableName,\n        color: 'var(--ink-internal-syntax-name-variable-color)',\n      },\n      {\n        tag: tags.definition(tags.variableName),\n        color: 'var(--ink-internal-syntax-name-variable-definition-color)',\n      },\n      {\n        tag: tags.local(tags.variableName),\n        color: 'var(--ink-internal-syntax-name-variable-local-color)',\n      },\n      {\n        tag: tags.special(tags.variableName),\n        color: 'var(--ink-internal-syntax-name-variable-special-color)',\n      },\n      // headings\n      {\n        tag: tags.heading,\n        color: 'var(--ink-internal-syntax-heading-color)',\n        fontWeight: 'var(--ink-internal-syntax-heading-font-weight)',\n      },\n      {\n        tag: tags.heading1,\n        color: 'var(--ink-internal-syntax-heading1-color)',\n        fontSize: 'var(--ink-internal-syntax-heading1-font-size)',\n        fontWeight: 'var(--ink-internal-syntax-heading1-font-weight)',\n      },\n      {\n        tag: tags.heading2,\n        color: 'var(--ink-internal-syntax-heading2-color)',\n        fontSize: 'var(--ink-internal-syntax-heading2-font-size)',\n        fontWeight: 'var(--ink-internal-syntax-heading2-font-weight)',\n      },\n      {\n        tag: tags.heading3,\n        color: 'var(--ink-internal-syntax-heading3-color)',\n        fontSize: 'var(--ink-internal-syntax-heading3-font-size)',\n        fontWeight: 'var(--ink-internal-syntax-heading3-font-weight)',\n      },\n      {\n        tag: tags.heading4,\n        color: 'var(--ink-internal-syntax-heading4-color)',\n        fontSize: 'var(--ink-internal-syntax-heading4-font-size)',\n        fontWeight: 'var(--ink-internal-syntax-heading4-font-weight)',\n      },\n      {\n        tag: tags.heading5,\n        color: 'var(--ink-internal-syntax-heading5-color)',\n        fontSize: 'var(--ink-internal-syntax-heading5-font-size)',\n        fontWeight: 'var(--ink-internal-syntax-heading5-font-weight)',\n      },\n      {\n        tag: tags.heading6,\n        color: 'var(--ink-internal-syntax-heading6-color)',\n        fontSize: 'var(--ink-internal-syntax-heading6-font-size)',\n        fontWeight: 'var(--ink-internal-syntax-heading6-font-weight)',\n      },\n      // contextual tag types\n      {\n        tag: tags.keyword,\n        color: 'var(--ink-internal-syntax-keyword-color)',\n      },\n      {\n        tag: tags.number,\n        color: 'var(--ink-internal-syntax-number-color)',\n      },\n      {\n        tag: tags.operator,\n        color: 'var(--ink-internal-syntax-operator-color)',\n      },\n      {\n        tag: tags.punctuation,\n        color: 'var(--ink-internal-syntax-punctuation-color)',\n      },\n      {\n        tag: tags.link,\n        color: 'var(--ink-internal-syntax-link-color)',\n      },\n      {\n        tag: tags.url,\n        color: 'var(--ink-internal-syntax-url-color)',\n      },\n      // string group\n      {\n        tag: tags.string,\n        color: 'var(--ink-internal-syntax-string-color)',\n      },\n      {\n        tag: tags.special(tags.string),\n        color: 'var(--ink-internal-syntax-string-special-color)',\n      },\n      // processing instructions\n      {\n        tag: tags.processingInstruction,\n        color: 'var(--ink-internal-syntax-processing-instruction-color)',\n      },\n    ]),\n  )\n\n  return [\n    extension,\n  ]\n}\n", "import { history } from '@codemirror/commands'\nimport { type EditorSelection, EditorState } from '@codemirror/state'\nimport { toCodeMirror } from './adapters/selections'\nimport { buildVendors } from '/src/extensions'\nimport { blockquote } from '/src/vendor/extensions/blockquote'\nimport { code } from '/src/vendor/extensions/code'\nimport { ink } from '/src/vendor/extensions/ink'\nimport { keymaps } from '/src/vendor/extensions/keymaps'\nimport { lineWrapping } from '/src/vendor/extensions/line_wrapping'\nimport { theme } from '/src/vendor/extensions/theme'\nimport type * as Ink from '/types/ink'\nimport type InkInternal from '/types/internal'\n\nconst toVendorSelection = (selections: Ink.Editor.Selection[]): EditorSelection | undefined => {\n  if (selections.length > 0)\n    return toCodeMirror(selections)\n}\n\nexport const makeState = ([state, setState]: InkInternal.Store): InkInternal.Vendor.State => {\n  return EditorState.create({\n    doc: state().options.doc,\n    selection: toVendorSelection(state().options.selections),\n    extensions: [\n      blockquote(),\n      code(),\n      history(),\n      ink(),\n      keymaps(),\n      lineWrapping(),\n      theme(),\n      ...buildVendors([state, setState]),\n    ],\n  })\n}\n", "import { override } from '/src/utils/merge'\nimport { makeState } from '/src/vendor/state'\nimport type InkInternal from '/types/internal'\n\nexport const load = ([state, setState]: InkInternal.Store, doc: string) => {\n  setState(override(state(), { options: { doc } }))\n\n  state().editor.setState(makeState([state, setState]))\n}\n", "import type InkInternal from '/types/internal'\n\nexport const options = ([state]: InkInternal.Store) => {\n  return state().options\n}\n", "import { buildVendorUpdates } from '/src/extensions'\nimport { override } from '/src/utils/merge'\nimport type * as Ink from '/types/ink'\nimport type InkInternal from '/types/internal'\n\nexport const reconfigure = async ([state, setState]: InkInternal.Store, options: Ink.Options) => {\n  const { workQueue } = state()\n\n  return workQueue.enqueue(async () => {\n    setState(override(state(), { options }))\n    const effects = await buildVendorUpdates([state, setState])\n\n    state().editor.dispatch({ effects })\n  })\n}\n", "import { toCodeMirror } from '/src/vendor/adapters/selections'\nimport * as InkValues from '/types/values'\nimport type * as Ink from '/types/ink'\nimport type InkInternal from '/types/internal'\n\nexport const select = (store: InkInternal.Store, options: Ink.Instance.SelectOptions = {}) => {\n  if (options.selections)\n    return selectMultiple(store, options.selections)\n  if (options.selection)\n    return selectOne(store, options.selection)\n  if (options.at)\n    return selectAt(store, options.at)\n}\n\nexport const selectAt = (store: InkInternal.Store, at: Ink.Values.Selection) => {\n  const [state] = store\n\n  if (at === InkValues.Selection.Start)\n    return selectOne(store, { start: 0, end: 0 })\n\n  if (at === InkValues.Selection.End) {\n    const position = state().editor.state.doc.length\n\n    return selectOne(store, { start: position, end: position })\n  }\n}\n\nexport const selectMultiple = ([state]: InkInternal.Store, selections: Ink.Editor.Selection[]) => {\n  const { editor } = state()\n\n  editor.dispatch(\n    editor.state.update({\n      selection: toCodeMirror(selections),\n    }),\n  )\n}\n\nexport const selectOne = (store: InkInternal.Store, selection: Ink.Editor.Selection) => {\n  return selectMultiple(store, [selection])\n}\n", "import type InkInternal from '/types/internal'\n\nexport const update = ([state]: InkInternal.Store, doc: string) => {\n  const { editor } = state()\n\n  editor.dispatch(\n    editor.state.update({\n      changes: {\n        from: 0,\n        to: editor.state.doc.length,\n        insert: doc,\n      },\n    }),\n  )\n}\n", "import { insert } from './insert'\nimport { select } from './select'\nimport { selections } from './selections'\nimport type * as Ink from '/types/ink'\nimport type InkInternal from '/types/internal'\n\nexport const wrap = ([state, setState]: InkInternal.Store, { after, before, selection: userSelection }: Ink.Instance.WrapOptions) => {\n  const { editor } = state()\n\n  const selection = userSelection || selections([state, setState]).pop() || { start: 0, end: 0 }\n  const text = editor.state.sliceDoc(selection.start, selection.end)\n\n  insert([state, setState], `${before}${text}${after}`, selection)\n  select([state, setState], { selections: [{ start: selection.start + before.length, end: selection.end + before.length }] })\n}\n", "import { type Thenable } from '/src/utils/inspect'\n\nexport type Awaitable<T> = () => Promise<T>\nexport type AwaitableCallbacks = { fulfilled: AwaitableCallback[], rejected: AwaitableCallback[], settled: AwaitableCallback[] }\nexport type AwaitableSettler<T = any> = (value: T) => void\nexport type AwaitableThenSettler<T = any, R = any> = (value: T) => R | Thenable<R>\nexport type AwaitableCallback = () => void\nexport type AwaitableHandler<ResolvedValue = unknown, RejectedValue = unknown> = (resolve: AwaitableSettler<ResolvedValue>, reject: AwaitableSettler<RejectedValue>) => any\nexport type AwaitableState = { callbacks: AwaitableCallbacks, error?: any, status: AwaitableStatus, value?: any }\nexport type AwaitableStatus = 'fulfilled' | 'pending' | 'rejected'\n\n// Todo: Make it so that it allows 2 values to be returned: first one for initial return object (merged with awaitable), second one for resolved object (defaults to the first)\nexport const awaitable = <InitialValue extends object, ResolvedValue = InitialValue, RejectedValue = unknown>(initialValue: InitialValue, handler: AwaitableHandler<ResolvedValue, RejectedValue>): InitialValue & Promise<ResolvedValue> => {\n  const state: AwaitableState = {\n    callbacks: {\n      fulfilled: [],\n      rejected: [],\n      settled: [],\n    },\n    status: 'pending',\n  }\n\n  const callback = (settler: AwaitableThenSettler, { resolve, reject }: { reject: AwaitableSettler, resolve?: AwaitableSettler }) => {\n    return () => {\n      try {\n        const settledValue = settler(state.value)\n\n        Promise.resolve(settledValue).then(resolve, reject)\n      } catch (error: any) {\n        reject(error)\n      }\n    }\n  }\n\n  const reject = (value: RejectedValue) => {\n    if (state.status === 'pending') {\n      state.status = 'rejected'\n      state.value = value\n\n      state.callbacks.rejected.forEach(callback => callback())\n      state.callbacks.settled.forEach(callback => callback())\n    }\n  }\n\n  const resolve = (value: ResolvedValue) => {\n    if (state.status === 'pending') {\n      state.status = 'fulfilled'\n      state.value = value\n\n      state.callbacks.fulfilled.forEach(callback => callback())\n      state.callbacks.settled.forEach(callback => callback())\n    }\n  }\n\n  const then = <OnFulfilled extends AwaitableThenSettler, OnRejected extends AwaitableThenSettler>(onFulfilled?: OnFulfilled, onRejected?: OnRejected) => {\n    return new Promise<ReturnType<Awaited<OnFulfilled>>>((resolve, reject) => {\n      if (state.status === 'pending') {\n        if (onFulfilled) {\n          state.callbacks.fulfilled.push(callback(onFulfilled, { resolve, reject }))\n        }\n\n        if (onRejected) {\n          state.callbacks.rejected.push(callback(onRejected, { resolve: undefined, reject }))\n        }\n      }\n\n      if (state.status === 'fulfilled' && onFulfilled) {\n        callback(onFulfilled, { resolve, reject })()\n      }\n\n      if (state.status === 'rejected' && onRejected) {\n        callback(onRejected, { resolve: undefined, reject })()\n      }\n    })\n  }\n\n  queueMicrotask(() => {\n    try {\n      handler(resolve, reject)\n    } catch (error: any) {\n      reject(error)\n    }\n  })\n\n  return {\n    ...initialValue,\n    [Symbol.toStringTag]: 'awaitable',\n    catch: then.bind(undefined, undefined),\n    finally: (onSettled: () => void) => {\n      return new Promise((resolve, reject) => {\n        if (state.status === 'pending') {\n          state.callbacks.settled.push(callback(onSettled, { resolve, reject }))\n        }\n\n        if (state.status === 'fulfilled') {\n          onSettled()\n          resolve(state.value)\n        }\n\n        if (state.status === 'rejected') {\n          onSettled()\n          reject(state.value)\n        }\n      })\n    },\n    then,\n  }\n}\n", "import {\n  destroy,\n  focus,\n  format,\n  getDoc,\n  insert,\n  load,\n  options,\n  reconfigure,\n  select,\n  selections,\n  update,\n  wrap,\n} from '/src/api'\nimport { awaitable } from '/src/utils/awaitable'\nimport type * as Ink from '/types/ink'\nimport type InkInternal from '/types/internal'\n\nexport const makeInstance = (store: InkInternal.Store): Ink.AwaitableInstance => {\n  const instance = {\n    destroy: destroy.bind(undefined, store),\n    focus: focus.bind(undefined, store),\n    format: format.bind(undefined, store),\n    getDoc: getDoc.bind(undefined, store),\n    insert: insert.bind(undefined, store),\n    load: load.bind(undefined, store),\n    options: options.bind(undefined, store),\n    reconfigure: reconfigure.bind(undefined, store),\n    select: select.bind(undefined, store),\n    selections: selections.bind(undefined, store),\n    update: update.bind(undefined, store),\n    wrap: wrap.bind(undefined, store),\n  }\n\n  return awaitable(instance, (resolve, reject) => {\n    try {\n      const [state] = store\n\n      // Ensure all other queued tasks are finished before resolving.\n      state().workQueue.enqueue(() => resolve(instance))\n    } catch (error: any) {\n      reject(error)\n    }\n  })\n}\n", "import { type Katex } from './importers/katex'\n\nexport type ModuleMap = Partial<{\n  katex: Katex | Promise<Katex>,\n}>\n\nexport const modules = new Proxy({}, {\n  get: (target: ModuleMap, prop: keyof ModuleMap, _receiver) => {\n    if (target[prop]) return target[prop]\n\n    return target[prop] = (async () => {\n      // Todo: Figure out whether including the extension here will pose a problem in the production build.\n      const { importer } = await import(`./importers/${prop}.ts`)\n      const imported = await importer() as Awaited<typeof target[typeof prop]>\n\n      target[prop] = imported\n\n      return imported!\n    })()\n  },\n})\n\n/**\n *\n * @example useModule('katex', (katex) => katex.render(...))\n */\nexport const useModule = (name: keyof ModuleMap, callback: (module: Awaited<Required<ModuleMap>[typeof name]>) => void) => {\n  if (!modules[name]) return console.error('[katex] module is not resolvable')\n  if ('then' in modules[name]!) return Promise.resolve(modules[name]!).then(callback)\n\n  callback(modules[name] as Awaited<Required<ModuleMap>[typeof name]>)\n}\n", "import { syntaxTree } from '@codemirror/language'\nimport { type EditorState, type Range, type RangeCursor, RangeSet, StateField, type Transaction } from '@codemirror/state'\nimport { Decoration, EditorView, type WidgetType } from '@codemirror/view'\nimport { type SyntaxNodeRef } from '@lezer/common'\n\n// Todo: Maybe open a PR to expose these types.\n// https://github.com/codemirror/view/blob/3f1b991f3db20d152045ae9e6872466fc8d8fdac/src/decoration.ts\nexport type LineDecorationSpec = { attributes?: { [key: string]: string }, class?: string, [other: string]: any }\nexport type MarkDecorationSpec = { attributes?: { [key: string]: string }, class?: string, inclusive?: boolean, inclusiveEnd?: boolean, inclusiveStart?: boolean, tagName?: string, [other: string]: any }\nexport type ReplaceDecorationSpec = { block?: boolean, inclusive?: boolean, inclusiveEnd?: boolean, inclusiveStart?: boolean, widget?: WidgetType, [other: string]: any }\nexport type WidgetDecorationSpec = { widget: WidgetType, block?: boolean, side?: number, [other: string]: any }\n\n// Custom types.\nexport type CustomDecorationArgs = Parameters<typeof Decoration.mark>[0]\nexport type CustomDecoration<T> = T & Decoration\nexport type CustomDecorationTypes = 'line' | 'mark' | 'replace' | 'widget'\nexport type CustomWidget<T> = T & WidgetSpec & { compare: (other: CustomWidget<T>) => boolean }\nexport type CustomWidgetArgs = PartialWidgetSpec & Record<string, any>\nexport type CustomWidgetDecoration<T> = T & WidgetDecoration<T> & Decoration\nexport type CustomWidgetDecorationArgs = WidgetDecorationSpec & Record<string, any>\nexport type NodeBlockDecoration<T> = CustomWidgetDecoration<T> & { widget: { node: SyntaxNodeRef } }\nexport type NodeDecoratorArgs<T extends Decoration> = {\n  nodes: string[],\n  onMatch: (state: EditorState, node: SyntaxNodeRef) => T | T[] | void,\n  optimize?: boolean,\n  range?: {\n    from?: number,\n    to?: number,\n  },\n}\nexport type PartialWidgetSpec = Partial<WidgetSpec>\nexport type TypedDecoration = Decoration & { spec: Decoration['spec'] & { type: CustomDecorationTypes } }\nexport type WidgetSpec = WidgetType & { id?: string }\nexport type WidgetDecoration<T> = { block: boolean, side: number, widget: CustomWidget<T> }\n\nexport const buildBlockWidgetDecoration = <T extends CustomWidgetDecorationArgs>(options: T) => {\n  return buildWidgetDecoration({\n    block: true,\n    side: -1,\n    ...options,\n  })\n}\n\nexport const buildLineDecoration = <T extends MarkDecorationSpec>(options: T) => {\n  return Decoration.line({\n    ...options,\n    type: 'line',\n  }) as CustomDecoration<T>\n}\n\nexport const buildMarkDecoration = <T extends MarkDecorationSpec>(options: T) => {\n  return Decoration.mark({\n    ...options,\n    type: 'mark',\n  }) as CustomDecoration<T>\n}\n\nexport const buildWidget = <T extends CustomWidgetArgs>(options: T): CustomWidget<T> => {\n  const eq = options.eq || ((other: CustomWidget<T>) => {\n    if (!options.id) return false\n\n    return options.id === other.id\n  })\n\n  return {\n    compare: eq,\n    destroy: () => {},\n    eq,\n    estimatedHeight: -1,\n    ignoreEvent: () => true,\n    toDOM: () => {\n      return document.createElement('span')\n    },\n    updateDOM: () => false,\n    ...options,\n  }\n}\n\nexport const buildWidgetDecoration = <T extends CustomWidgetDecorationArgs>(options: T): CustomWidgetDecoration<T> => {\n  return Decoration.widget({\n    block: false,\n    side: 0,\n    ...options,\n    widget: buildWidget({\n      ...options.widget,\n    }),\n    type: 'widget',\n  }) as CustomWidgetDecoration<T>\n}\n\nexport const buildNodeDecorations = <T extends TypedDecoration>(state: EditorState, options: NodeDecoratorArgs<T>) => {\n  const decorationRanges: Range<NodeBlockDecoration<T>>[] = []\n\n  syntaxTree(state).iterate({\n    enter: (node) => {\n      if (options.nodes.includes(node.type.name)) {\n        const maybeDecorations = options.onMatch(state, node)\n\n        if (!maybeDecorations) return\n\n        const decorations = Array<T>().concat(maybeDecorations)\n\n        decorations.forEach((decoration) => {\n          if (decoration.spec.type === 'line') {\n            const wrapped = buildLineDecoration({ ...decoration.spec, node: { ...node } })\n\n            for (let line = state.doc.lineAt(node.from); line.from < node.to; line = state.doc.lineAt(line.to + 1)) {\n              decorationRanges.push(wrapped.range(line.from))\n            }\n          }\n\n          if (decoration.spec.type === 'mark') {\n            const wrapped = buildMarkDecoration({ ...decoration.spec, node: { ...node } }).range(node.from, node.to)\n\n            decorationRanges.push(wrapped)\n          }\n\n          if (decoration.spec.type === 'widget') {\n            const wrapped = buildWidgetDecoration({ ...decoration.spec, node: { ...node } }).range(node.from)\n\n            decorationRanges.push(wrapped)\n          }\n        })\n      }\n    },\n    from: options.range?.from,\n    to: options.range?.to,\n  })\n\n  return decorationRanges.sort((left, right) => {\n    return left.from - right.from\n  })\n}\n\nexport const buildOptimizedNodeDecorations = <T extends Decoration>(rangeSet: RangeSet<NodeBlockDecoration<T>>, transaction: Transaction, options: NodeDecoratorArgs<T>) => {\n  const decorations = [] as Range<NodeBlockDecoration<T>>[]\n  const cursor = rangeSet.iter()\n  const cursors = [] as RangeCursor<NodeBlockDecoration<T>>[]\n  const cursorsToSkip = [] as RangeCursor<NodeBlockDecoration<T>>[]\n\n  while (cursor.value) {\n    cursors.push({ ...cursor })\n    cursor.next()\n  }\n\n  transaction.changes.iterChangedRanges((_beforeFrom, _beforeTo, changeFrom, changeTo) => {\n    cursors.forEach((cursor) => {\n      if (cursor.value) {\n        const nodeLength = cursor.value.spec.node.to - cursor.value.spec.node.from\n        const cursorFrom = cursor.from\n        const cursorTo = cursor.from + nodeLength\n\n        if (isOverlapping(cursorFrom, cursorTo, changeFrom, changeTo)) {\n          cursorsToSkip.push(cursor)\n        }\n      }\n    })\n\n    const range = { from: changeFrom, to: changeTo }\n\n    decorations.push(...buildNodeDecorations(transaction.state, { ...options, range }))\n  })\n\n  const cursorDecos = cursors.filter(cursor => !cursorsToSkip.includes(cursor)).flatMap((cursor) => {\n    const range = cursor.value?.range(cursor.from) as Range<NodeBlockDecoration<T>>\n\n    if (!range) return []\n\n    return [range]\n  })\n\n  decorations.push(...cursorDecos)\n\n  const allDecorations = decorations.sort((left, right) => {\n    return left.from - right.from\n  })\n\n  // This reprocesses the entire state.\n  return allDecorations\n}\n\nexport const isOverlapping = (x1: number, x2: number, y1: number, y2: number) => {\n  return Math.max(x1, y1) <= Math.min(x2, y2)\n}\n\nexport const nodeDecorator = <T extends Decoration>(options: NodeDecoratorArgs<T>) => {\n  return StateField.define<RangeSet<NodeBlockDecoration<T>>>({\n    create(state) {\n      return RangeSet.of(buildNodeDecorations(state, options))\n    },\n    update(rangeSet, transaction) {\n      // Reconfiguration and state effects will reprocess the entire state to ensure nothing is missed.\n      if (transaction.reconfigured || transaction.effects.length > 0) {\n        return RangeSet.of(buildNodeDecorations(transaction.state, options))\n      }\n\n      const updatedRangeSet = rangeSet.map(transaction.changes)\n\n      if (transaction.docChanged) {\n        // Only process the ranges that are affected by this change.\n        if (options.optimize) {\n          return RangeSet.of(buildOptimizedNodeDecorations(updatedRangeSet, transaction, options))\n        }\n\n        return RangeSet.of(buildNodeDecorations(transaction.state, options))\n      }\n\n      // No need to redecorate. Instead, just map the decorations through the transaction changes.\n      return updatedRangeSet\n    },\n    provide(field) {\n      // Provide the extension to the editor.\n      return EditorView.decorations.from(field)\n    },\n  })\n}\n", "import { Tag } from '@lezer/highlight'\n\nexport const buildTag = <T extends Tag>(parent?: T) => {\n  return Tag.define(parent)\n}\n\nexport const getCharCode = (char: string) => {\n  return char.charCodeAt(0)\n}\n", "import { type Tag, tags } from '@lezer/highlight'\nimport { type BlockParser, type DelimiterType, type InlineParser, type MarkdownConfig, type NodeSpec } from '@lezer/markdown'\nimport { buildTag, getCharCode } from './parsers'\n\nexport const buildMarkNode = (markName: string) => {\n  return buildTaggedNode(markName, [tags.processingInstruction])\n}\n\nexport const buildTaggedNode = (nodeName: string, styleTags: Tag[] = []) => {\n  const tag = buildTag()\n  const node = defineNode({\n    name: nodeName,\n    style: [tag, ...styleTags],\n  })\n\n  return {\n    node,\n    tag,\n  }\n}\n\nexport const defineBlockParser = <T extends BlockParser>(options: T) => options\nexport const defineDelimiter = <T extends DelimiterType>(options?: T) => ({ ...options })\nexport const defineInlineParser = <T extends InlineParser>(options: T) => options\nexport const defineMarkdown = <T extends MarkdownConfig>(options: T) => options\nexport const defineNode = <T extends NodeSpec>(options: T) => options\n\n/**\n * Build an inline Markdown parser that matches a custom expression. E.g. `[[hello]]` for wikilinks.\n *\n * @param options\n * @param options.name The name of the new node type. E.g. `WikiLink` for wikilinks.\n * @param options.prefix The tokens that indicate the start of the custom expression. E.g. `[[` for wikilinks.\n * @param options.suffix The tokens that indicate the end of the custom expression. E.g. `]]` for wikilinks.\n * @param options.matcher The regex that matches the custom expression. E.g. `/(?<prefix>\\[\\[)(?<content>.*?)(?<suffix>\\]\\])/` for wikilinks.\n */\nexport const buildInlineParser = (options: { name: string, prefix: string, matcher?: RegExp, suffix?: string }) => {\n  const { name, prefix, suffix } = options\n  const matcher = options.matcher || new RegExp(`(?<prefix>${prefix})(?<content>.*?)(?<suffix>${suffix})`)\n  const [firstCharCode, ...prefixCharCodes] = prefix.split('').map(getCharCode)\n\n  const taggedNode = buildTaggedNode(name)\n  const taggedNodeMark = buildMarkNode(`${name}Mark`)\n  const taggedNodeMarkStart = buildMarkNode(`${name}MarkStart`)\n  const taggedNodeMarkEnd = buildMarkNode(`${name}MarkEnd`)\n\n  return defineInlineParser({\n    name: taggedNode.node.name,\n    parse: (inlineContext, nextCharCode, position) => {\n      // Match the first char code as efficiently as possible.\n      if (nextCharCode !== firstCharCode) return -1\n\n      // Check the remaining char codes.\n      for (let i = 0; i < prefixCharCodes.length; i++) {\n        const prefixCharCode = prefixCharCodes[i]\n        const nextCharPosition = position + i + 1\n\n        if (inlineContext.text.charCodeAt(nextCharPosition) !== prefixCharCode) return -1\n      }\n\n      // Get all the line text left after the current position.\n      const remainingLineText = inlineContext.slice(position, inlineContext.end)\n\n      if (!matcher.test(remainingLineText)) return -1\n\n      const match = remainingLineText.match(matcher)\n\n      // Todo: Add config to allow empty?\n      if (!match?.groups?.content) return -1\n\n      const prefixLength = prefix.length\n      const contentLength = match.groups.content.length\n      const suffixLength = suffix?.length || 0\n\n      return inlineContext.addElement(\n        inlineContext.elt(\n          taggedNode.node.name,\n          position,\n          position + prefixLength + contentLength + suffixLength,\n          [\n            inlineContext.elt(\n              taggedNodeMark.node.name,\n              position,\n              position + prefixLength,\n              [\n                inlineContext.elt(\n                  taggedNodeMarkStart.node.name,\n                  position,\n                  position + prefixLength,\n                ),\n              ],\n            ),\n            inlineContext.elt(\n              taggedNodeMark.node.name,\n              position + prefixLength + contentLength,\n              position + prefixLength + contentLength + suffixLength,\n              [\n                inlineContext.elt(\n                  taggedNodeMarkEnd.node.name,\n                  position + prefixLength + contentLength,\n                  position + prefixLength + contentLength + suffixLength,\n                ),\n              ],\n            ),\n          ],\n        ),\n      )\n    },\n  })\n}\n", "import { buildMarkNode, buildTaggedNode, defineBlockParser, defineInlineParser, defineMarkdown, getCharCode } from '/lib/codemirror-kit'\n\nexport const charCodes = {\n  dollarSign: getCharCode('$'),\n}\n\nexport const mathInlineTestRegex = /\\$.*?\\$/\nexport const mathInlineCaptureRegex = /\\$(?<math>.*?)\\$/\n\nexport const mathInline = buildTaggedNode('MathInline')\nexport const mathInlineMark = buildMarkNode('MathInlineMark')\nexport const mathInlineMarkOpen = buildMarkNode('MathInlineMarkOpen')\nexport const mathInlineMarkClose = buildMarkNode('MathInlineMarkClose')\nexport const mathInlineParser = defineInlineParser({\n  name: mathInline.node.name,\n  parse: (inlineContext, nextCharCode, position) => {\n    // Not a \"$\" char.\n    if (nextCharCode !== charCodes.dollarSign) return -1\n\n    const remainingLineText = inlineContext.slice(position, inlineContext.end)\n\n    // No ending \"$\" found.\n    if (!mathInlineTestRegex.test(remainingLineText)) return -1\n\n    const match = remainingLineText.match(mathInlineCaptureRegex)\n\n    // No match found.\n    if (!match?.groups?.math) return -1\n\n    const mathExpressionLength = match.groups.math.length\n\n    return inlineContext.addElement(\n      inlineContext.elt(\n        mathInline.node.name,\n        position,\n        position + mathExpressionLength + 2,\n        [\n          inlineContext.elt(\n            mathInlineMark.node.name,\n            position,\n            position + 1,\n            [\n              inlineContext.elt(\n                mathInlineMarkOpen.node.name,\n                position,\n                position + 1,\n              ),\n            ],\n          ),\n          inlineContext.elt(\n            mathInlineMark.node.name,\n            position + mathExpressionLength + 1,\n            position + mathExpressionLength + 2,\n            [\n              inlineContext.elt(\n                mathInlineMarkClose.node.name,\n                position + mathExpressionLength + 1,\n                position + mathExpressionLength + 2,\n              ),\n            ],\n          ),\n        ],\n      ),\n    )\n  },\n})\n\nexport const mathBlockTestRegex = /\\$.*?\\$/\nexport const mathBlockCaptureRegex = /\\$(?<math>.*?)\\$/\n\nexport const mathBlock = buildTaggedNode('MathBlock')\nexport const mathBlockMark = buildMarkNode('MathBlockMark')\nexport const mathBlockMarkOpen = buildMarkNode('MathBlockMarkOpen')\nexport const mathBlockMarkClose = buildMarkNode('MathBlockMarkClose')\nexport const mathBlockParser = defineBlockParser({\n  name: 'MathBlock',\n  parse: (blockContext, line) => {\n    // Not \"$\"\n    if (line.next !== charCodes.dollarSign) return false\n    // Not \"$$\"\n    if (line.text.charCodeAt(line.pos + 1) !== charCodes.dollarSign) return false\n\n    const openLineStart = blockContext.lineStart + line.pos\n    const openLineEnd = openLineStart + line.text.length\n\n    // Move past opening line.\n    while (blockContext.nextLine()) {\n      // Closing \"$$\"\n      if (line.next === charCodes.dollarSign && line.text.charCodeAt(line.pos + 1) === charCodes.dollarSign) {\n        const closeLineStart = blockContext.lineStart + line.pos\n        const closeLineEnd = closeLineStart + line.text.length\n\n        blockContext.addElement(\n          blockContext.elt(\n            mathBlock.node.name,\n            openLineStart,\n            closeLineEnd,\n            [\n              blockContext.elt(\n                mathBlockMark.node.name,\n                openLineStart,\n                openLineEnd,\n                [\n                  blockContext.elt(\n                    mathBlockMarkOpen.node.name,\n                    openLineStart,\n                    openLineEnd,\n                  ),\n                ],\n              ),\n              blockContext.elt(\n                mathBlockMark.node.name,\n                closeLineStart,\n                closeLineEnd,\n                [\n                  blockContext.elt(\n                    mathBlockMarkClose.node.name,\n                    closeLineStart,\n                    closeLineEnd,\n                  ),\n                ],\n              ),\n            ],\n          ),\n        )\n\n        blockContext.nextLine()\n\n        break\n      }\n    }\n\n    return true\n  },\n})\n\nexport const grammar = defineMarkdown({\n  defineNodes: [\n    mathInline.node,\n    mathInlineMark.node,\n    mathInlineMarkClose.node,\n    mathInlineMarkOpen.node,\n    mathBlock.node,\n    mathBlockMark.node,\n    mathBlockMarkOpen.node,\n    mathBlockMarkClose.node,\n  ],\n  parseBlock: [\n    mathBlockParser,\n  ],\n  parseInline: [\n    mathInlineParser,\n  ],\n})\n", "import { HighlightStyle, syntaxHighlighting } from '@codemirror/language'\nimport { EditorView } from '@codemirror/view'\nimport { plugin, pluginTypes } from 'ink-mde'\nimport { useModule } from '/src/modules'\nimport { buildBlockWidgetDecoration, buildLineDecoration, buildWidget, nodeDecorator } from '/lib/codemirror-kit'\nimport { grammar, mathInline, mathInlineMark, mathInlineMarkClose, mathInlineMarkOpen } from './grammar'\n\nconst render = (text: string, element: HTMLElement) => {\n  useModule('katex', (katex) => {\n    katex.render(text, element, { output: 'html', throwOnError: false })\n  })\n}\n\nexport const katex = () => {\n  return [\n    plugin({\n      key: 'katex',\n      type: pluginTypes.grammar,\n      value: async () => grammar,\n    }),\n    plugin({\n      key: 'katex',\n      value: async () => {\n        return nodeDecorator({\n          nodes: ['MathBlock', 'MathBlockMarkClose', 'MathBlockMarkOpen'],\n          onMatch: (_state, node) => {\n            const classes = ['ink-mde-line-math-block']\n\n            if (node.name === 'MathBlockMarkOpen') classes.push('ink-mde-line-math-block-open')\n            if (node.name === 'MathBlockMarkClose') classes.push('ink-mde-line-math-block-close')\n\n            return buildLineDecoration({\n              attributes: {\n                class: classes.join(' '),\n              },\n            })\n          },\n          optimize: false,\n        })\n      },\n    }),\n    plugin({\n      key: 'katex',\n      value: async () => {\n        return nodeDecorator({\n          nodes: ['MathBlock'],\n          onMatch: (state, node) => {\n            const text = state.sliceDoc(node.from, node.to).split('\\n').slice(1, -1).join('\\n')\n\n            if (text) {\n              return buildBlockWidgetDecoration({\n                widget: buildWidget({\n                  id: text,\n                  toDOM: () => {\n                    const container = document.createElement('div')\n                    const block = document.createElement('div')\n\n                    container.className = 'ink-mde-block-widget-container'\n                    block.className = 'ink-mde-block-widget ink-mde-katex-target'\n                    container.appendChild(block)\n\n                    render(text, block)\n\n                    return container\n                  },\n                  updateDOM: (dom) => {\n                    const katexTarget = dom.querySelector<HTMLElement>('.ink-mde-katex-target')\n\n                    if (katexTarget) {\n                      render(text, katexTarget)\n\n                      return true\n                    }\n\n                    return false\n                  },\n                }),\n              })\n            }\n          },\n          optimize: false,\n        })\n      },\n    }),\n    plugin({\n      key: 'katex',\n      value: async () => {\n        return syntaxHighlighting(\n          HighlightStyle.define([\n            {\n              tag: [mathInline.tag, mathInlineMark.tag],\n              backgroundColor: 'var(--ink-internal-block-background-color)',\n            },\n            {\n              tag: [mathInlineMarkClose.tag],\n              backgroundColor: 'var(--ink-internal-block-background-color)',\n              borderRadius: '0 var(--ink-internal-border-radius) var(--ink-internal-border-radius) 0',\n              paddingRight: 'var(--ink-internal-inline-padding)',\n            },\n            {\n              tag: [mathInlineMarkOpen.tag],\n              backgroundColor: 'var(--ink-internal-block-background-color)',\n              borderRadius: 'var(--ink-internal-border-radius) 0 0 var(--ink-internal-border-radius)',\n              paddingLeft: 'var(--ink-internal-inline-padding)',\n            },\n          ]),\n        )\n      },\n    }),\n    plugin({\n      key: 'katex',\n      value: async () => {\n        return EditorView.theme({\n          '.ink-mde-line-math-block': {\n            backgroundColor: 'var(--ink-internal-block-background-color)',\n            padding: '0 var(--ink-internal-block-padding) !important',\n          },\n          '.ink-mde-line-math-block-open': {\n            borderRadius: 'var(--ink-internal-border-radius) var(--ink-internal-border-radius) 0 0',\n          },\n          '.ink-mde-line-math-block-close': {\n            borderRadius: '0 0 var(--ink-internal-border-radius) var(--ink-internal-border-radius)',\n          },\n        })\n      },\n    }),\n  ]\n}\n", "export type Queue = ReturnType<typeof makeQueue>\n\nexport const makeQueue = () => {\n  const state = {\n    queue: <(() => Promise<void>)[]>[],\n    workload: 0,\n  }\n\n  const process = async () => {\n    const task = state.queue.pop()\n\n    if (!task) return\n\n    await task()\n\n    state.workload--\n\n    await process()\n  }\n\n  return {\n    enqueue: (callback: () => void | Promise<void>): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const task = async () => {\n          try {\n            await callback()\n\n            resolve()\n          } catch (error) {\n            reject(error)\n          }\n        }\n\n        state.queue.push(task)\n        state.workload++\n\n        // If the queue has other items in it, then it will drain itself.\n        if (state.workload > 1) return\n\n        process()\n      })\n    },\n  }\n}\n", "import { createSignal } from 'solid-js'\nimport { katex } from '/plugins/katex'\nimport { override } from '/src/utils/merge'\nimport { createExtensions } from '/src/extensions'\nimport { createElement } from './ui/utils'\nimport { makeQueue } from '/src/utils/queue'\nimport * as InkValues from '/types/values'\nimport type { Options } from '/types/ink'\nimport type InkInternal from '/types/internal'\n\nexport const blankState = (): InkInternal.StateResolved => {\n  const options = {\n    doc: '',\n    files: {\n      clipboard: false,\n      dragAndDrop: false,\n      handler: () => {},\n      injectMarkup: true,\n      types: ['image/*'],\n    },\n    hooks: {\n      afterUpdate: () => {},\n      beforeUpdate: () => {},\n    },\n    interface: {\n      appearance: InkValues.Appearance.Auto,\n      attribution: true,\n      autocomplete: false,\n      images: false,\n      lists: false,\n      readonly: false,\n      spellcheck: true,\n      toolbar: false,\n    },\n    katex: false,\n    placeholder: '',\n    plugins: [\n      katex(),\n    ],\n    readability: false,\n    search: true,\n    selections: [],\n    toolbar: {\n      bold: true,\n      code: true,\n      codeBlock: true,\n      heading: true,\n      image: true,\n      italic: true,\n      link: true,\n      list: true,\n      orderedList: true,\n      quote: true,\n      taskList: true,\n      upload: false,\n    },\n    vim: false,\n  }\n\n  return {\n    doc: '',\n    editor: {} as InkInternal.Editor,\n    extensions: createExtensions(),\n    options,\n    root: createElement(),\n    target: createElement(),\n    workQueue: makeQueue(),\n  }\n}\n\nexport const makeState = (partialState: InkInternal.State): InkInternal.StateResolved => {\n  return override(blankState(), partialState)\n}\n\nexport const makeStore = (options: Options, overrides: InkInternal.State = {}): InkInternal.Store => {\n  const [state, setState] = createSignal(makeState({ ...overrides, doc: options.doc || '', options }))\n\n  return [state, setState]\n}\n", "import type { Component } from 'solid-js'\nimport { For, Show, createSignal, onCleanup, onMount } from 'solid-js'\nimport { useStore } from '../../app'\nimport { insert } from '/src/api'\nimport styles from './styles.css?inline'\n\nexport const DropZone: Component = () => {\n  const [depth, setDepth] = createSignal(0)\n  const [files, setFiles] = createSignal<File[]>([])\n  const [isLoading, setIsLoading] = createSignal(false)\n  const [isVisible, setIsVisible] = createSignal(false)\n  const [state, setState] = useStore()\n\n  const closeModal = () => {\n    setIsVisible(false)\n  }\n\n  const dropOnZone = (event: DragEvent) => {\n    if (state().options.files.dragAndDrop) {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const transfer = event.dataTransfer\n\n      if (transfer?.files) {\n        uploadFiles(transfer.files)\n      } else {\n        setDepth(0)\n        setIsVisible(false)\n        setFiles([])\n      }\n    }\n  }\n\n  const onDragEnter = (event: DragEvent) => {\n    if (state().options.files.dragAndDrop) {\n      event.preventDefault()\n\n      setDepth(depth() + 1)\n      setIsVisible(true)\n    }\n  }\n\n  const onDragLeave = (event: DragEvent) => {\n    if (state().options.files.dragAndDrop) {\n      event.preventDefault()\n\n      setDepth(depth() - 1)\n\n      if (depth() === 0)\n        setIsVisible(false)\n    }\n  }\n\n  const onDragOver = (event: DragEvent) => {\n    if (state().options.files.dragAndDrop) {\n      event.preventDefault()\n\n      setIsVisible(true)\n    }\n  }\n\n  const onDrop = (event: DragEvent) => {\n    if (state().options.files.dragAndDrop) {\n      event.preventDefault()\n\n      setDepth(0)\n      setIsVisible(false)\n    }\n  }\n\n  const onPaste = (event: ClipboardEvent) => {\n    if (state().options.files.clipboard) {\n      event.preventDefault()\n\n      const transfer = event.clipboardData\n\n      if (transfer?.files && transfer.files.length > 0)\n        uploadFiles(transfer.files)\n    }\n  }\n\n  const uploadFiles = (userFiles: FileList) => {\n    Array.from(userFiles).forEach((file) => {\n      setFiles([...files(), file])\n    })\n\n    setIsLoading(true)\n    setIsVisible(true)\n\n    Promise.resolve(state().options.files.handler(userFiles)).then((url) => {\n      if (state().options.files.injectMarkup && url) {\n        const markup = `![](${url})`\n\n        insert([state, setState], markup)\n      }\n    }).finally(() => {\n      setDepth(0)\n      setIsLoading(false)\n      setIsVisible(false)\n      setFiles([])\n    })\n  }\n\n  onMount(() => {\n    document.addEventListener('dragenter', onDragEnter)\n    document.addEventListener('dragleave', onDragLeave)\n    document.addEventListener('dragover', onDragOver)\n    document.addEventListener('drop', onDrop)\n    state().root.addEventListener('paste', onPaste)\n  })\n\n  onCleanup(() => {\n    document.removeEventListener('dragenter', onDragEnter)\n    document.removeEventListener('dragleave', onDragLeave)\n    document.removeEventListener('dragover', onDragOver)\n    document.removeEventListener('drop', onDrop)\n    state().root.removeEventListener('paste', onPaste)\n  })\n\n  return (\n    <div class=\"ink-drop-zone\" classList={{ visible: isVisible() }}>\n      <style textContent={styles} />\n      <div class=\"ink-drop-zone-modal\">\n        <div class=\"ink-drop-zone-droppable-area\" onDrop={dropOnZone}>\n          <div class=\"ink-drop-zone-file-preview\">\n            <For each={files().slice(0, 8)}>{file => (\n              <img class=\"ink-drop-zone-file-preview-image\" alt={file.name} src={URL.createObjectURL(file)} />\n            )}</For>\n          </div>\n          <Show when={isLoading()} fallback={<span>drop files here</span>}>\n            <span>uploading files...</span>\n          </Show>\n        </div>\n        <div class=\"ink-drop-zone-hide\" onClick={closeModal}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import { EditorView } from '@codemirror/view'\nimport { makeState } from '/src/vendor/state'\nimport type InkInternal from '/types/internal'\n\nexport const makeEditor = ([state, setState]: InkInternal.Store): InkInternal.Editor => {\n  const editor = new EditorView({\n    dispatch: (transaction: InkInternal.Vendor.Transaction) => {\n      const { options } = state()\n      const newDoc = transaction.newDoc.toString()\n\n      options.hooks.beforeUpdate(newDoc)\n      editor.update([transaction])\n\n      if (transaction.docChanged) {\n        setState({ ...state(), doc: newDoc })\n\n        options.hooks.afterUpdate(newDoc)\n      }\n    },\n    state: makeState([state, setState]),\n  })\n\n  return editor\n}\n", "import { buildVendorUpdates } from '/src/extensions'\nimport { useStore } from '/src/ui/app'\nimport { override } from '/src/utils/merge'\nimport { makeEditor } from '/src/vendor/editor'\nimport type { Component } from 'solid-js'\n\nexport const Editor: Component = () => {\n  // Needed for tree-shaking purposes.\n  if (import.meta.env.VITE_SSR) {\n    return (\n      <div class='cm-editor'>\n        <div class='cm-scroller'>\n          <div class='cm-content' contenteditable={true}>\n            <div class='cm-line'>\n              <br />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const [state, setState] = useStore()\n  const editor = makeEditor([state, setState])\n\n  const { workQueue } = state()\n  setState(override(state(), { editor }))\n\n  workQueue.enqueue(async () => {\n    const effects = await buildVendorUpdates([state, setState])\n\n    editor.dispatch({ effects })\n  })\n\n  return editor.dom\n}\n", "import type { Component, JSX } from 'solid-js'\n\nexport const Button: Component<{ children: JSX.Element, onclick: JSX.EventHandler<HTMLButtonElement, MouseEvent> }> = (props) => {\n  return (\n    <button class='ink-button' onClick={e => props.onclick(e)} type='button'>\n      {props.children}\n    </button>\n  )\n}\n", "import { Show, createSignal } from 'solid-js'\nimport type { Component } from 'solid-js'\nimport { Button } from '../button'\nimport styles from './styles.css?inline'\nimport { focus, format, insert } from '/src/api'\nimport { useStore } from '/src/ui/app'\nimport * as InkValues from '/types/values'\n\nexport const Toolbar: Component = () => {\n  const [state, setState] = useStore()\n  const [uploader, setUploader] = createSignal<HTMLInputElement>()\n\n  const formatAs = (type: InkValues.Markup) => {\n    format([state, setState], type)\n    focus([state, setState])\n  }\n\n  const uploadChangeHandler = (event: Event) => {\n    const target = event.target as HTMLInputElement\n\n    if (target?.files) {\n      Promise.resolve(state().options.files.handler(target.files)).then((url) => {\n        if (url) {\n          const markup = `![](${url})`\n\n          insert([state, setState], markup)\n          focus([state, setState])\n        }\n      })\n    }\n  }\n\n  const uploadClickHandler = () => {\n    uploader()?.click()\n  }\n\n  return (\n    <div class='ink-mde-toolbar'>\n      <style textContent={styles} />\n      <div class='ink-mde-container'>\n        <Show when={state().options.toolbar.heading || state().options.toolbar.bold || state().options.toolbar.italic}>\n          <div class='ink-mde-toolbar-group'>\n            <Show when={state().options.toolbar.heading}>\n              <Button onclick={() => formatAs(InkValues.Markup.Heading)}>\n                <svg viewBox='0 0 20 20' fill='none' stroke='currentColor' stroke-miterlimit='5' stroke-linecap='round' stroke-linejoin='round'>\n                  <path d='M6 4V10M6 16V10M6 10H14M14 10V4M14 10V16'/>\n                </svg>\n              </Button>\n            </Show>\n            <Show when={state().options.toolbar.bold}>\n              <Button onclick={() => formatAs(InkValues.Markup.Bold)}>\n                <svg viewBox='0 0 20 20' fill='none' stroke='currentColor' stroke-width='1.5' stroke-miterlimit='5' stroke-linecap='round' stroke-linejoin='round'>\n                  <path d='M6.5 10H10.5C12.1569 10 13.5 11.3431 13.5 13C13.5 14.6569 12.1569 16 10.5 16H6.5V4H9.5C11.1569 4 12.5 5.34315 12.5 7C12.5 8.65686 11.1569 10 9.5 10'/>\n                </svg>\n              </Button>\n            </Show>\n            <Show when={state().options.toolbar.italic}>\n              <Button onclick={() => formatAs(InkValues.Markup.Italic)}>\n                <svg viewBox='0 0 20 20' fill='none' stroke='currentColor' stroke-miterlimit='5' stroke-linecap='round' stroke-linejoin='round'>\n                  <path d='M11 4L9 16M13 4H9M7 16H11'/>\n                </svg>\n              </Button>\n            </Show>\n          </div>\n        </Show>\n        <Show when={state().options.toolbar.quote || state().options.toolbar.codeBlock || state().options.toolbar.code}>\n          <div class='ink-mde-toolbar-group'>\n            <Show when={state().options.toolbar.quote}>\n              <Button onclick={() => formatAs(InkValues.Markup.Quote)}>\n                <svg viewBox='0 0 20 20' fill='none' stroke='currentColor' stroke-miterlimit='5' stroke-linecap='round' stroke-linejoin='round'>\n                  <path d='M2.00257 16H17.9955M2.00055 4H18M7 10H18.0659M2 8.5V11.4999C2.4 11.5 2.5 11.5 2.5 11.5V11V10.5M4 8.5V11.4999H4.5V11V10.5'/>\n                </svg>\n              </Button>\n            </Show>\n            <Show when={state().options.toolbar.codeBlock}>\n              <Button onclick={() => formatAs(InkValues.Markup.CodeBlock)}>\n                <svg viewBox='0 0 20 20' fill='none' stroke='currentColor' stroke-miterlimit='5' stroke-linecap='round' stroke-linejoin='round'>\n                  <path d='M13 4L7 16'/>\n                  <path d='M5 7L2 10L5 13'/>\n                  <path d='M15 7L18 10L15 13'/>\n                </svg>\n              </Button>\n            </Show>\n            <Show when={state().options.toolbar.code}>\n              <Button onclick={() => formatAs(InkValues.Markup.Code)}>\n                <svg viewBox='0 0 20 20' fill='none' stroke='currentColor' stroke-miterlimit='5' stroke-linecap='round' stroke-linejoin='round'>\n                  <path d='M7 4L8 6'/>\n                </svg>\n              </Button>\n            </Show>\n          </div>\n        </Show>\n        <Show when={state().options.toolbar.list || state().options.toolbar.orderedList || state().options.toolbar.taskList}>\n          <div class='ink-mde-toolbar-group'>\n            <Show when={state().options.toolbar.list}>\n              <Button onclick={() => formatAs(InkValues.Markup.List)}>\n                <svg viewBox='0 0 20 20' fill='none' stroke='currentColor' stroke-miterlimit='5' stroke-linecap='round' stroke-linejoin='round'>\n                  <path d='M7 16H17.8294'/>\n                  <path d='M2 16H4'/>\n                  <path d='M7 10H17.8294'/>\n                  <path d='M2 10H4'/>\n                  <path d='M7 4H17.8294'/>\n                  <path d='M2 4H4'/>\n                </svg>\n              </Button>\n            </Show>\n            <Show when={state().options.toolbar.orderedList}>\n              <Button onclick={() => formatAs(InkValues.Markup.OrderedList)}>\n                <svg viewBox='0 0 20 20' fill='none' stroke='currentColor' stroke-miterlimit='5' stroke-linecap='round' stroke-linejoin='round'>\n                  <path d='M7 16H18'/>\n                  <path d='M2 17.0242C2.48314 17.7569 3.94052 17.6154 3.99486 16.7919C4.05315 15.9169 3.1975 16.0044 2.99496 16.0044M2.0023 14.9758C2.48544 14.2431 3.94282 14.3846 3.99716 15.2081C4.05545 16.0831 3.1998 16.0002 2.99726 16.0002'/>\n                  <path d='M7 10H18'/>\n                  <path d='M2.00501 11.5H4M2.00193 8.97562C2.48449 8.24319 3.9401 8.38467 3.99437 9.20777C4.05259 10.0825 2.04342 10.5788 2 11.4996'/>\n                  <path d='M7 4H18'/>\n                  <path d='M2 5.5H4M2.99713 5.49952V2.5L2.215 2.93501'/>\n                </svg>\n              </Button>\n            </Show>\n            <Show when={state().options.toolbar.taskList}>\n              <Button onclick={() => formatAs(InkValues.Markup.TaskList)}>\n                <svg viewBox='0 0 20 20' fill='none' stroke='currentColor' stroke-miterlimit='5' stroke-linecap='round' stroke-linejoin='round'>\n                  <path d='M7 16H17.8294'/>\n                  <path d='M5 15L3 17L2 16'/>\n                  <path d='M7 10H17.8294'/>\n                  <path d='M5 9L3 11L2 10'/>\n                  <path d='M7 4H17.8294'/>\n                  <path d='M5 3L3 5L2 4'/>\n                </svg>\n              </Button>\n            </Show>\n          </div>\n        </Show>\n        <Show when={state().options.toolbar.link || state().options.toolbar.image || state().options.toolbar.upload}>\n          <div class='ink-mde-toolbar-group'>\n            <Show when={state().options.toolbar.link}>\n              <Button onclick={() => formatAs(InkValues.Markup.Link)}>\n                <svg viewBox='0 0 20 20' fill='none' stroke='currentColor' stroke-miterlimit='5' stroke-linecap='round' stroke-linejoin='round'>\n                  <path d='M9.12127 10.881C10.02 11.78 11.5237 11.7349 12.4771 10.7813L15.2546 8.00302C16.2079 7.04937 16.253 5.54521 15.3542 4.6462C14.4555 3.74719 12.9512 3.79174 11.9979 4.74539L10.3437 6.40007M10.8787 9.11903C9.97997 8.22002 8.47626 8.26509 7.52288 9.21874L4.74545 11.997C3.79208 12.9506 3.74701 14.4548 4.64577 15.3538C5.54452 16.2528 7.04876 16.2083 8.00213 15.2546L9.65633 13.5999'/>\n                </svg>\n              </Button>\n            </Show>\n            <Show when={state().options.toolbar.image}>\n              <Button onclick={() => formatAs(InkValues.Markup.Image)}>\n                <svg viewBox='0 0 20 20' fill='none' stroke='currentColor' stroke-miterlimit='5' stroke-linecap='round' stroke-linejoin='round'>\n                  <rect x='2' y='4' width='16' height='12' rx='1'/>\n                  <path d='M7.42659 7.67597L13.7751 13.8831M2.00208 12.9778L7.42844 7.67175'/>\n                  <path d='M11.9119 12.0599L14.484 9.54443L17.9973 12.9785'/>\n                  <path d='M10.9989 7.95832C11.551 7.95832 11.9986 7.52072 11.9986 6.98092C11.9986 6.44113 11.551 6.00354 10.9989 6.00354C10.4468 6.00354 9.99921 6.44113 9.99921 6.98092C9.99921 7.52072 10.4468 7.95832 10.9989 7.95832Z'/>\n                </svg>\n              </Button>\n            </Show>\n            <Show when={state().options.toolbar.upload}>\n              <Button onclick={uploadClickHandler}>\n                <svg viewBox='0 0 20 20' fill='none' stroke='currentColor' stroke-miterlimit='5' stroke-linecap='round' stroke-linejoin='round'>\n                  <path d='M10 13V4M10 4L13 7M10 4L7 7'/>\n                  <path d='M2 13V15C2 15.5523 2.44772 16 3 16H17C17.5523 16 18 15.5523 18 15V13'/>\n                </svg>\n                <input style={{ display: 'none' }} type='file' onChange={uploadChangeHandler} ref={setUploader} />\n              </Button>\n            </Show>\n          </div>\n        </Show>\n      </div>\n    </div>\n  )\n}\n", "export const DEFAULT_WORDS_PER_MINUTE = 225\n\nexport const toHuman = (text: string, wordsPerMinute: number = DEFAULT_WORDS_PER_MINUTE): string => {\n  const readTime = toHumanReadTime(text, wordsPerMinute)\n  const wordCount = toHumanWordCount(text)\n  const lineCount = toHumanLineCount(text)\n  const charCount = toHumanCharCount(text)\n\n  return [readTime, wordCount, lineCount, charCount].join(' | ')\n}\n\nexport const toHumanCharCount = (text: string): string => {\n  const charCount = toCharCount(text)\n\n  return `${charCount} chars`\n}\n\nexport const toHumanLineCount = (text: string): string => {\n  const lineCount = toLineCount(text)\n\n  return `${lineCount} lines`\n}\n\nexport const toHumanReadTime = (text: string, wordsPerMinute: number = DEFAULT_WORDS_PER_MINUTE): string => {\n  const readTime = toReadTime(text, wordsPerMinute)\n  const readTimeMinutes = Math.floor(readTime)\n  const readTimeSeconds = Math.floor((readTime % 1) * 60)\n\n  if (readTimeMinutes === 0) {\n    return `${readTimeSeconds}s read`\n  }\n\n  return `${readTimeMinutes}m ${readTimeSeconds}s to read`\n}\n\nexport const toHumanWordCount = (text: string): string => {\n  const wordCount = toWordCount(text)\n\n  return `${wordCount} words`\n}\n\nexport const toCharCount = (text: string): number => {\n  return text.length\n}\n\nexport const toLineCount = (text: string): number => {\n  return text.split(/\\n/).length\n}\n\nexport const toReadTime = (text: string, wordsPerMinute: number = DEFAULT_WORDS_PER_MINUTE): number => {\n  return toWordCount(text) / wordsPerMinute\n}\n\nexport const toWordCount = (text: string): number => {\n  const scrubbed = text.replace(/[']/g, '').replace(/[^\\w\\d]+/g, ' ').trim()\n\n  if (!scrubbed) {\n    return 0\n  }\n\n  return scrubbed.split(/\\s+/).length\n}\n", "import { type Component, Show } from 'solid-js'\nimport type InkInternal from '/types/internal'\nimport { toHuman } from '/src/utils/readability'\nimport { useStore } from '../../app'\n\nexport const Details: Component<{ store: InkInternal.Store }> = () => {\n  const [state] = useStore()\n\n  return (\n    <div class='ink-mde-details'>\n      <div class='ink-mde-container'>\n        <div class='ink-mde-details-content'>\n          <Show when={ state().options.readability }>\n            <div class='ink-mde-readability'>\n              <span>{ toHuman(state().doc) }</span>\n            </div>\n          </Show>\n          <Show when={ state().options.readability && state().options.interface.attribution }>\n            <span>&nbsp;|</span>\n          </Show>\n          <Show when={state().options.interface.attribution}>\n            <div class='ink-mde-attribution'>\n              <span>&nbsp;powered by <a class='ink-mde-attribution-link' href='https://github.com/davidmyersdev/ink-mde' rel='noopener noreferrer' target='_blank'>ink-mde</a></span>\n            </div>\n          </Show>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import { type Component, createEffect, createSignal, onMount } from 'solid-js'\nimport { buildVendorUpdates } from '/src/extensions'\nimport { makeVars } from '../../utils'\nimport { useStore } from '../../app'\nimport styles from './styles.css?inline'\n\nexport const Styles: Component = () => {\n  const [state, setState] = useStore()\n  const [vars, setVars] = createSignal(makeVars(state()))\n\n  createEffect(() => {\n    setVars(makeVars(state()))\n  })\n\n  onMount(() => {\n    const mediaQueryList = window.matchMedia('(prefers-color-scheme: dark)')\n    const listener = (_event: MediaQueryListEvent) => {\n      const { editor, root, workQueue } = state()\n\n      if (root.isConnected) {\n        workQueue.enqueue(async () => {\n          const effects = await buildVendorUpdates([state, setState])\n\n          editor.dispatch({ effects })\n          setVars(makeVars(state()))\n        })\n      } else {\n        mediaQueryList.removeEventListener('change', listener)\n      }\n    }\n\n    mediaQueryList.addEventListener('change', listener)\n  })\n\n  return (\n    <style textContent={`.ink {\\n  ${vars().join('\\n  ')}\\n}\\n${styles}`} />\n  )\n}\n", "import { Show } from 'solid-js'\nimport type { Component } from 'solid-js'\nimport { useStore } from '../../app'\nimport { DropZone } from '../drop_zone'\nimport { Editor } from '../editor'\nimport { Toolbar } from '../toolbar'\nimport { Details } from '../details'\nimport { Styles } from './styles'\nimport { getHydrationMarkerProps } from '/src/constants'\nimport { override } from '/src/utils/merge'\nimport type InkInternal from '/types/internal'\n\nexport const Root: Component<{ store: InkInternal.Store }> = () => {\n  const [state, setState] = useStore()\n  const setRoot = (root: HTMLElement) => {\n    setState(override(state(), { root }))\n  }\n\n  return (\n    <div class='ink ink-mde' ref={setRoot} {...getHydrationMarkerProps()}>\n      <Styles />\n      <Show when={state().options.files.clipboard || state().options.files.dragAndDrop}>\n        <DropZone />\n      </Show>\n      <Show when={state().options.interface.toolbar}>\n        <Toolbar />\n      </Show>\n      <div class='ink-mde-editor'>\n        <Editor />\n      </div>\n      <Show when={state().options.readability || state().options.interface.attribution}>\n        <Details store={[state, setState]} />\n      </Show>\n    </div>\n  )\n}\n", "import { createContext, useContext } from 'solid-js'\nimport type { Component, JSX } from 'solid-js'\nimport type InkInternal from '/types/internal'\nimport { blankState } from '../store'\nimport { Root } from './components/root'\n\nconst AppContext = createContext<InkInternal.Store>([() => blankState(), value => (typeof value === 'function' ? value(blankState()) : value)])\nconst AppProvider: Component<{ children: JSX.Element, store: InkInternal.Store }> = (props) => {\n  return (\n    <AppContext.Provider value={props.store}>\n      {props.children}\n    </AppContext.Provider>\n  )\n}\n\nexport const useStore = () => {\n  return useContext(AppContext)\n}\n\nexport const App: Component<{ store: InkInternal.Store }> = (props) => {\n  return (\n    <AppProvider store={props.store}>\n      <Root store={props.store} />\n    </AppProvider>\n  )\n}\n", "import { hydrate as solidHydrate, render as solidRender, renderToString as solidRenderToString } from 'solid-js/web'\nimport { HYDRATION_MARKER_SELECTOR } from '/src/constants'\nimport { makeInstance } from '/src/instance'\nimport { makeStore } from '/src/store'\nimport { App } from '/src/ui/app'\nimport { isPromise } from '/src/utils/inspect'\nimport { type PluginValueForType } from '/src/utils/options'\nimport type * as Ink from '/types/ink'\n\nexport * from '/types/values'\n\nexport const defineConfig = <T extends Ink.Options>(config: T) => config\nexport const defineOptions = <T extends Ink.Options>(options: T) => options\nexport const definePlugin = <T extends Ink.Options.RecursivePlugin>(plugin: T) => plugin\n\nexport const hydrate = (target: HTMLElement, options: Ink.Options = {}): Ink.AwaitableInstance => {\n  const store = makeStore(options)\n\n  if (!import.meta.env.VITE_SSR) {\n    solidPrepareForHydration()\n    solidHydrate(() => <App store={store} />, target)\n  }\n\n  return makeInstance(store)\n}\n\nexport const ink = (target: HTMLElement, options: Ink.Options = {}): Ink.AwaitableInstance => {\n  const hasHydrationMarker = !!target.querySelector(HYDRATION_MARKER_SELECTOR)\n\n  if (hasHydrationMarker) {\n    return hydrate(target, options)\n  }\n\n  return render(target, options)\n}\n\nexport const inkPlugin = <T extends Ink.Values.PluginType>({ key = '', type, value }: { key?: string, type?: T, value: () => PluginValueForType<T> }) => {\n  return new Proxy({ key, type: type || 'default' } as Ink.Options.Plugin, {\n    get: (target, prop: keyof Ink.Options.Plugin, _receiver) => {\n      if (prop === 'value' && !target[prop]) {\n        target.value = value()\n\n        if (isPromise(target.value)) {\n          return target.value.then(val => target.value = val)\n        }\n\n        return target.value\n      }\n\n      return target[prop]\n    },\n  })\n}\n\nexport const plugin = inkPlugin\n\nexport const render = (target: HTMLElement, options: Ink.Options = {}): Ink.AwaitableInstance => {\n  const store = makeStore(options)\n\n  if (!import.meta.env.VITE_SSR) {\n    solidRender(() => <App store={store} />, target)\n  }\n\n  return makeInstance(store)\n}\n\nexport const renderToString = (options: Ink.Options = {}): string => {\n  const store = makeStore(options)\n\n  // Needed for tree-shaking purposes.\n  if (!import.meta.env.VITE_SSR) {\n    return ''\n  }\n\n  return solidRenderToString(() => <App store={store} />)\n}\n\nexport const solidPrepareForHydration = () => {\n  // @ts-expect-error Todo: This is a third-party vendor script.\n  // eslint-disable-next-line\n  let e,t;e=window._$HY||(window._$HY={events:[],completed:new WeakSet,r:{}}),t=e=>e&&e.hasAttribute&&(e.hasAttribute(\"data-hk\")?e:t(e.host&&e.host instanceof Node?e.host:e.parentNode)),['click', 'input'].forEach((o=>document.addEventListener(o,(o=>{let s=o.composedPath&&o.composedPath()[0]||o.target,a=t(s);a&&!e.completed.has(a)&&e.events.push([a,o])})))),e.init=(t,o)=>{e.r[t]=[new Promise(((e,t)=>o=e)),o]},e.set=(t,o,s)=>{(s=e.r[t])&&s[1](o),e.r[t]=[o]},e.unset=t=>{delete e.r[t]},e.load=(t,o)=>{if(o=e.r[t])return o[0]}\n}\n\nexport const wrap = (textarea: HTMLTextAreaElement, options: Ink.Options = {}) => {\n  const replacement = <div class='ink-mde-textarea' /> as HTMLDivElement\n  const doc = textarea.value\n\n  textarea.after(replacement)\n  textarea.style.display = 'none'\n\n  const instance = render(replacement, { doc, ...options })\n\n  if (textarea.form) {\n    textarea.form.addEventListener('submit', () => {\n      textarea.value = instance.getDoc()\n    })\n  }\n\n  return instance\n}\n\nexport default ink\n"],
  "mappings": "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",
  "names": ["HYDRATION_MARKER", "HYDRATION_MARKER_SELECTOR", "getHydrationMarkerProps", "destroy", "state", "editor", "focus", "toCodeMirror", "selections", "ranges", "selection", "SelectionRange", "EditorSelection", "toInk", "range", "Appearance", "Extensions", "Markup", "PluginType", "Selection", "appearanceTypes", "pluginTypes", "defineConfig", "overrides", "formatting", "InkValues.Markup", "splitSelectionByLines", "position", "line", "start", "end", "getSelection", "formatDefinition", "initialSelection", "getText", "changeDetails", "getNode", "definition", "getNodes", "type", "nodeDefinitions", "syntaxTree", "from", "to", "unformat", "text", "sliceStart", "sliceEnd", "unformatted", "formatBlock", "before", "after", "formatMultiline", "changes", "lineChanges", "formatLine", "hasPrefixStates", "prefixState", "prefix", "prefixStateIndex", "nextPrefixState", "updatedText", "formatInline", "getChanges", "format", "formatType", "maybeSelection", "node", "offset", "total", "change", "updates", "getDoc", "insert", "setState", "updateSelection", "current", "anchor", "head", "types", "getType", "object", "is", "deepAssign", "target", "source", "seen", "assign", "replacement", "key", "override", "a", "b", "createElement", "isAutoDark", "isDark", "appearance", "InkValues.Appearance", "makeVars", "styles", "isLight", "style", "value", "objectTypes", "isPromise", "partitionPlugins", "plugins", "partition", "isPlugin", "pluginType", "plugin", "isOptionsKey", "options", "filterPlugins", "flatten", "matches", "array", "flatArray", "item", "isValid", "partitions", "entry", "EditorView", "makeExtension", "baseExtensions", "lazyExtensions", "extensions", "filterExtensions", "lazyLanguages", "languages", "filterLanguages", "effects", "buildVendorUpdates", "markdownExtension", "markdownLanguage", "baseLanguages", "updateExtension", "markdown", "compartment", "Compartment", "store", "buildVendors", "e", "extension", "resolver", "lazyExtension", "reconfigure", "createExtensions", "resolvers", "r", "lazyResolvers", "_lazyExtensions", "isAuto", "autocomplete", "images", "lists", "placeholder", "readonly", "search", "spellcheck", "vim", "blockquoteSyntaxNodes", "blockquoteDecoration", "Decoration", "blockquoteOpenDecoration", "blockquoteCloseDecoration", "blockquotePlugin", "ViewPlugin", "view", "decorate", "builder", "RangeSetBuilder", "tree", "visibleRange", "openLine", "closeLine", "blockquote", "codeBlockSyntaxNodes", "sharedAttributes", "codeBlockDecoration", "codeBlockOpenDecoration", "codeBlockCloseDecoration", "codeDecoration", "codeOpenDecoration", "codeCloseDecoration", "codeBlockPlugin", "inlineCode", "code", "inkClassExtensions", "ink", "keyMaps", "dispatch", "indentMore", "Transaction", "indentLess", "keymaps", "keymap", "defaultKeymap", "historyKeymap", "lineWrapping", "theme", "syntaxHighlighting", "HighlightStyle", "tags", "toVendorSelection", "makeState", "EditorState", "history", "load", "doc", "workQueue", "select", "selectMultiple", "selectOne", "selectAt", "at", "InkValues.Selection", "update", "wrap", "userSelection", "awaitable", "initialValue", "handler", "callback", "settler", "resolve", "reject", "settledValue", "error", "then", "onFulfilled", "onRejected", "onSettled", "makeInstance", "instance", "modules", "prop", "_receiver", "importer", "__variableDynamicImportRuntimeHelper", "imported", "useModule", "name", "buildBlockWidgetDecoration", "buildWidgetDecoration", "buildLineDecoration", "buildMarkDecoration", "buildWidget", "eq", "other", "buildNodeDecorations", "decorationRanges", "maybeDecorations", "decoration", "wrapped", "left", "right", "buildOptimizedNodeDecorations", "rangeSet", "transaction", "decorations", "cursor", "cursors", "cursorsToSkip", "_beforeFrom", "_beforeTo", "changeFrom", "changeTo", "nodeLength", "cursorFrom", "cursorTo", "isOverlapping", "cursorDecos", "x1", "x2", "y1", "y2", "nodeDecorator", "StateField", "RangeSet", "updatedRangeSet", "field", "buildTag", "parent", "Tag", "getCharCode", "char", "buildMarkNode", "markName", "buildTaggedNode", "nodeName", "styleTags", "tag", "defineNode", "defineBlockParser", "defineInlineParser", "defineMarkdown", "charCodes", "mathInlineTestRegex", "mathInlineCaptureRegex", "mathInline", "mathInlineMark", "mathInlineMarkOpen", "mathInlineMarkClose", "mathInlineParser", "inlineContext", "nextCharCode", "remainingLineText", "match", "mathExpressionLength", "mathBlock", "mathBlockMark", "mathBlockMarkOpen", "mathBlockMarkClose", "mathBlockParser", "blockContext", "openLineStart", "openLineEnd", "closeLineStart", "closeLineEnd", "grammar", "render", "element", "katex", "_state", "classes", "container", "block", "dom", "katexTarget", "makeQueue", "process", "task", "blankState", "partialState", "makeStore", "createSignal", "DropZone", "depth", "setDepth", "files", "setFiles", "isLoading", "setIsLoading", "isVisible", "setIsVisible", "useStore", "closeModal", "dropOnZone", "event", "dragAndDrop", "preventDefault", "stopPropagation", "transfer", "dataTransfer", "uploadFiles", "onDragEnter", "onDragLeave", "onDragOver", "onDrop", "onPaste", "clipboard", "clipboardData", "length", "userFiles", "Array", "forEach", "file", "Promise", "url", "injectMarkup", "markup", "finally", "onMount", "document", "addEventListener", "root", "onCleanup", "removeEventListener", "_el$", "_$getNextElement", "_tmpl$2", "_el$2", "firstChild", "_el$3", "nextSibling", "_el$4", "_el$5", "_el$7", "_el$8", "_co$", "_$getNextMarker", "_el$9", "textContent", "_$insert", "_$createComponent", "For", "each", "slice", "children", "_el$10", "_tmpl$3", "_$effect", "_p$", "_v$", "_v$2", "URL", "createObjectURL", "_$setAttribute", "undefined", "Show", "when", "fallback", "_tmpl$4", "_tmpl$", "$$click", "classList", "toggle", "_$runHydrationEvents", "_$delegateEvents", "makeEditor", "newDoc", "Editor", "enqueue", "Button", "props", "onclick", "Toolbar", "uploader", "setUploader", "formatAs", "uploadChangeHandler", "uploadClickHandler", "click", "_tmpl$15", "_el$45", "_el$46", "_co$13", "_el$47", "_el$48", "_co$14", "_el$49", "_el$50", "_co$15", "_el$51", "_el$52", "_co$16", "toolbar", "heading", "bold", "italic", "_el$11", "_co$2", "_el$12", "_el$13", "_co$3", "InkValues", "Heading", "Bold", "Italic", "quote", "codeBlock", "_el$14", "_el$18", "_el$19", "_co$4", "_el$20", "_el$21", "_co$5", "_el$22", "_el$23", "_co$6", "Quote", "_tmpl$5", "CodeBlock", "_tmpl$6", "Code", "_tmpl$7", "list", "orderedList", "taskList", "_el$24", "_el$28", "_el$29", "_co$7", "_el$30", "_el$31", "_co$8", "_el$32", "_el$33", "_co$9", "List", "_tmpl$8", "OrderedList", "_tmpl$9", "TaskList", "_tmpl$10", "link", "image", "upload", "_el$34", "_el$39", "_el$40", "_co$10", "_el$41", "_el$42", "_co$11", "_el$43", "_el$44", "_co$12", "Link", "_tmpl$11", "Image", "_tmpl$12", "_tmpl$13", "_el$38", "_tmpl$14", "_$use", "setProperty", "DEFAULT_WORDS_PER_MINUTE", "toHuman", "wordsPerMinute", "readTime", "toHumanReadTime", "wordCount", "toHumanWordCount", "lineCount", "toHumanLineCount", "charCount", "toHumanCharCount", "toCharCount", "toLineCount", "toReadTime", "readTimeMinutes", "readTimeSeconds", "toWordCount", "scrubbed", "Details", "readability", "_$memo", "interface", "attribution", "Styles", "vars", "setVars", "createEffect", "mediaQueryList", "window", "matchMedia", "listener", "_event", "isConnected", "data", "join", "Root", "setRoot", "_el$6", "_$spread", "_$mergeProps", "AppContext", "createContext", "AppProvider", "Provider", "useContext", "App", "hydrate", "target", "options", "store", "makeStore", "solidPrepareForHydration", "solidHydrate", "_$createComponent", "App", "makeInstance", "ink", "querySelector", "HYDRATION_MARKER_SELECTOR", "render", "inkPlugin", "key", "type", "value", "Proxy", "get", "prop", "_receiver", "isPromise", "then", "val", "plugin", "solidRender", "renderToString", "e", "t", "window", "_$HY", "events", "completed", "WeakSet", "r", "hasAttribute", "host", "Node", "parentNode", "forEach", "o", "document", "addEventListener", "s", "composedPath", "a", "has", "push", "init", "Promise", "set", "unset", "load"]
}
