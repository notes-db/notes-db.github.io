{
  "version": 3,
  "sources": ["../../ink-mde/src/vendor/extensions/search.tsx"],
  "sourcesContent": ["import { SearchQuery, findNext, findPrevious, getSearchQuery, search as searchExtension, searchKeymap, setSearchQuery } from '@codemirror/search'\nimport { keymap, runScopeHandlers } from '@codemirror/view'\nimport { createRoot, createSignal } from 'solid-js'\n\nexport const search = () => {\n  return [\n    searchExtension({\n      top: true,\n      createPanel: (view) => {\n        return createRoot((dispose) => {\n          const [query, setQuery] = createSignal(getSearchQuery(view.state))\n          let el: HTMLInputElement | undefined\n\n          const handleKeyDown = (event: KeyboardEvent) => {\n            if (runScopeHandlers(view, event, 'search-panel')) return event.preventDefault()\n\n            if (event.code === 'Enter') {\n              event.preventDefault()\n\n              if (event.shiftKey) {\n                findPrevious(view)\n              } else {\n                findNext(view)\n              }\n            }\n          }\n\n          const updateSearch = (event: InputEvent) => {\n            // @ts-expect-error \"value\" is not a recognized property of EventTarget.\n            const { value } = event.target\n\n            setQuery(new SearchQuery({ search: value }))\n            view.dispatch({ effects: setSearchQuery.of(query()) })\n          }\n\n          return {\n            destroy: () => {\n              dispose()\n            },\n            dom: (\n              <div class='ink-mde-search-panel' onKeyDown={handleKeyDown}>\n                <input attr:main-field='true' class='ink-mde-search-input' onInput={updateSearch} onKeyDown={handleKeyDown} ref={el} type=\"text\" value={query().search} />\n              </div>\n            ) as HTMLElement,\n            mount: () => {\n              el?.focus()\n            },\n            top: true,\n          }\n        })\n      },\n    }),\n    keymap.of(searchKeymap),\n  ]\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIaA,IAASA,MACb,CACLC,OAAgB;EACdC,KAAK;EACLC,aAAcC,CAAAA,MACLC,WAAYC,CAAAA,MAAY;AAC7B,UAAM,CAACC,GAAOC,CAAQ,IAAIC,aAAaC,eAAeN,EAAKO,KAAK,CAAC;AACjE,QAAIC;AAEJ,UAAMC,IAAiBC,CAAAA,MAAyB;AAC9C,UAAIC,iBAAiBX,GAAMU,GAAO,cAAc;AAAG,eAAOA,EAAME,eAAAA;AAE5DF,QAAMG,SAAS,YACjBH,EAAME,eAAc,GAEhBF,EAAMI,WACRC,aAAaf,CAAI,IAEjBgB,SAAShB,CAAI;IAAA,GAKbiB,IAAgBP,CAAAA,MAAsB;AAE1C,YAAM;QAAEQ,OAAAA;MAAAA,IAAUR,EAAMS;AAExBf,QAAS,IAAIgB,YAAY;QAAExB,QAAQsB;MAAO,CAAA,CAAC,GAC3ClB,EAAKqB,SAAS;QAAEC,SAASC,eAAeC,GAAGrB,EAAAA,CAAO;MAAE,CAAC;IAAA;AAGvD,WAAO;MACLsB,SAASA,MAAM;AACbvB,UAAAA;MACD;MACDwB,MAAG,MAAA;AAAA,cAAAC,IAAAC,eAAAC,CAAA,GAAAC,IAAAH,EAAAI;AAAAJ,UAAAK,YAC4CvB;AAAa,cAAAwB,IACyDzB;AAAE,eAAA,OAAAyB,KAAAC,aAAAA,IAAAD,GAAAH,CAAA,IAAFtB,IAAEsB,GAAAA,EAAAE,YAAtBvB,GAAaqB,EAAAK,UAAtClB,GAAYmB,aAAAN,GAAA,cAAzD,MAAM,GAAAO,mBAAA,MAAAP,EAAAZ,QAA2Gf,EAAO,EAACP,MAAM,GAAA0C,mBAAAA,GAAAX;MAAAA,GAE1I;MAChBY,OAAOA,MAAM;AACX/B,+BAAIgC;MACL;MACD1C,KAAK;IAAA;EAET,CAAC;AAEJ,CAAA,GACD2C,OAAOjB,GAAGkB,YAAY,CAAC;AAE1BC,eAAA,CAAA,WAAA,OAAA,CAAA;",
  "names": ["search", "searchExtension", "top", "createPanel", "view", "createRoot", "dispose", "query", "setQuery", "createSignal", "getSearchQuery", "state", "el", "handleKeyDown", "event", "runScopeHandlers", "preventDefault", "code", "shiftKey", "findPrevious", "findNext", "updateSearch", "value", "target", "SearchQuery", "dispatch", "effects", "setSearchQuery", "of", "destroy", "dom", "_el$", "_$getNextElement", "_tmpl$", "_el$2", "firstChild", "$$keydown", "_ref$", "_$use", "$$input", "_$setAttribute", "_$effect", "_$runHydrationEvents", "mount", "focus", "keymap", "searchKeymap", "_$delegateEvents"]
}
