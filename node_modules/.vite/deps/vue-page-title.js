import "./chunk-6VKAD5OU.js";
import {
  computed,
  inject,
  ref,
  watch
} from "./chunk-Y5TCTR67.js";
import "./chunk-THBTSZW5.js";

// node_modules/vue-page-title/dist/index.es.js
var isFunction = (val) => typeof val === "function";
var safeString = (st) => (st || "").toString();
var isBrowser = () => typeof document !== "undefined";
var buildPageTitle = (value, options = {}) => {
  const { prefix, suffix } = options;
  return `${safeString(prefix)} ${value} ${safeString(suffix)}`.trim();
};
var setPageTitle = (value, options = {}) => {
  if (!isBrowser()) {
    console.warn("vue-page-title: no browser enviroment");
    return;
  }
  value = safeString(value);
  if (value.length === 0) {
    return;
  }
  const { setTitleMethod } = options;
  const title = buildPageTitle(value, options);
  if (setTitleMethod != null) {
    setTitleMethod(title);
    return;
  }
  document.title = title;
};
var setupRouter = (router, setTitle) => {
  router.afterEach((to, from) => {
    const { meta } = to;
    if ((meta == null ? void 0 : meta.title) != null) {
      setTitle(meta.title);
    }
  });
};
var PAGE_TITLE = Symbol("title");
var SET_PAGE_TITLE = Symbol("set-title");
var pageTitleMixin = {
  created() {
    const { title } = this.$options;
    if (title === void 0) {
      return;
    }
    if (isFunction(title)) {
      this.$watch(
        () => title.call(this, this),
        (val) => {
          this.$setPageTitle(val);
        },
        { immediate: true }
      );
      return;
    }
    this.$setPageTitle(title);
  }
};
var useTitle = (initial) => {
  const title = inject(PAGE_TITLE, ref(""));
  const setTitle = inject(SET_PAGE_TITLE, () => {
  });
  if (typeof initial === "string") {
    setTitle(initial);
  } else if (initial != null) {
    watch(initial, setTitle, { immediate: true });
  }
  return {
    title: computed(() => title == null ? void 0 : title.value),
    setTitle
  };
};
var pageTitle = (options = {}) => {
  const $title = ref("");
  const setTitle = (val) => {
    setPageTitle(val, options);
    $title.value = val;
  };
  const installedApps = /* @__PURE__ */ new WeakSet();
  if (options.router != null) {
    setupRouter(options.router, setTitle);
  }
  const install = (app) => {
    var _a;
    if (installedApps.has(app)) {
      return;
    }
    installedApps.add(app);
    if ((_a = options.mixin) != null ? _a : false) {
      app.mixin(pageTitleMixin);
    }
    app.provide(PAGE_TITLE, $title);
    app.provide(SET_PAGE_TITLE, setTitle);
    Object.defineProperty(app.config.globalProperties, "$title", {
      get: () => $title.value
    });
    Object.defineProperty(app.config.globalProperties, "$setPageTitle", {
      get: () => setTitle
    });
  };
  return { install };
};
export {
  pageTitle,
  pageTitleMixin,
  useTitle
};
/*! vue-page-title v2.0.5
 * Vue.js html/page title manager
 * https://github.com/vinicius73/vue-page-title
 * (c) 2018-2022 Vinicius Reis <luiz.vinicius73@gmail.com>
 */
//# sourceMappingURL=vue-page-title.js.map
