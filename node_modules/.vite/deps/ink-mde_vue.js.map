{
  "version": 3,
  "sources": ["../../ink-mde/vue/src/InkMde.vue"],
  "sourcesContent": ["<template>\n  <div ref=\"ink\" v-html=\"html\"></div>\n</template>\n\n<script lang=\"ts\">\nimport { ink, renderToString } from 'ink-mde'\nimport { defineComponent, type PropType } from 'vue'\nimport type * as Ink from 'ink-mde'\n\nexport default defineComponent({\n  name: 'InkMde',\n  emits: ['update:modelValue'],\n  props: {\n    modelValue: {\n      type: String,\n    },\n    options: {\n      type: Object as PropType<Ink.Options>,\n    },\n  },\n  data() {\n    return {\n      html: '',\n      instance: undefined,\n    } as { html: string, instance?: Ink.Instance }\n  },\n  watch: {\n    modelValue(value) {\n      if (this.instance?.getDoc() !== value) {\n        this.instance?.update(value)\n      }\n    },\n    options: {\n      deep: true,\n      handler(newValue, _oldValue) {\n        this.instance?.reconfigure(newValue)\n      },\n    },\n  },\n  methods: {\n    tryInit() {\n      if (this.$refs.ink && !this.instance) {\n        this.instance = ink(this.$refs.ink as HTMLElement, {\n          ...this.options,\n          doc: this.modelValue,\n          hooks: {\n            ...this.options?.hooks,\n            afterUpdate: (doc: string) => {\n              this.$emit('update:modelValue', doc)\n\n              if (this.options?.hooks?.afterUpdate) {\n                this.options.hooks.afterUpdate(doc)\n              }\n            },\n          },\n        })\n\n        // @ts-expect-error Todo: Fix type recognition on $refs.\n        this.$refs.ink.addEventListener('input', (event: InputEvent) => {\n          event.stopPropagation()\n        })\n      }\n    },\n  },\n  created() {\n    if (import.meta.env.VITE_SSR) {\n      this.html = renderToString(this.options)\n    }\n  },\n  mounted() {\n    this.tryInit()\n  },\n  updated() {\n    this.tryInit()\n  },\n})\n</script>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAAA,IAAeC,gBAAgB;EAC7B,MAAM;EACN,OAAO,CAAC,mBAAmB;EAC3B,OAAO;IACL,YAAY;MACV,MAAM;IACR;IACA,SAAS;MACP,MAAM;IACR;EACF;EACA,OAAO;AACE,WAAA;MACL,MAAM;MACN,UAAU;IAAA;EAEd;EACA,OAAO;IACL,WAAWC,GAAO;;AAChB,QAAIC,IAAA,KAAK,aAAL,OAAA,SAAAA,EAAe,OAAA,OAAaD,OACzBE,IAAA,KAAA,aAAA,QAAAA,EAAU,OAAOF,CAAAA;IAE1B;IACA,SAAS;MACP,MAAM;MACN,QAAQG,GAAUC,GAAW;;AACtB,SAAAH,IAAA,KAAA,aAAA,QAAAA,EAAU,YAAYE,CAAAA;MAC7B;IACF;EACF;EACA,SAAS;IACP,UAAU;;AACJ,WAAK,MAAM,OAAO,CAAC,KAAK,aAC1B,KAAK,WAAWE,GAAI,KAAK,MAAM,KAAoB;QACjD,GAAG,KAAK;QACR,KAAK,KAAK;QACV,OAAO;UACL,IAAGJ,IAAA,KAAK,YAAL,OAAA,SAAAA,EAAc;UACjB,aAAa,CAACK,MAAgB;;AACvB,iBAAA,MAAM,qBAAqBA,CAAG,IAE/BJ,KAAAD,IAAA,KAAK,YAAL,OAAA,SAAAA,EAAc,UAAd,QAAAC,EAAqB,eAClB,KAAA,QAAQ,MAAM,YAAYI,CAAG;UAEtC;QACF;MAAA,CACD,GAGD,KAAK,MAAM,IAAI,iBAAiB,SAAS,CAACC,MAAsB;AAC9DA,UAAM,gBAAgB;MAAA,CACvB;IAEL;EACF;EACA,UAAU;AACJ,KAAgB,CAAA,GAAA,aACb,KAAA,OAAOC,GAAe,KAAK,OAAO;EAE3C;EACA,UAAU;AACR,SAAK,QAAQ;EACf;EACA,UAAU;AACR,SAAK,QAAQ;EACf;AACF,CAAC;AAlED,IAkEC,IAAA,CAAA,GAAA,MAAA;;;;;;AAlED;SARWC,EAAKC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA;AAAC,SAAAC,UAAA,GAAYC,mBAAA,OAAA;IAAA,KAAA;IAAA,WAAA,EAAA;;;;",
  "names": ["_sfc_main", "defineComponent", "value", "_a", "_b", "newValue", "_oldValue", "ink", "doc", "event", "renderToString", "_sfc_render", "_ctx", "_cache", "$props", "$setup", "$data", "$options", "_openBlock", "_createElementBlock"]
}
